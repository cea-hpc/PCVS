#!/bin/nawk -f
#
#  To calculate all the averages for a kernel test with given key.
#  key: "write"....

BEGIN {
	tmpfile = testname ".avs";
	print "#testname",testname > tmpfile;
	print "#" >> tmpfile;
	print "#proc,av,SD,max,min" >> tmpfile;
	print "#" >> tmpfile;
	gotdate = 0;
}
 
  (($1 == "##")&&($2 == "Test")&&($3 == "input")&&($4 == "arguments")){
  testOn = 0;
  fsizeOn = 0;
}


  ("nprocs" == $1){
  nprocs = $2;
}


  (("testname" == $1)&&(testname == $2)){
  testOn = 1;
}

  (($1 == "##")&&($2 == "Test")&&($3 == "output")&&($4 == "information")){
  fsizeOn = 1;
  tnprocs = nprocs;
  for (i=0;i<tnprocs;i++){
    sum[i] = 0.0;
    sums[i] = 0.0;
    Nthing = 0;
    mint[i] = 1000000.0;
    maxt[i] = 0.0;
  }
}


  ((testOn == 1)&&(fsizeOn == 1)&&($1 == key)){
  tnprocs = nprocs;
  Nthing += 1;
  for (i=0;i<tnprocs;i++){
    j = i + 2;
    sum[i] += $j;
    sums[i] += $j*$j;
    if($j > maxt[i]) maxt[i] = $j;
    if($j < mint[i]) mint[i] = $j;
  }
}       


  ($1 == "timestamp"){
  date = $2;
  gotdate = (gotdate + 1)%2;
  if((gotdate == 0)&&(Nthing > 0)){
  for (i=0;i<tnprocs;i++){
    sum[i] = sum[i]/Nthing;
    sums[i] = sums[i]/Nthing;
    sums[i] = sums[i] - sum[i]*sum[i];
    sums[i] = sqrt(sums[i]);
  }
  for (i=0;i<tnprocs;i++){
  printf "%d %f %f %f %f\n",i+1,sum[i],sums[i],maxt[i],mint[i] >> tmpfile;
  }
  }
}






