dnl -*- Mode : shell-script ; -*-
dnl Caching is usually WRONG for systems with cross-mounted file systems
dnl (the cache file may correspond to a different system).  Since configure
dnl is not on a performance-critical path, go for robustness over speed.
dnl
define([AC_CACHE_LOAD], )dnl
define([AC_CACHE_SAVE], )dnl
dnl
AC_PREREQ(2.59)
AC_INIT(bin/mpitest.in)
AC_ARG_ENABLE(echo,echo - Turn on strong echoing,set -x)
AC_ARG_ENABLE(copyorig,copyorig - Use original include files,,enable_copyorig=yes)
AC_ARG_ENABLE(fortranoptionaltypes,fortranoptionaltypes - Enable the use of optional fortran datatypes,,enable_fortranoptionaltypes=yes)
AC_ARG_ENABLE(fixforttypes,fixforttypes - Check to see if fortran datatypes are supported,,enable_fixforttypes=yes)
dnl
dnl By default, we should not run any tests that require that we 
dnl run a program.  Unfortunately, the testdatatypes test requires that
dnl we run an MPI program
AC_ARG_ENABLE(testdatatypes,testdatatypes - Check to see if MPI_Datatypes are compatible with the current compiler's corresponding datatypes,,enable_testdatatypes=no)
AC_ARG_ENABLE(fixstart,fixstart - Install new startjob file,,enable_fixstart=yes)
AC_ARG_ENABLE(f90,[--enable-f90 - Create the routines needed to test the Fortran 90 binding of MPI-1.2],,enable_f90=no)
AC_ARG_ENABLE(coverage,
[--enable-coverage - Turn on coverage analysis using gcc and gcov],,
enable_coverage=no)
AC_ARG_ENABLE(maxprocs,[--enable-maxprocs=n - Set the maximum size of MPI_COMM_WORLD that will be used],,enable_maxprocs=64)
#
progname="`echo $0 | sed 's:^\./\./:\./:'`"
#
echo " "
echo "Configuring the Intel test suite"
echo " "

# Let the user set some of the MPITEST_xxx environment as a way to
# handle other environments
MPICH_DEV=
#MPITEST_CC=
#MPITEST_F77=
#MPITEST_CFLAGS=
#MPITEST_FFLAGS=
#MPIRUN=
MPI_IMP=""
#MPITEST_ARCH=
MPITEST_MAKE=make
MPITEST_AT=@
MPITEST_AR=ar
MPITEST_AR860=ar860
MPITEST_CPP=
MPITEST_BUF=
MPITEST_DEFHOST=
MPI_LIB="-lmpi -lm"
MPITEST_USERLIB=
MPITEST_INCLUDE_OPTION=
MPITEST_BASE_INCLUDE=
MPITEST_CLIB=
MPITEST_FLIB=
MPITEST_MPICLIB=
MPITEST_MPIFLIB=
MPITEST_HOME=
MPITEST_INCLUDE_DIR=
MPITEST_MPI_INCLUDE_DIR=
MPIRUN_DIR=""

F77=${FC:-f77}
# We should not use any Fortran compiler other than the MPIF77 compiler 
# or one that is consistent with that
F77=false 
#
# In fact, we should be very careful about using a C compiler as well -
# this is less likely to cause a problem
AC_PROG_CC

MPITEST_HOME=`pwd`
MPITEST_INCLUDE_DIR="${srcdir}/include"
MPITEST_SRCDIR=$srcdir

if test "$enable_coverage" = "yes" ; then
    if test "$ac_cv_prog_gcc" = "yes" ; then
        MPITEST_CFLAGS="$MPITEST_CFLAGS -fprofile-arcs -ftest-coverage"
    else
        AC_MSG_WARN([--enable-coverage only supported for GCC])
    fi
#    if test "$ac_cv_prog_g77" = "yes" ; then 
#        MPITEST_FFLAGS="$MPITEST_FFLAGS -fprofile-arcs -ftest-coverage"
#    else
#        AC_MSG_WARN([--enable-coverage only supported for GCC])
#    fi
fi

# Check for any potential VPATH problems
if test "`cd $srcdir && pwd`" != "`pwd`" ; then
    # We're doing a VPATH build
    nofiles=yes
    stray_files=""
    if test -s $srcdir/config.status ; then 
        nofiles=no
        stray_files="$stray_files $srcdir/config.status"
    fi
    for file in $srcdir/lib/libmpitest*.a ; do
        if test -s $file ; then 
	    nofiles=no
            stray_files="$stray_files $file"
	fi
    done
    if test "$nofiles" != yes ; then
        AC_MSG_ERROR([You cannot do a VPATH build if the source directory has been configured.  Found files$stray_files])
    fi
fi

# Create any necessary directories (in case of a VPATH build)
if test ! -d $MPITEST_HOME/bin ; then mkdir $MPITEST_HOME/bin ; fi
if test ! -d $MPITEST_HOME/include ; then mkdir $MPITEST_HOME/include ; fi

if test "$enable_copyorig" != "no" ; then
    echo "Using Original Include files"
    PAC_COPY_ORIG_BACK 
fi

#
# MPICH MPI
#
AC_ARG_WITH(mpich2,[--with-mpich2=MPI_DIR Top-level directory for MPICH2/MPI],MPI_IMP="mpich2" WITHDIR=$withval)

AC_ARG_WITH(mpich, [--with-mpich=MPI_DIR  Top-level directory for MPICH/MPI], MPI_IMP="mpich" WITHDIR=$withval)
AC_ARG_WITH(mpichdev, [--with-mpichdev=LIBDIR Library subdirectory for MPICH/MPI], MPI_IMP="mpich" MPICH_DEV=$withval)

#
# Set the default include path
MPITEST_BASE_INCLUDE="-I${MPITEST_HOME}/include -I${MPITEST_HOME}/lib -I${MPITEST_INCLUDE_DIR}"

if test "$MPI_IMP" = "mpich" ; then

    if test "$WITHDIR" = "yes" ; then
        AC_MSG_ERROR([supplied --with-mpich without a directory])
    fi

    if test -x $WITHDIR/util/tarch; then 
        MPITEST_ARCH=`$WITHDIR/util/tarch | sed s/-/_/g`
    elif test -x $WITHDIR/bin/tarch; then
        MPITEST_ARCH=`$WITHDIR/bin/tarch | sed s/-/_/g`
    else
        # Specify mpich1 as the arch instead of the system name,
	# just to get something
        MPITEST_ARCH=mpich1
    fi
    if test -x $WITHDIR/bin/mpicc ; then
        MPITEST_CC=$WITHDIR/bin/mpicc
	MPITEST_F77=$WITHDIR/bin/mpif77
	MPITEST_F90=$WITHDIR/bin/mpif90
	MPIRUN=$WITHDIR/bin/mpirun
        MPITEST_INCLUDE_OPTION=$MPITEST_BASE_INCLUDE
	MPI_LIB="-lm"
        MPITEST_MPICLIB="-lm"
        MPITEST_MPIFLIB="-lm"
        MPITEST_LIBPMPI=""
    else 
        if test ! "$MPICH_DEV" = "" ; then
            DEVICE=$MPICH_DEV
        else
	    AC_MSG_ERROR([must use --with-mpichdev=subdir when configuring for MPICH])
        fi
    
        MPICH_DEV=lib/$ARCH/$DEVICE
        MPITEST_CC=$WITHDIR/$MPICH_DEV/mpicc
        MPITEST_F77="$WITHDIR/$MPICH_DEV/mpif77"
        MPITEST_F90="$WITHDIR/$MPICH_DEV/mpif90"
        #MPITEST_FFLAGS="-y_MALLOC -y_FREE"
        MPITEST_INCLUDE_OPTION="$MPITEST_BASE_INCLUDE -I$WITHDIR/$MPICH_DEV -I$WITHDIR/include"
        MPITEST_MPICLIB="-L$WITHDIR/$MPICH_DEV -lmpich -lm"
        MPITEST_MPIFLIB="-L$WITHDIR/$MPICH_DEV -lmpich -lm"
        MPIRUN="$WITHDIR/$MPICH_DEV/mpirun"
        MPITEST_MPI_INCLUDE_DIR=$WITHDIR/include
    fi
fi

if test "$MPI_IMP" = "mpich2" ; then

    if test "$WITHDIR" = "yes" ; then
        AC_MSG_ERROR([supplied --with-mpich2 without a directory])
    fi

    MPITEST_ARCH=mpich2
    if test -x $WITHDIR/bin/mpicc ; then
        MPITEST_CC=$WITHDIR/bin/mpicc
	MPITEST_F77=$WITHDIR/bin/mpif77
	MPITEST_F90=$WITHDIR/bin/mpif90
	MPIRUN=$WITHDIR/bin/mpiexec
	MPITEST_MPIEXEC=$WITHDIR/bin/mpiexec
	MPITEST_MPIEXEC_NP="-n"
        MPITEST_INCLUDE_OPTION=$MPITEST_BASE_INCLUDE
	MPI_LIB="-lm"
        MPITEST_MPICLIB="-lm"
        MPITEST_MPIFLIB="-lm"
        MPITEST_LIBPMPI=""
    else 
        MPITEST_CC="gcc -I$WITHDIR/include"
	MPITEST_F77="f77 -I$WITHDIR/include"
	MPITEST_F90="f90 -I$WITHDIR/include"
	MPIRUN="$WITHDIR/bin/mpiexec"
        MPITEST_INCLUDE_OPTION=$MPITEST_BASE_INCLUDE
	MPI_LIB="-lmpich -lm"
        MPITEST_MPICLIB="-L$WITHDIR/lib -lmpich -lm"
        MPITEST_MPIFLIB="-L$WITHDIR/lib -lmpich -lm"
        MPITEST_LIBPMPI=""
    fi
    MPITEST_MPI_INCLUDE_DIR=$WITHDIR/include
fi

#
# IBM SP
#

AC_ARG_WITH(sp,	[--with-sp  Use IBM's SP/MPI], MPI_IMP="ibm-sp")
AC_ARG_WITH(mpirun, [--with-mpirun Must create a mpirun script to run on the sp], MPIRUN_DIR=$withval)

if test "$MPI_IMP" = "ibm-sp"; then
    # Some more recent versions support mpiexec
    if test -z "$MPIEXEC" ; then 
        AC_PATH_PROG(MPIEXEC,mpiexec,NOT_FOUND)
    fi
    if test "$MPIEXEC" = "NOT_FOUND" ; then
        MPIEXEC=
        if test "$MPIRUN_DIR" = "" ; then
	    AC_MSG_ERROR([must use --with-mpirun="path of mpirun script" when configuring])
        else
            MPIRUN=$withval/mpirun
        fi
    else
        MPIRUN=$MPIEXEC
	MPITEST_MPIEXEC_NP="-n"
    fi
   
    MPITEST_ARCH=ibm

    AC_PATH_PROG(MPITEST_CC, mpcc, doh)
    if test "$MPITEST_CC" = "doh"; then
        AC_MSG_CHECKING([for mpcc (elsewhere)])
        foreach comp /bin/mpcc /usr/bin/mpcc
            if test "$MPITEST_CC" = "" -a -x $comp; then
                AC_MSG_RESULT([yes])
                MPICC=$comp
            fi
        end
        if test "$MPITEST_CC" = ""; then
            AC_MSG_RESULT([no])
            AC_MSG_ERROR([cannot continue -- put mpcc in your path])
        fi
    fi

    AC_PATH_PROG(MPITEST_F77, mpxlf, doh)
    if test "$MPITEST_F77" = "doh"; then
        AC_MSG_CHECKING([for mpxlf (elsewhere)])
        foreach comp /bin/mpxlf /usr/bin/mpxlf
            if test "$MPITEST_F77" = "" -a -x $comp; then
                AC_MSG_RESULT([yes])
                MPITEST_F77=$comp
            fi
        end
        if test "$MPITEST_F77" = ""; then
            AC_MSG_RESULT([no])
            AC_MSG_ERROR([cannot continue -- put mpxlf in your path])
        fi
    fi
    if test "$enable_f90" = "yes" ; then
        AC_PATH_PROG(MPITEST_F90, mpxlf, doh)
        if test "$MPITEST_F90" = "doh"; then
            AC_MSG_CHECKING([for mpxlf (elsewhere)])
            foreach comp /bin/mpxlf /usr/bin/mpxlf
                if test "$MPITEST_F90" = "" -a -x $comp; then
                    AC_MSG_RESULT([yes])
                    MPITEST_F90=$comp
                fi
            end
            if test "$MPITEST_F90" = ""; then
                AC_MSG_RESULT([no])
                AC_MSG_ERROR([cannot continue -- put mpxlf in your path])
            fi
        fi
    fi

    MPITEST_INCLUDE_OPTION=$MPITEST_BASE_INCLUDE
    MPITEST_MPICLIB="-lmpi -lm"
    MPITEST_MPIFLIB="-lmpi -lm"
fi

#
# SGI IRIX 6.4
#
AC_ARG_WITH(sgi32, [--with-sgi32 Use SGI's IRIX/32 MPI], MPI_IMP="sgi32")
AC_ARG_WITH(sgi64, [--with-sgi64 Use SGI's IRIX/64 MPI], MPI_IMP="sgi64") 

if test "$MPI_IMP" = "sgi32" -o "$MPI_IMP" = "sgi64"; then
    MPITEST_ARCH=$MPI_IMP

    if test "$MPI_IMP" = "sgi32"; then
        if test -f /usr/lib32/libmpi.so; then
            LIBDIR=/usr/lib32
            SGIFLAGS="-n32"
            SGIBIT="n32"
        fi
    elif test "$MPI_IMP" = "sgi64" ; then
	if test -f /usr/lib64/libmpi.so; then
            AC_DEFINE(POINTER, long,[Define if a pointer can be store in a long])
            LIBDIR=/usr/lib64
            SGIFLAGS="-64"
            SGIBIT="64"
	fi
    else
            AC_MSG_ERROR([cannot find libmpi.so in /usr/lib32 or /usr/lib64])
    fi
 
    MPITEST_CC=cc
    MPITEST_F77=f77
    MPITEST_F90=f90
    MPITEST_INCLUDE_OPTION="$MPITEST_BASE_INCLUDE -I$LIBDIR"
    MPITEST_MPICLIB="-L$LIBDIR -lmpi -lm"
    MPITEST_MPIFLIB="-L$LIBDIR -lmpi -lm"
    MPIRUN=mpirun
    MPITEST_FFLAGS="$SGIFLAGS"
    MPITEST_CFLAGS="$SGIFLAGS"
fi    

AC_ARG_WITH(mpi,[--with-mpi=directory containing mpicc, mpif77, and mpiexec])
if test -n "$with_mpi" ; then
    if test -x "$with_mpi/mpicc" ; then
        mpidir=$with_mpi
    elif test -x "$with_mpi/bin/mpicc" ; then
        mpidir=$with_mpi/bin
    else 
        AC_MSG_ERROR([Could not find mpicc in $with_mpi])
    fi
    MPITEST_CC="$mpidir/mpicc"
    if test -x "$mpidir/mpif77" ; then
        MPITEST_F77="$mpidir/mpif77"
    else
        AC_MSG_ERROR([Could not find mpif77 in $with_mpi])
    fi
    if test "$enable_f90" = "yes" ; then
        if test -x "$mpidir/mpif90" ; then
            MPITEST_F90="$mpidir/mpif90"
        else
            AC_MSG_ERROR([Could not find mpif90 in $with_mpi])
        fi
    fi
    if test -x "$mpidir/mpiexec" ; then
        MPIRUN=$mpidir/mpiexec
	MPITEST_MPIEXEC_NP="-n"
    elif test -x "$mpidir/mpirun" ; then
        MPIRUN=$mpidir/mpirun
	MPITEST_MPIEXEC_NP="-np"
    else
        AC_MSG_ERROR([Could not find mpiexec or mpirun in $with_mpi])
    fi
    # No separate MPI library if --with-mpi selected
    MPI_LIB="-lm"
    MPI_IMP="Generic"
    MPITEST_INCLUDE_OPTION=$MPITEST_BASE_INCLUDE
fi

PAC_TRY_COMPILE_MPI

if test "$MPI_IMP" = "" ; then
    AC_MSG_ERROR([Must either configure with a known MPI implementation 
    such as MPICH, MPICH2, SGI32, SGI64, or SP, or by setting the environment
    variables
        MPITEST_CC  - C compiler for MPI programs
        MPITEST_F77 - F77 compiler for MPI programs
        MPITEST_F90 - F90 compiler for MPI programs (if --enable-f90 given)
	MPIRUN      - Program used to run MPI programs
    ])
fi

#
# Make sure that the MPITEST_ARCH value is set - the build process now
# requires it (otherwise you get libmpitest_.a and similar files
if test -z "$MPITEST_ARCH" ; then
    AC_MSG_ERROR([No MPITEST_ARCH was specified or determined.  You can specify it on the command line with MPITEST_ARCH=your-choice-of-name.])
fi

# Note that we set RANLIB to true if we don't find it (some systems neither
# need it nor provide it)
AC_CHECK_PROGS(RANLIB,ranlib,true)
if test "$RANLIB" = "true" ; then
    MPITEST_RUN_RANLIB=
else
    MPITEST_RUN_RANLIB=yes
    MPITEST_RANLIB=$RANLIB
fi
AC_SUBST(MPITEST_RANLIB)
AC_SUBST(MPITEST_RUN_RANLIB)

# See if snprintf, vsnprintf, or vprintf is available
saveCC=$CC
CC=$MPITEST_CC
AC_CHECK_FUNCS(snprintf vsnprintf vprintf)
CC=$saveCC
#
# Set defaults
if test -z "$MPITEST_MPIEXEC" ; then
   MPITEST_MPIEXEC=$MPIRUN
   MPITEST_MPIEXEC_NP="-np"
fi
AC_SUBST(MPITEST_MPIEXEC)
AC_SUBST(MPITEST_MPIEXEC_NP)

FIX_FILE=0

if test "$enable_fortranoptionaltypes" != "no" ; then
        PAC_TEST_FORTTYPES
elif test "$enable_fortranoptionaltypes" = "no" ; then 
    if test "$enable_fixforttypes" = "yes" ; then
        FIX_FILE=1
    fi
fi
#
if test $FIX_FILE = 1; then
    echo " "
    echo "Copying original mpitest_cfgf.h into mpitest_cfgf.h.orig"
    echo "Creating a new mpitest_cfgf.h"
    echo " "
    echo "These files are located in the MPITEST/include directory"
    if test "$enable_fortranoptionaltypes" = "no" ; then
        echo " "
        echo "Removing fortran optional datatypes from mpitest_cfgf.h"
    fi 
    PAC_FIX_MPITEST_FILES
fi
#
#
FIX_CFG=0
FIX_DEF=0
if test "$enable_testdatatypes" != "no" ; then
    echo " "
    echo "Checking for incompatible data types"
    PAC_TEST_DATATYPES
fi
#
if test $FIX_CFG = 1; then
    echo " "
    echo "Copying original mpitest_cfg.h into mpitest_cfg.h.orig"
    echo "Creating a new mpitest_cfg.h"
    echo "This file is located in the MPITEST/include directory"
fi
#
if test $FIX_DEF = 1; then
    echo " "
    echo "Copying original mpitest_def.h into mpitest_def.h.orig"
    echo "Creating a new mpitest_def.h"
    echo "This file is located in the MPITEST/include directory"
fi
#
# Fixup the parameters in mpitestf.h by using configure to 
# replace them
IOSIZE=512
AC_SUBST(IOSIZE)
# Set the default
MAX_RANKS=64
# Reset from --enable-maxprocs if used
if test -n "$enable_maxprocs" ; then
    changequote(<<,>>)
    if expr "0$enable_maxprocs" : ".*[^0123456789]" >/dev/null ; then
    changequote([,])
        AC_MSG_WARN([--enable-maxprocs=$enable_maxprocs must specify an integer value])
    else 
        MAX_RANKS=$enable_maxprocs
    fi
fi
AC_SUBST(MAX_RANKS)
#
if test "$enable_f90" = "yes" ; then
   # find PERL so that we can create the f90 tests
   AC_PATH_PROG(PERL,perl)
   AC_SUBST(PERL)
fi
#
# If we are using g77 we may need to use -fno-globals -Wno-globals to 
# compile libmpitestf.F
F77_SAVE="$F77"
F77=$MPITEST_F77
AC_LANG_FORTRAN77
if test -z "$ac_cv_f77_compiler_gnu" ; then
    # If we don't use `.F' as extension, the preprocessor is not run on the
    # input file.  (Note that this only needs to work for GNU compilers.)
    AC_CACHE_CHECK([whether $F77 is GNU Fortran],ac_cv_f77_compiler_gnu,[
    ac_save_ext=$ac_ext
    ac_ext=F
    AC_TRY_COMPILE([],[
      program main
#ifndef __GNUC__
       choke me
#endif

      end],ac_cv_f77_compiler_gnu=no,ac_cv_f77_compiler_gnu=yes)])
fi
AC_MSG_CHECKING([if Fortran routines accept different argument types])
dnl We can't use AC_TRY_COMPILE because it won't let us add the t1 routine
dnl as the first arg to AC_TRY_COMPILE
cat > conftest.f <<EOF
       subroutine t1( buf )
       integer buf(*)
       call binwrite(buf,10)
       end
       subroutine t2
       real buf
       call t1( buf )
       end
EOF
if AC_TRY_EVAL(ac_compile); then
  rm -rf conftest*
  f77_diff_types=yes
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  #  rm -rf conftest*
  f77_diff_types=no
fi
AC_MSG_RESULT($f77_diff_types)
if test "$f77_diff_types" = "no" ; then
    if test "$ac_cv_f77_compiler_gnu" = yes ; then
        AC_MSG_CHECKING([whether g77 options -fno-globals is required])
        # If this fails, try adding the necessary options to FFLAGS
        save_FFLAGS="$FFLAGS"
        FFLAGS="$FFLAGS -fno-globals -Wno-globals"
        if AC_TRY_EVAL(ac_compile); then
            f77_diff_types=yes
        else
            f77_diff_types=no
        fi
        AC_MSG_RESULT($f77_diff_types)
        rm -f conftest*
        if test "$f77_diff_types" = "no" ; then
            FFLAGS="$save_FFLAGS"
        else 
            MPITEST_FFLAGS="$MPITEST_FFLAGS -fno-globals -Wno-globals"
        fi
   fi
   # Note that if we can't find the command line argument to turn off
   # errors/warnings when different argument types are used with the same
   # routine, we may not be able to build some of the tests.  We may 
   # want to issue at least a warning if not an error here in that case.
fi
F77="$F77_SAVE"
#
# Check to see if Fortran implements getarg and iargc.  If so, we
# can enable the command line options for -verbose etc.
AC_MSG_CHECKING([if Fortran provides getarg and iargc])
cat > conftest.f <<EOF
       program main
       integer argn
       character *(50) arg
       argn = iargc()
       call getarg( argn, arg )
       end
EOF
if AC_TRY_EVAL(ac_link) && test -x conftest ; then
    pac_cv_f77_has_args=yes
else
    pac_cv_f77_has_args=no
fi
rm -f conftest*
AC_MSG_RESULT($pac_cv_f77_has_args)

# We use the following to comment out the #define in foptions.h.in if
# the commandline routines are not supported
OPT_FCMDLINE=C
if test "$pac_cv_f77_has_args" = yes ; then
    OPT_FCMDLINE=
fi
AC_SUBST(OPT_FCMDLINE)

AC_LANG_C
#
# Determine the Fortran type to use for MPI_AINT calls
# Set a reasonable default.
# We should really use sizeof MPI_Aint, but the autoconf macro for
# sizeof provides no way to include header files (a serious deficiency),
# and in any event, MPI_Aint will normally be the size of void * anyway.
CROSS_SIZEOF_VOID_P=${CROSS_SIZEOF_VOID_P:-4}
AC_CHECK_SIZEOF(void *,$CROSS_SIZEOF_VOID_P)
if test "$ac_cv_sizeof_void_p" != 4 ; then
    F77_AINT="INTEGER*$ac_cv_sizeof_void_p"
else
    F77_AINT="INTEGER"    
fi
AC_SUBST(F77_AINT)
dnl Add this to the subst values so that mpitestf.h can get this size as well
SIZEOF_VOID_P=$ac_cv_sizeof_void_p
AC_SUBST(SIZEOF_VOID_P)

# determine printf format specifications for MPI_Aint
#
AC_CHECK_SIZEOF(short)
AC_CHECK_SIZEOF(int)
AC_CHECK_SIZEOF(long)
AC_CHECK_SIZEOF(long long)

# like the f77 tests for MPI_Aint above, this is not *strictly* correct.
# However, MPI_Aint will in practice be the same size as void *.
for type in int long long_long short ; do
    eval len=\$ac_cv_sizeof_$type
    if test "$len" = "$ac_cv_sizeof_void_p" ; then
        case $type in
            int)
                MPITEST_AINT_FMT_DEC_SPEC="%d"
                MPITEST_AINT_FMT_HEX_SPEC="%x"
            ;;
            long)
                MPITEST_AINT_FMT_DEC_SPEC="%ld"
                MPITEST_AINT_FMT_HEX_SPEC="%lx"
            ;;
            long_long)
                MPITEST_AINT_FMT_DEC_SPEC="%lld"
                MPITEST_AINT_FMT_HEX_SPEC="%llx"
            ;;
            short)
                MPITEST_AINT_FMT_DEC_SPEC="%hd"
                MPITEST_AINT_FMT_HEX_SPEC="%hx"
            ;;
            *)
                AC_MSG_WARN([unable to determine format specifiers for MPI_Aint, defaulting to int])
                MPITEST_AINT_FMT_DEC_SPEC="%d"
                MPITEST_AINT_FMT_HEX_SPEC="%x"
            ;;
        esac
        export MPITEST_AINT_FMT_DEC_SPEC MPITEST_AINT_FMT_HEX_SPEC
        break
    fi
done
AC_DEFINE_UNQUOTED(MPITEST_AINT_FMT_DEC_SPEC, "$MPITEST_AINT_FMT_DEC_SPEC")
AC_DEFINE_UNQUOTED(MPITEST_AINT_FMT_HEX_SPEC, "$MPITEST_AINT_FMT_HEX_SPEC")


# Some of the tests use sleep
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_FUNCS(sleep)
#
if test "$enable_fixstart" != "no" ; then
    echo " "
    echo "Creating a new startjob.${MPITEST_ARCH} file in the MPITEST/bin directory"
    PAC_FIX_START_FILE
fi

MPITEST_CLIB="-L${MPITEST_HOME}/lib -lmpitest_${MPITEST_ARCH}"
MPITEST_FLIB="-L${MPITEST_HOME}/lib -lmpitestf_${MPITEST_ARCH}"

AC_PATH_PROG(BINSH, sh)

AC_SUBST(MPITEST_CC)
AC_SUBST(MPITEST_F77)
AC_SUBST(MPITEST_F90)
AC_SUBST(BINSH)
AC_SUBST(MPITEST_MAKE)
AC_SUBST(MPITEST_AT)
AC_SUBST(MPITEST_AR)
AC_SUBST(MPITEST_AR860)
AC_SUBST(MPITEST_CPP)
AC_SUBST(MPITEST_BUF)
AC_SUBST(MPITEST_CFLAGS)
AC_SUBST(MPITEST_DEFHOST) 
AC_SUBST(MPITEST_FFLAGS)
AC_SUBST(MPITEST_F90FLAGS)
AC_SUBST(MPITEST_MLIB)
AC_SUBST(MPITEST_USERLIB)
AC_SUBST(MPITEST_ARCH)
AC_SUBST(MPITEST_INCLUDE_OPTION)
AC_SUBST(MPITEST_HOME)
AC_SUBST(MPIRUN)
AC_SUBST(MPITEST_CLIB)
AC_SUBST(MPITEST_FLIB)
AC_SUBST(MPITEST_LIBPMPI)  dnl -lpmpi for some systems
AC_SUBST(MPITEST_MPICLIB)
AC_SUBST(MPITEST_MPIFLIB)
AC_SUBST(MPITEST_INCLUDE_DIR)
AC_SUBST(MPITEST_MPI_INCLUDE_DIR)
master_srcdir=$srcdir
if test "$srcdir" = "." ; then
    master_srcdir=`pwd`
fi
AC_SUBST(master_srcdir)
absolute_srcdir=`cd $srcdir && pwd`
AC_SUBST(absolute_srcdir)
#
# Later versions of autoconf will set builddir regardless of any 
# statements within the configure.in file (in particular, 
# setting 
#    builddir=`pwd`
# won't change the fact that builddir may be set to "." by autoconf).
# For this reason, we define buildhomedir instead.
buildhomedir=`pwd`
AC_SUBST(buildhomedir)
#
# Make a copy of the "env" file with the MPITEST_ARCH extension
AC_OUTPUT_COMMANDS([chmod +x bin/mpitest])
AC_OUTPUT_COMMANDS([chmod +x bin/mtest])
AC_OUTPUT_COMMANDS([chmod +x bin/f77tof90])
AC_OUTPUT(Makefile bin/Makefile.master bin/mpitest.env bin/mpitest \
		   lib/Makefile bin/mtest bin/Makefile.F.main \
		   bin/Makefile.F90.main \
		   bin/Makefile.c.main bin/Makefile.main \
		   bin/f77tof90 include/foptions.h include/mpitestf.h,
		   [cp bin/mpitest.env bin/mpitest.${MPITEST_ARCH}.env])
