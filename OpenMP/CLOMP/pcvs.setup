#!/bin/sh

pcvs_src_current=$pcvs_src/$1
pcvs_build_current=$pcvs_testbuild/$1

clomp="clomp"
clompi="clomp_mpi"

cp -r $pcvs_src_current/* $pcvs_build_current/

echo "build_clomp:"
echo "    type: 'build'"
echo "    target: 'pcvs'"
echo "    openmp: true"
echo "    files: '@BUILDPATH@/Makefile'"

echo "pcvst_clomp: &clomp"
echo "    deps: [ 'build_clomp' ]"
echo "    type: 'run'"
echo "    net: [ 'tcp' ]"
echo ""

# args are:
# numThreads: Number of OpenMP threads to use (-1 for system default)
# allocThreads: #threads when allocating data (-1 for numThreads)
# numParts: Number of independent pieces of work (loop iterations)
# zonesPerPart: Number of zones in the first part (3 flops/zone/part)
# zoneSize: Bytes in zone, only first ~32 used (512 nominal, >= 32 valid)
# flopScale: Scales flops/zone to increase memory reuse (1 nominal, >=1 Valid)
# timeScale: Scales target time per test (10-100 nominal, 1-10000 Valid)

for part in 400 6400 640000; do
	clomp_fixed_args="-1 -1 $part 10 32 1 100"
	echo "omp_part$part:"
	echo "    herit: *clomp"
	echo "    n_proc: [1]"
	echo "    n_mpi: [1]"
	echo "    net: ~"
	echo "    bin: '$clomp'"
	echo "    args: '$clomp_fixed_args'"

	echo "mixed_part${part}:"
	echo "    herit: *clomp"
	echo "    bin: '$clompi'"
	echo "    args: '$clomp_fixed_args'"
	echo ""
done

exit 0

