test_19921210-1_13:
  bin: '"19921210-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19921210-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19930510-1_7:
  bin: '"19930510-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19930510-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid" "invalid directive))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19940712-1_20:
  bin: '"19940712-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19940712-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated comment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated comment" "header error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19951025-1_4:
  bin: '"19951025-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19951025-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects" "include))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(newline at end" "newline))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19951227-1_3:
  bin: '"19951227-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19951227-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19960224-1_8:
  bin: '"19960224-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19960224-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19990119-1_9:
  bin: '"19990119-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19990119-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19990228-1_21:
  bin: '"19990228-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19990228-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19990407-1_19:
  bin: '"./19990407-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19990407-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19990409-1_6:
  bin: '"19990409-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19990409-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_19990413-1_13:
  bin: '"19990413-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/19990413-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('else' without a previous 'if'" "error on this line))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000127-1_139:
  bin: '"20000127-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000127-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000129-1_15:
  bin: '"20000129-1.i"'
  cargs: ' -Wall -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000129-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wall
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(trigraph ..." "trigraph encountered))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000207-1_16:
  bin: '"20000207-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000207-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000207-2_16:
  bin: '"20000207-2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000207-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000209-1_34:
  bin: '"20000209-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000209-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 0))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(here" "case 6))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000209-2_19:
  bin: '"20000209-2.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000209-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000301-1_3:
  bin: '"20000301-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000301-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000419-1_15:
  bin: '"20000419-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000419-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000519-1_11:
  bin: '"20000519-1.i"'
  cargs: ' -ansi -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000519-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000529-1_14:
  bin: '"20000529-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000529-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000625-1_17:
  bin: '"20000625-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000625-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing token" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000627-1_10:
  bin: '"20000627-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000627-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000628-1_5:
  bin: '"20000628-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000628-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000725-1_3:
  bin: '"20000725-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20000725-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020927-1_91:
  bin: '"20020927-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20020927-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050215-1_10:
  bin: '"20050215-1.s"'
  cargs: ' -g3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/20050215-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissingdirs_7:
  bin: '"Wmissingdirs.i"'
  cargs: ' -std=gnu99 -I /jolly/well/better/not/exist -Wmissing-include-dirs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wmissingdirs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -I /jolly/well/better/not/exist -Wmissing-include-dirs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(No such file or directory.*Wmissing-include-dirs" "-Wmissing-include-dirs))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsignprom_26:
  bin: '"Wsignprom.i"'
  cargs: ' -Wall -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wsignprom.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(5:changes sign when promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(10:changes sign when promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(10:changes sign when promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(10:changes sign when promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(5:changes sign when promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(14:changes sign when promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(9:changes sign when promoted))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtrigraphs-2_20:
  bin: '"Wtrigraphs-2.i"'
  cargs: ' -std=c99 -Wtrigraphs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wtrigraphs-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wtrigraphs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(converted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(converted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(converted))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtrigraphs_27:
  bin: '"Wtrigraphs.i"'
  cargs: ' -std=gnu99 -Wtrigraphs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wtrigraphs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wtrigraphs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunknown-pragmas-1_29:
  bin: '"Wunknown-pragmas-1.s"'
  cargs: ' -Wunknown-pragmas -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wunknown-pragmas-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunknown-pragmas"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown1" "unknown1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown2" "unknown2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown3" "unknown3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown_before" "unknown_before 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown_before" "unknown_before 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown_after" "unknown_after 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown_after" "unknown_after 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown4" "unknown4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown5" "unknown5))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused_38:
  bin: '"Wunused.i"'
  cargs: ' -Wunused-macros -Dfoo -Dfoo -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wunused.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-macros -Dfoo -Dfoo"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvariadic-1_7:
  bin: '"Wvariadic-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wvariadic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variadic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variadic))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvariadic-1p_8:
  bin: '"Wvariadic-1p.s"'
  cargs: ' -std=iso9899:1990  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wvariadic-1p.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 "'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variadic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variadic))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvariadic-2_6:
  bin: '"Wvariadic-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic -Werror -Wno-variadic-macros -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wvariadic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Werror -Wno-variadic-macros"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvariadic-3_7:
  bin: '"Wvariadic-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wvariadic-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variadic))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvariadic-4_6:
  bin: '"Wvariadic-4.s"'
  cargs: ' -std=iso9899:1999 -pedantic -Werror -Wno-variadic-macros -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/Wvariadic-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Werror -Wno-variadic-macros"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma1_39:
  bin: '"_Pragma1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(poisoned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(poisoned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing binary operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(poisoned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(poisoned))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma2_13:
  bin: '"_Pragma2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma3_11:
  bin: '"_Pragma3.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma4_8:
  bin: '"_Pragma4.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma5_10:
  bin: '"_Pragma5.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma5.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma6_10:
  bin: '"_Pragma6.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma6.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test__Pragma7_14:
  bin: '"_Pragma7.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/_Pragma7.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_arith-1_257:
  bin: '"arith-1.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/arith-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_arith-3_447:
  bin: '"arith-3.i"'
  cargs: ' -std=c99 -fshow-column -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/arith-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:division by zero))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: warning:[^
        ]*(so large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(so large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:377:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assembl2_19:
  bin: '"assembl2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/assembl2.S'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assembler_26:
  bin: '"assembler.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/assembler.S'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(diagnostic))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assert1_46:
  bin: '"assert1.s"'
  cargs: ' -Wno-deprecated -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/assert1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assert2_24:
  bin: '"assert2.i"'
  cargs: ' -fshow-column -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/assert2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -Wno-deprecated"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without predicate" "assert w/o predicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:an identifier" "assert punctuation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:an identifier" "assert number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:missing" "assert w/o answer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without predicate" "test w/o predicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:an identifier" "test punctuation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:an identifier" "test number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:is not valid" "test with malformed answer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assert3_10:
  bin: '"assert3.i"'
  cargs: ' -A abc=def -A abc(ghi) "-Aabc = jkl" -A abc=mno -A -abc=mno -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/assert3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-A abc=def -A abc\(ghi\) \"-Aabc = jkl\" -A abc=mno -A -abc=mno -Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assert4_384:
  bin: '"assert4.i"'
  cargs: ' -ansi -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/assert4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_avoidpaste1_29:
  bin: '"avoidpaste1.i"'
  cargs: ' -ansi -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/avoidpaste1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_avoidpaste2_31:
  bin: '"avoidpaste2.i"'
  cargs: ' -ansi -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/avoidpaste2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_backslash2_14:
  bin: '"backslash2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/backslash2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(separated by space" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_backslash_21:
  bin: '"backslash.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/backslash.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(separated by space" "space))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(separated by space" "tab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(separated by space" "space and tab))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-macro-1_28:
  bin: '"./builtin-macro-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/builtin-macro-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c89-pedantic_10:
  bin: '"c89-pedantic.i"'
  cargs: ' -std=c89 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c89-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c89_10:
  bin: '"c89.i"'
  cargs: ' -std=c89 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c89.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-empty-macro-args_19:
  bin: '"c90-empty-macro-args.s"'
  cargs: ' -std=c89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c90-empty-macro-args.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(macro f2 argument 2: empty macro arguments are undefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(macro f2 argument 2: empty macro arguments are undefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(macro f3 argument 1: empty macro arguments are undefined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-if-comma-1_11:
  bin: '"c90-if-comma-1.i"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c90-if-comma-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma" "evaluated comma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma" "unevaluated comma))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-pedantic_10:
  bin: '"c90-pedantic.i"'
  cargs: ' -std=c90 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c90-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90_10:
  bin: '"c90.i"'
  cargs: ' -std=c90 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c90.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-pedantic_10:
  bin: '"c94-pedantic.i"'
  cargs: ' -std=iso9899:199409 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c94-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94_10:
  bin: '"c94.i"'
  cargs: ' -std=iso9899:199409 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c94.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-empty-macro-args_19:
  bin: '"c99-empty-macro-args.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c99-empty-macro-args.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-3_6:
  bin: '"c99-hexfloat-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c99-hexfloat-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-if-comma-1_11:
  bin: '"c99-if-comma-1.i"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c99-if-comma-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma" "evaluated comma))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-pedantic_10:
  bin: '"c99-pedantic.i"'
  cargs: ' -std=c99 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c99-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99_10:
  bin: '"c99.i"'
  cargs: ' -std=c99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/c99.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_charconst-2_19:
  bin: '"charconst-2.s"'
  cargs: ' -fsigned-char -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/charconst-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsigned-char"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_charconst-3_50:
  bin: '"./charconst-3.exe"'
  cargs: ' -Wno-multichar'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/charconst-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wno-multichar
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_charconst-4_52:
  bin: '"./charconst-4.exe"'
  cargs: ' -Wno-multichar -fsigned-char'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/charconst-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-multichar -fsigned-char"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_charconst_36:
  bin: '"charconst.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/charconst.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty" "empty charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty" "empty wide charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty" "empty charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty" "empty wide charconst))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "long charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "long wide charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(multi-char" "multi-character))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "long charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "long wide charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(multi-char" "multi-char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(too long" "multi-char wide))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-C2_17:
  bin: '"cmdlne-C2.i"'
  cargs: ' -C -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-C2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-C"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-C3_13:
  bin: '"cmdlne-C3.i"'
  cargs: ' -C -P -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-C3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-C -P"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-C_37:
  bin: '"cmdlne-C.i"'
  cargs: ' -C -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-C.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -C
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-M-2_14:
  bin: '"cmdlne-M-2.i"'
  cargs: ' -M -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-M-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-M"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-M_8:
  bin: '"cmdlne-M.i"'
  cargs: ' -M -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-M.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-M"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-P_11:
  bin: '"cmdlne-P.i"'
  cargs: ' -P -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-P.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-P"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dD-M_15:
  bin: '"cmdlne-dD-M.i"'
  cargs: ' -dD -M -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dD-M.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dD -M"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dD-dM_14:
  bin: '"cmdlne-dD-dM.i"'
  cargs: ' -dD -dM -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dD-dM.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dD -dM"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dD_12:
  bin: '"cmdlne-dD.i"'
  cargs: ' -dD -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dD.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -dD
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dI-C_11:
  bin: '"cmdlne-dI-C.i"'
  cargs: ' -dI -C -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dI-C.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dI -C"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dI-M_16:
  bin: '"cmdlne-dI-M.i"'
  cargs: ' -dI -M -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dI-M.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dI -M"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dM-M_15:
  bin: '"cmdlne-dM-M.i"'
  cargs: ' -dM -M -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dM-M.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dM -M"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dM-dD_14:
  bin: '"cmdlne-dM-dD.i"'
  cargs: ' -dM -dD -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dM-dD.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dM -dD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dM_12:
  bin: '"cmdlne-dM.i"'
  cargs: ' -dM -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dM.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -dM
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dN-M_15:
  bin: '"cmdlne-dN-M.i"'
  cargs: ' -dN -M -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dN-M.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dN -M"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-10_7:
  bin: '"cmdlne-dU-10.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-11_7:
  bin: '"cmdlne-dU-11.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-12_6:
  bin: '"cmdlne-dU-12.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-13_7:
  bin: '"cmdlne-dU-13.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-14_6:
  bin: '"cmdlne-dU-14.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-15_5:
  bin: '"cmdlne-dU-15.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-16_6:
  bin: '"cmdlne-dU-16.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
      - '"-nostdinc -P -dU -std=c89" { target *-*-solaris2.* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-17_5:
  bin: '"cmdlne-dU-17.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
      - '"-nostdinc -P -dU -std=c89" { target *-*-solaris2.* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-18_5:
  bin: '"cmdlne-dU-18.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-19_8:
  bin: '"cmdlne-dU-19.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-1_5:
  bin: '"cmdlne-dU-1.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-20_5:
  bin: '"cmdlne-dU-20.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-21_9:
  bin: '"cmdlne-dU-21.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-22_14:
  bin: '"cmdlne-dU-22.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-23_5:
  bin: '"cmdlne-dU-23.i"'
  cargs: ' -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-2_6:
  bin: '"cmdlne-dU-2.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-3_6:
  bin: '"cmdlne-dU-3.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-4_5:
  bin: '"cmdlne-dU-4.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-5_7:
  bin: '"cmdlne-dU-5.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-6_8:
  bin: '"cmdlne-dU-6.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-7_8:
  bin: '"cmdlne-dU-7.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-8_6:
  bin: '"cmdlne-dU-8.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cmdlne-dU-9_6:
  bin: '"cmdlne-dU-9.i"'
  cargs: ' -nostdinc -P -dU -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cmdlne-dU-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -P -dU"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_counter-1_20:
  bin: '"counter-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/counter-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_counter-2_14:
  bin: '"counter-2.i"'
  cargs: ' -fdirectives-only -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/counter-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -fdirectives-only
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__COUNTER__ expanded inside directive with -fdirectives-only))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_counter-3_10:
  bin: '"counter-3.i"'
  cargs: ' -fdirectives-only -fpreprocessed -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/counter-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdirectives-only -fpreprocessed"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cxxcom1_11:
  bin: '"cxxcom1.i"'
  cargs: ' -pedantic -std=gnu89 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cxxcom1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(style comment|reported only once" "good warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cxxcom2_7:
  bin: '"cxxcom2.i"'
  cargs: ' -pedantic -std=c89 -Wall -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/cxxcom2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=c89 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_defined-Wexpansion-to-defined_30:
  bin: '"defined-Wexpansion-to-defined.i"'
  cargs: ' -Wexpansion-to-defined -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/defined-Wexpansion-to-defined.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wexpansion-to-defined"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_defined-Wextra-Wno-expansion-to-defined_30:
  bin: '"defined-Wextra-Wno-expansion-to-defined.i"'
  cargs: ' -Wextra -Wno-expansion-to-defined -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/defined-Wextra-Wno-expansion-to-defined.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-expansion-to-defined"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_defined-Wextra_30:
  bin: '"defined-Wextra.i"'
  cargs: ' -Wextra -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/defined-Wextra.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(may not be portable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_defined-Wno-expansion-to-defined_30:
  bin: '"defined-Wno-expansion-to-defined.i"'
  cargs: ' -ansi -pedantic-errors -Wno-expansion-to-defined -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/defined-Wno-expansion-to-defined.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -pedantic-errors -Wno-expansion-to-defined"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_defined-syshdr_27:
  bin: '"defined-syshdr.i"'
  cargs: ' -Wexpansion-to-defined -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/defined-syshdr.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wexpansion-to-defined"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_defined_85:
  bin: '"defined.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/defined.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be portable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_digraph1_17:
  bin: '"digraph1.s"'
  cargs: ' -std=iso9899:199409 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/digraph1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_digraph2_19:
  bin: '"digraph2.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/digraph2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_digraphs_35:
  bin: '"./digraphs.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/digraphs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dir-only-1_73:
  bin: '"dir-only-1.i"'
  cargs: ' -fdirectives-only -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/dir-only-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -fdirectives-only
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dir-only-2_12:
  bin: '"dir-only-2.i"'
  cargs: ' -fpreprocessed -fdirectives-only -DNOT_SET -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/dir-only-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpreprocessed -fdirectives-only -DNOT_SET"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dir-only-3_13:
  bin: '"dir-only-3.i"'
  cargs: ' -fdirectives-only -H -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/dir-only-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdirectives-only -H"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dir-only-4_6:
  bin: '"dir-only-4.i"'
  cargs: ' -fdirectives-only -Wunused-macros -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/dir-only-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdirectives-only -Wunused-macros"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fdirectives-only is incompatible with -Wunused_macros\n" "-Wunused-macros check))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dir-only-5_6:
  bin: '"dir-only-5.i"'
  cargs: ' -fdirectives-only -traditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/dir-only-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdirectives-only -traditional"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fdirectives-only is incompatible with -traditional\n" "-traditional check))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dir-only-6_7:
  bin: '"dir-only-6.i"'
  cargs: ' -fdirectives-only -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/dir-only-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -fdirectives-only
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated comment))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_direct2_48:
  bin: '"direct2.s"'
  cargs: ' -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/direct2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray" "non-include))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray|expected" "non-include 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray|unknown|expected" "# from macro))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray|unknown|expected" "#define from macro))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared|for each" "no macro X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared|for each" "no macro Y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected" "not a comment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not give" "paste warning(s)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_direct2s_43:
  bin: '"direct2s.s"'
  cargs: ' -save-temps -ansi -pedantic-errors -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/direct2s.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-save-temps -ansi -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray" "non-include))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray|expected" "non-include 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray|unknown|expected" "# from macro))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(stray|unknown|expected" "#define from macro))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared|for each" "no macro X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared|for each" "no macro Y))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_directiv_35:
  bin: '"directiv.i"'
  cargs: ' -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/directiv.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -pedantic
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated argument))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(form feed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(vertical tab))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-include_14:
  bin: '"empty-include.i"'
  cargs: ' -fshow-column -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/empty-include.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:empty" "error on empty filename in include))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_endif-pedantic1_17:
  bin: '"endif-pedantic1.i"'
  cargs: ' -pedantic -Wno-endif-labels -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/endif-pedantic1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wno-endif-labels"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_endif-pedantic2_17:
  bin: '"endif-pedantic2.i"'
  cargs: ' -Wno-endif-labels -pedantic-errors -Wendif-labels -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/endif-pedantic2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-endif-labels -pedantic-errors -Wendif-labels"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra tokens" "tokens after #else))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra tokens" "tokens after #endif))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_endif_14:
  bin: '"endif.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/endif.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_error-1_5:
  bin: '"error-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/error-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated comment))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_escape-1_39:
  bin: '"escape-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/escape-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no following" "\x with no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out of range" "\x out of range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out of range" "\x out of range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown escape" "unknown escape seq))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no following" "\x with no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out of range" "\x out of range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out of range" "\x out of range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown escape" "unknown escape seq))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(multi" "too long octal))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(multi" "too long octal))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_escape-2_20:
  bin: '"escape-2.s"'
  cargs: ' -pedantic -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/escape-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(non-ISO" "non-ISO \\e))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(non-ISO" "non-ISO \\E))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_escape_25:
  bin: '"escape.s"'
  cargs: ' -Wtraditional -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/escape.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional -std=c89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional" "traditional bell))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional" "traditional hex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(only valid" "\u is unknown in C89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional" "traditional bell))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional" "traditional hex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(only valid" "\u is unknown in C89))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_expr-overflow-1_44:
  bin: '"expr-overflow-1.i"'
  cargs: ' -std=c99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/expr-overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_expr_17:
  bin: '"expr.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/expr.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extratokens2_22:
  bin: '"extratokens2.i"'
  cargs: ' -Wno-endif-labels -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/extratokens2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-endif-labels"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extratokens_38:
  bin: '"extratokens.i"'
  cargs: ' -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/extratokens.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-deprecated"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #ifdef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #ifndef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #else))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #endif))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #undef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #assert))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #unassert))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #include))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(extra tokens" "tokens after #ident))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpreprocessed_10:
  bin: '"fpreprocessed.i"'
  cargs: ' -fpreprocessed -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/fpreprocessed.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -fpreprocessed
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnuc89-pedantic_10:
  bin: '"gnuc89-pedantic.i"'
  cargs: ' -std=gnu89 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/gnuc89-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnuc89_10:
  bin: '"gnuc89.i"'
  cargs: ' -std=gnu89 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/gnuc89.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnuc99-pedantic_10:
  bin: '"gnuc99-pedantic.i"'
  cargs: ' -std=gnu99 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/gnuc99-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnuc99_10:
  bin: '"gnuc99.i"'
  cargs: ' -std=gnu99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/gnuc99.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hash1_9:
  bin: '"hash1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/hash1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ident-1_8:
  bin: '"ident-1.i"'
  cargs: ' -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ident-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ident_7:
  bin: '"ident.s"'
  cargs: ' -Wno-deprecated -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ident.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-1_41:
  bin: '"if-1.i"'
  cargs: ' -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "invalid number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "invalid number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "invalid number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(loating constant" "floating point in #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "too many suffixes))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "too many suffixes))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "u between ls))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid digit" "decimal in octal constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant" "range error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-2_28:
  bin: '"if-2.i"'
  cargs: ' -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -pedantic-errors
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty character constant" "empty charconst))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*((multi-character character constant)|(character constant (is )?too long)" "multi-character charconst))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(character constant (is )?too long" "charconst too long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-4_8:
  bin: '"if-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not valid" "+= in if))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-5_9:
  bin: '"if-5.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-5.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(macro names))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(macro names))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-cexp_14:
  bin: '"if-cexp.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-cexp.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OK" "nested ? :))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(OK" "nested ? : with parens))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(':' without" "immediate :))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-div_6:
  bin: '"if-div.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-div.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-mop_31:
  bin: '"if-mop.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-mop.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no expression" "empty #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no right op" "no unary operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no right op" "no right operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing bin" "no binary operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing bin" "immediate then open paren))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing bin" "close paren then immediate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no left op))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no left op))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-mpar_29:
  bin: '"if-mpar.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-mpar.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:missing '\\)'" "missing ')' no. 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:missing '\\)'" "missing ')' no. 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:missing '\\('" "missing '(' no. 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:missing '\\('" "missing '(' no. 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:missing '\\('" "missing '(' no. 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:missing '\\)'" "missing ')' no. 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:missing '\\)'" "missing ')' no. 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:missing '\\)'" "missing ')' no. 3))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-oppr2_10:
  bin: '"if-oppr2.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-oppr2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-oppr_92:
  bin: '"if-oppr.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-oppr.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-paren_31:
  bin: '"if-paren.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-paren.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression between" "empty paren))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "simple parens no. 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "simple parens no. 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "simple parens no. 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "nested parentheses))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-sc_26:
  bin: '"if-sc.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-sc.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-shift_22:
  bin: '"if-shift.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-shift.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-unary_32:
  bin: '"if-unary.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/if-unary.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_import1_16:
  bin: '"import1.i"'
  cargs: ' -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/import1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_import2_11:
  bin: '"import2.i"'
  cargs: ' -Wno-deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/import2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-deprecated"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include1_13:
  bin: '"include1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include2_15:
  bin: '"include2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra tokens" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(silly" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include2a_16:
  bin: '"include2a.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include2a.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra tokens" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(silly" "silly))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing" "missing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include3_7:
  bin: '"include3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include4_14:
  bin: '"include4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include5_9:
  bin: '"include5.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include5.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include6_14:
  bin: '"include6.i"'
  cargs: ' -std=gnu99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include expects))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_include7_3:
  bin: '"include7.s"'
  cargs: ' -I "" -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/include7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-I \"\""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lexident_25:
  bin: '"lexident.i"'
  cargs: ' -trigraphs -fdollars-in-identifiers -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/lexident.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-trigraphs -fdollars-in-identifiers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lexnum_54:
  bin: '"./lexnum.exe"'
  cargs: ' -trigraphs'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/lexnum.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-trigraphs"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lexstrng_71:
  bin: '"./lexstrng.exe"'
  cargs: ' -trigraphs'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/lexstrng.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-trigraphs"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line1_12:
  bin: '"line1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line2_13:
  bin: '"line2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out of range" "line # too low))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out of range" "line # too high))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line3_28:
  bin: '"line3.s"'
  cargs: ' -Wwrite-strings -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wwrite-strings"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(discards 'const' qualifier" "case zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(discards 'const' qualifier" "case one))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(discards 'const' qualifier" "case two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(discards 'const' qualifier" "case four))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line4_19:
  bin: '"line4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line5_15:
  bin: '"line5.i"'
  cargs: ' -fpreprocessed -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpreprocessed"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line6_7:
  bin: '"line6.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(line number out of range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(line number out of range" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line7_19:
  bin: '"line7.i"'
  cargs: ' -std=c99 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unexpected end of file))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a positive integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a valid filename))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra tokens at end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_line8_10:
  bin: '"line8.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/line8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mac-dir-1_34:
  bin: '"./mac-dir-1.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mac-dir-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mac-dir-2_14:
  bin: '"mac-dir-2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mac-dir-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not portable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mac-eol-at-eof_1:
  bin: '"mac-eol-at-eof.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mac-eol-at-eof.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_maccom1_14:
  bin: '"maccom1.i"'
  cargs: ' -CC -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/maccom1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-CC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_maccom2_14:
  bin: '"maccom2.i"'
  cargs: ' -CC -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/maccom2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-CC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_maccom3_13:
  bin: '"maccom3.i"'
  cargs: ' -CC -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/maccom3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-CC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_maccom4_17:
  bin: '"maccom4.i"'
  cargs: ' -CC -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/maccom4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-CC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_maccom5_18:
  bin: '"maccom5.i"'
  cargs: ' -CC -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/maccom5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-CC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_maccom6_20:
  bin: '"maccom6.i"'
  cargs: ' -CC -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/maccom6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-CC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-exp-tracking-1_19:
  bin: '"macro-exp-tracking-1.s"'
  cargs: ' -ftrack-macro-expansion=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro-exp-tracking-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=1"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-exp-tracking-2_20:
  bin: '"macro-exp-tracking-2.s"'
  cargs: ' -ftrack-macro-expansion=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro-exp-tracking-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-exp-tracking-3_12:
  bin: '"macro-exp-tracking-3.s"'
  cargs: ' -fshow-column -ftrack-macro-expansion=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro-exp-tracking-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -ftrack-macro-expansion=1"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:invalid operands to binary <<))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-exp-tracking-4_13:
  bin: '"macro-exp-tracking-4.s"'
  cargs: ' -fshow-column -ftrack-macro-expansion=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro-exp-tracking-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -ftrack-macro-expansion=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-exp-tracking-5_18:
  bin: '"macro-exp-tracking-5.s"'
  cargs: ' -fshow-column -ftrack-macro-expansion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro-exp-tracking-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -ftrack-macro-expansion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('variable' undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro10_25:
  bin: '"macro10.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro10.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro11_16:
  bin: '"macro11.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro11.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro1_132:
  bin: '"./macro1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro2_14:
  bin: '"macro2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro3_37:
  bin: '"./macro3.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro4_13:
  bin: '"macro4.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro5_24:
  bin: '"macro5.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro5.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro6_32:
  bin: '"./macro6.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro6.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro7_10:
  bin: '"macro7.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro7.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro8_29:
  bin: '"macro8.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -std=gnu89
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro9_14:
  bin: '"macro9.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macro9.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macspace1_63:
  bin: '"macspace1.i"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macspace1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing terminating" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing terminating" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(missing whitespace))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macspace2_63:
  bin: '"macspace2.i"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macspace2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires whitespace))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing terminating" "missing-terminating))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing terminating" "missing-terminating))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macsyntx_72:
  bin: '"macsyntx.i"'
  cargs: ' -pedantic -std=gnu99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/macsyntx.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not appear))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passed 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passed 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated argument))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(space))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(__VA_ARGS__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(__VA_ARGS__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(__VA_ARGS__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(__VA_ARGS__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(requires at least one))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(requires at least one))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(requires at least one))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi1_39:
  bin: '"mi1.s"'
  cargs: ' -H -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-H"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi2_12:
  bin: '"mi2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi3_20:
  bin: '"mi3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi4_10:
  bin: '"mi4.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi5_13:
  bin: '"mi5.i"'
  cargs: ' -nostdinc -H -C -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -H -C"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi6_61:
  bin: '"mi6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi7_19:
  bin: '"mi7.i"'
  cargs: ' -H -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-H"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mi8_8:
  bin: '"mi8.i"'
  cargs: ' -H -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/mi8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-H"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-header-1_10:
  bin: '"missing-header-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/missing-header-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-header-MD_10:
  bin: '"missing-header-MD.s"'
  cargs: ' -MD -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/missing-header-MD.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-MD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-header-MMD_10:
  bin: '"missing-header-MMD.s"'
  cargs: ' -MMD -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/missing-header-MMD.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-MMD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-sysheader-MD_10:
  bin: '"missing-sysheader-MD.s"'
  cargs: ' -MD -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/missing-sysheader-MD.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-MD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-sysheader-MMD_10:
  bin: '"missing-sysheader-MMD.s"'
  cargs: ' -MMD -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/missing-sysheader-MMD.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-MMD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misspelled-directive-1_12:
  bin: '"misspelled-directive-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/misspelled-directive-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid preprocessing directive #endfi; did you mean #endif?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid preprocessing directive #deifne; did you mean #define?))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misspelled-directive-2_21:
  bin: '"misspelled-directive-2.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/misspelled-directive-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid preprocessing directive #endfi; did you mean #endif?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid preprocessing directive #this_does_not_match_anything))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiline-2_14:
  bin: '"multiline-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/multiline-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:missing term" "multiline strings))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing term" "multiline strings))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiline_25:
  bin: '"multiline.i"'
  cargs: ' -nostdinc -C -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/multiline.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-nostdinc -C"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(missing term" "multiline strings))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(missing term" "multiline strings))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(missing term" "multiline strings))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(missing term" "multiline strings))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_normalize-1_34:
  bin: '"normalize-1.i"'
  cargs: ' -std=c99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/normalize-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_normalize-2_34:
  bin: '"normalize-2.i"'
  cargs: ' -std=c99 -Wnormalized=nfkc -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/normalize-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wnormalized=nfkc"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFKC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(not in NFC))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_normalize-4_34:
  bin: '"normalize-4.i"'
  cargs: ' -std=c99 -Wnormalized=none -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/normalize-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wnormalized=none"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste10_15:
  bin: '"paste10.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste11_15:
  bin: '"paste11.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste11.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing tok))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing tok))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing tok))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing tok))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste12-2_11:
  bin: '"paste12-2.i"'
  cargs: ' -ftrack-macro-expansion=2 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste12-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting \"<\" and \"stdio\" does not))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste12_11:
  bin: '"paste12.i"'
  cargs: ' -ftrack-macro-expansion=0 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting \"<\" and \"stdio\" does not))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste13_12:
  bin: '"paste13.i"'
  cargs: ' -ftrack-macro-expansion=0 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing tok))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste14-2_11:
  bin: '"paste14-2.i"'
  cargs: ' -ftrack-macro-expansion=2 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste14-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting \"-\" and \">>\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting \"=\" and \"==\"))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste14_10:
  bin: '"paste14.i"'
  cargs: ' -ftrack-macro-expansion=0 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting \"-\" and \">>\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting \"=\" and \"==\"))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste15_15:
  bin: '"paste15.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste15.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(end of a macro expansion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste16_6:
  bin: '"paste16.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste17_8:
  bin: '"paste17.i"'
  cargs: ' -ftrack-macro-expansion=2 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste18_16:
  bin: '"paste18.s"'
  cargs: ' -ftrack-macro-expansion=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting\[^\n\r\]*does not give\[^\n\r\]*token))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste1_10:
  bin: '"paste1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot" "## at objlike start))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot" "## at objlike end))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot" "## at funlike start))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot" "## at funlike end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste2_122:
  bin: '"./paste2.exe"'
  cargs: ' -std=c99 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste3_14:
  bin: '"paste3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste4_17:
  bin: '"paste4.s"'
  cargs: ' -save-temps -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -save-temps
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent|parse error|syntax error|expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste5_24:
  bin: '"paste5.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste5.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing token))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste6_15:
  bin: '"paste6.s"'
  cargs: ' -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste7_19:
  bin: '"./paste7.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste7.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste8-2_15:
  bin: '"paste8-2.i"'
  cargs: ' -ftrack-macro-expansion=2 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste8-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing token))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing token))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste8_15:
  bin: '"paste8.i"'
  cargs: ' -ftrack-macro-expansion=0 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing token))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(valid preprocessing token))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_paste9_23:
  bin: '"./paste9.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/paste9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_poison_24:
  bin: '"poison.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/poison.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo" "use of foo))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo2" "use of foo2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo3" "use of foo3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo4" "use of foo4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo5" "use of foo5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid" "poison non-identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo6" "def of foo6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo6" "redef of foo6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo6" "#ifdef foo6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo6" "#if defined foo6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(foo6" "use of foo6))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(foo6" "poison defined macro))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20348_16:
  bin: '"pr20348.s"'
  cargs: ' -I./gcc.dg/cpp -I./gcc.dg/cpp/inc -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr20348.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-I$srcdir/gcc.dg/cpp -I$srcdir/gcc.dg/cpp/inc"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20356_14:
  bin: '"pr20356.s"'
  cargs: ' -I./gcc.dg/cpp -I./gcc.dg/cpp/inc -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr20356.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-I$srcdir/gcc.dg/cpp -I$srcdir/gcc.dg/cpp/inc"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22168-2_12:
  bin: '"pr22168-2.i"'
  cargs: ' -Wdeprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr22168-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wdeprecated
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(deprecated))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22168_12:
  bin: '"pr22168.i"'
  cargs: ' -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr22168.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -pedantic
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23827_c90_23:
  bin: '"./pr23827_c90.exe"'
  cargs: ' -std=c90 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr23827_c90.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23827_c90_neg_4:
  bin: '"pr23827_c90_neg.s"'
  cargs: ' -std=c90 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr23827_c90_neg.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of C99 hexadecimal floating constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27777_8:
  bin: '"pr27777.i"'
  cargs: '  -trigraphs -Wall  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr27777.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '{ -trigraphs -Wall }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(BUG" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(trigraph" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28165_6:
  bin: '"pr28165.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr28165.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(system_header" "ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(system_header" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28227_10:
  bin: '"pr28227.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr28227.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28709_10:
  bin: '"pr28709.s"'
  cargs: ' -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr28709.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier.*'-'" "expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pasting "pasting" { target *-*-* } .-2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29612-1_15:
  bin: '"pr29612-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr29612-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(multi-character))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(multi-character))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29612-2_18:
  bin: '"pr29612-2.i"'
  cargs: ' -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr29612-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30786_9:
  bin: '"pr30786.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr30786.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized" "parenthesized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected" "expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30805_6:
  bin: '"pr30805.i"'
  cargs: ' -std=gnu89 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr30805.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32868_6:
  bin: '"pr32868.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr32868.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32974_6:
  bin: '"pr32974.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr32974.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33415_6:
  bin: '"pr33415.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr33415.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33466_64:
  bin: '"pr33466.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr33466.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34602_6:
  bin: '"pr34602.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr34602.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unexpected end" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34692_35:
  bin: '"pr34692.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr34692.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34859_10:
  bin: '"pr34859.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr34859.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35313_11:
  bin: '"pr35313.i"'
  cargs: ' -std=c99 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr35313.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35322_4:
  bin: '"pr35322.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr35322.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma dependency expects))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36320_8:
  bin: '"pr36320.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr36320.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43195_6:
  bin: '"pr43195.i"'
  cargs: ' -H -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr43195.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-H"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60570_48:
  bin: '"pr60570.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr60570.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with no expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with no expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-1_15:
  bin: '"./pr61854-1.exe"'
  cargs: ' -std=c89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-2_15:
  bin: '"./pr61854-2.exe"'
  cargs: ' -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-3_6:
  bin: '"pr61854-3.i"'
  cargs: ' -std=c89 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-4_16:
  bin: '"pr61854-4.i"'
  cargs: ' -std=c89 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(C\\+\\+ style comments are not allowed in ISO C90" "comments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(reported only once" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-5_15:
  bin: '"./pr61854-5.exe"'
  cargs: ' -std=c89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-6_19:
  bin: '"./pr61854-6.exe"'
  cargs: ' -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-7_19:
  bin: '"./pr61854-7.exe"'
  cargs: ' -std=c89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-c90_13:
  bin: '"pr61854-c90.i"'
  cargs: ' -std=iso9899:1990 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-c90.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(C\\+\\+ style comments are not allowed in ISO C90" "comments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(reported only once" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61854-c94_13:
  bin: '"pr61854-c94.i"'
  cargs: ' -std=iso9899:199409 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61854-c94.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(C\\+\\+ style comments are not allowed in ISO C90" "comments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(reported only once" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61977_4:
  bin: '"pr61977.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr61977.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65238-2_18:
  bin: '"pr65238-2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr65238-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(macro .__has_attribute. requires an identifier" "" {target "*-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing ... after .__has_attribute." "" {target "*-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing ... after .__has_attribute." "" {target "*-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing binary operator before token .unused." "" {target "*-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(macro .__has_attribute. requires an identifier" "" {target "*-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing ... in expression" "" {target "*-*-*))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66415-1_16:
  bin: '"pr66415-1.s"'
  cargs: ' -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr66415-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(71:format))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66415-2_11:
  bin: '"pr66415-2.s"'
  cargs: ' -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr66415-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69985_7:
  bin: '"pr69985.s"'
  cargs: ' -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr69985.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(15: format .%llu. expects a matching))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71591_5:
  bin: '"pr71591.i"'
  cargs: ' -fself-test=fake-value -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr71591.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fself-test=fake-value"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71681-1_5:
  bin: '"pr71681-1.i"'
  cargs: ' -remap -I./gcc.dg/cpp/remap -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr71681-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-remap -I$srcdir/gcc.dg/cpp/remap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71681-2_5:
  bin: '"pr71681-2.i"'
  cargs: ' -remap -I./gcc.dg/cpp/remap -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr71681-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-remap -I$srcdir/gcc.dg/cpp/remap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr7263-2_28:
  bin: '"pr7263-2.s"'
  cargs: ' -std=c89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr7263-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of C99 long long integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr7263-3_19:
  bin: '"pr7263-3.s"'
  cargs: ' -std=c99 -pedantic-errors -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pr7263-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not support plain .complex. meaning .double complex.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not support plain .complex. meaning .double complex.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants are a GCC extension))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-1_13:
  bin: '"pragma-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared-variable message))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-2_16:
  bin: '"pragma-2.s"'
  cargs: ' -dD -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dD"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared-variable message))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-3_40:
  bin: '"pragma-3.i"'
  cargs: ' -fopenmp -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fopenmp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diagnostic-1_32:
  bin: '"pragma-diagnostic-1.s"'
  cargs: ' -Wuninitialized -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-diagnostic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diagnostic-2_28:
  bin: '"pragma-diagnostic-2.s"'
  cargs: ' -Wuninitialized -ftrack-macro-expansion=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-diagnostic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -ftrack-macro-expansion=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-once-1_8:
  bin: '"pragma-once-1.s"'
  cargs: ' -I. -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-once-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-I."'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pop_macro-1_12:
  bin: '"pragma-pop_macro-1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/pragma-pop_macro-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redef1_19:
  bin: '"redef1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/redef1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redef2_31:
  bin: '"redef2.i"'
  cargs: ' -ansi -Wall -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/redef2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef mac))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef mac))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef mac))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef ro))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef va))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redef3_21:
  bin: '"redef3.i"'
  cargs: ' -DC -DD=1 -DE -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/redef3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-DC -DD=1 -DE"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef B))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined" "redef E))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redef4_499:
  bin: '"redef4.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/redef4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: warning:[^
        ]*(redefined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_separate-1_16:
  bin: '"separate-1.s"'
  cargs: ' -save-temps -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/separate-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-save-temps"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected" "error on this line))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected" "error on this line))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_skipping2_14:
  bin: '"skipping2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/skipping2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra tokens" "tokens after #endif))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_skipping_25:
  bin: '"skipping.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/skipping.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_source_date_epoch-1_11:
  bin: '"./source_date_epoch-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/source_date_epoch-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_source_date_epoch-2_12:
  bin: '"source_date_epoch-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/source_date_epoch-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(SOURCE_DATE_EPOCH must expand))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_source_date_epoch-3_9:
  bin: '"source_date_epoch-3.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/source_date_epoch-3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spacing1_66:
  bin: '"spacing1.i"'
  cargs: ' -P -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/spacing1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-P"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spacing2_16:
  bin: '"spacing2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/spacing2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strify1_10:
  bin: '"strify1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strify1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(followed by a macro parameter" "#1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(followed by a macro parameter" "#2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strify2_56:
  bin: '"./strify2.exe"'
  cargs: ' -std=c99 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strify2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(valid string" "str(\\)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(valid string" "str(\\\\\\)))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strify3_33:
  bin: '"./strify3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strify3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strify4_29:
  bin: '"./strify4.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strify4.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strify5_1260:
  bin: '"./strify5.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strify5.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strp1_35:
  bin: '"./strp1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strp1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strp2_23:
  bin: '"./strp2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/strp2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_syshdr3_16:
  bin: '"syshdr3.s"'
  cargs: ' -pedantic -std=c89 -ftrack-macro-expansion=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/syshdr3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=c89 -ftrack-macro-expansion=1"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_syshdr4_24:
  bin: '"syshdr4.s"'
  cargs: ' -no-integrated-cpp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/syshdr4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -no-integrated-cpp
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(div-by-zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_syshdr5_14:
  bin: '"syshdr5.s"'
  cargs: ' -no-integrated-cpp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/syshdr5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -no-integrated-cpp
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_syshdr_13:
  bin: '"syshdr.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/syshdr.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(include_next" "good error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sysmac1_26:
  bin: '"sysmac1.i"'
  cargs: ' -std=gnu99 -pedantic -Wtraditional -ftrack-macro-expansion=0 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/sysmac1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic -Wtraditional -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(named variadic macros))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(used with arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(requires at least one))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sysmac2_28:
  bin: '"sysmac2.s"'
  cargs: ' -std=gnu99 -pedantic -Wtraditional -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/sysmac2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic -Wtraditional -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-paste_19:
  bin: '"tr-paste.s"'
  cargs: ' -traditional-cpp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-paste.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-traditional-cpp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-warn1_39:
  bin: '"tr-warn1.i"'
  cargs: ' -pedantic -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-warn1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^ #kandr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^ # kandr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^#c89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^# c89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^#ext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^# ext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(#elif" "#elif skipping))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(#elif" "#elif not skipping))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-warn2_18:
  bin: '"tr-warn2.i"'
  cargs: ' -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-warn2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wtraditional
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(must be used with arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(must be used with arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-warn3_61:
  bin: '"tr-warn3.i"'
  cargs: ' -pedantic -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-warn3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^ #kandr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^ # kandr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^#c89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^# c89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^#ext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^# ext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^ #kandr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^ # kandr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^#c89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^# c89))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^#ext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(indented" "^# ext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension" "extension warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-warn4_26:
  bin: '"tr-warn4.i"'
  cargs: ' -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-warn4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-warn5_14:
  bin: '"tr-warn5.i"'
  cargs: ' -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-warn5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(unary plus operator" "unary plus operator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tr-warn6_27:
  bin: '"tr-warn6.i"'
  cargs: ' -Wtraditional -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/tr-warn6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"h\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"h2\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"h3\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"h\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"h2\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"h3\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"hello\" would be stringified" "traditional stringification))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(macro argument \"world\" would be stringified" "traditional stringification second warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_trigraphs_34:
  bin: '"./trigraphs.exe"'
  cargs: ' -ansi'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/trigraphs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uchar-1_8:
  bin: '"uchar-1.i"'
  cargs: ' -funsigned-char -fsigned-char -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/uchar-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsigned-char -fsigned-char"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uchar-3_17:
  bin: '"uchar-3.s"'
  cargs: ' -funsigned-char -fpreprocessed -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/uchar-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsigned-char -fpreprocessed"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-10_8:
  bin: '"ucnid-10.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-11_30:
  bin: '"ucnid-11.i"'
  cargs: ' -std=c99 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-12_13:
  bin: '"ucnid-12.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-13_6:
  bin: '"ucnid-13.i"'
  cargs: ' -std=c99 -dD -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -dD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-14_6:
  bin: '"ucnid-14.i"'
  cargs: ' -std=c99 -dD -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -dD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-15_6:
  bin: '"ucnid-15.i"'
  cargs: ' -std=c99 -dD -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -dD"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-1_26:
  bin: '"./ucnid-1.exe"'
  cargs: ' -std=c99 -g3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-2_16:
  bin: '"./ucnid-2.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-3_7:
  bin: '"ucnid-3.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-4_17:
  bin: '"ucnid-4.i"'
  cargs: ' -std=c99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid in an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid in an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid at the start of an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid at the start of an identifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-5_17:
  bin: '"ucnid-5.i"'
  cargs: ' -std=c99 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid in an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid in an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid in an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid at the start of an identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not valid at the start of an identifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-6_5:
  bin: '"ucnid-6.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-7_5:
  bin: '"ucnid-7.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-9_8:
  bin: '"ucnid-9.i"'
  cargs: ' -std=c99 -pedantic -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucnid-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucs_67:
  bin: '"ucs.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/ucs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete" "incomplete UCN 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete" "incompete UCN 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete" "non-hex digit in UCN))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a valid" "0025 invalid UCN))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a valid" "D800 invalid UCN))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a valid" "DFFF invalid UCN))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(too long|multi-character" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unc1_14:
  bin: '"unc1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/unc1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated" "unterminated #if))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unc2_12:
  bin: '"unc2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/unc2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unterminated" "unterminated if-elif-elif...))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unc3_5:
  bin: '"unc3.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/unc3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#else" "unterminated #else))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unc4_39:
  bin: '"unc4.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/unc4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#endif" "#endif without #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#else" "#else without #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#endif" "#endif after #else without #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#elif" "#elif without #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#endif" "#endif after #else without #if))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#if" "unc1.c: unterminated #if))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_undef-opt-1_8:
  bin: '"undef-opt-1.i"'
  cargs: ' -undef -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/undef-opt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-undef"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_undef2_23:
  bin: '"undef2.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/undef2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(undefining" "__DATE__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(undefining" "__TIME__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(undefining" "__FILE__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(undefining" "__LINE__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(undefining" "__STDC__))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf8-5byte-1_17:
  bin: '"./utf8-5byte-1.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/utf8-5byte-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vararg1_26:
  bin: '"./vararg1.exe"'
  cargs: ' -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/vararg1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -w
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vararg2_131:
  bin: '"vararg2.i"'
  cargs: ' -std=gnu99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/vararg2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vararg3_17:
  bin: '"vararg3.i"'
  cargs: ' -std=c99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/vararg3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vararg4_14:
  bin: '"vararg4.i"'
  cargs: ' -std=gnu99 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/vararg4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -std=gnu99
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_very-long-comment_14:
  bin: '"very-long-comment.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/very-long-comment.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(test warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-comments-2_7:
  bin: '"warn-comments-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=comments -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-comments-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=comments"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\"\.\*\" within comment .-Werror=comment.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multi-line comment .-Werror=comment." "multi-line))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-comments-3_7:
  bin: '"warn-comments-3.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=comment -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-comments-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=comment"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\"\.\*\" within comment .-Werror=comment.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multi-line comment .-Werror=comment." "multi-line))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-comments_7:
  bin: '"warn-comments.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wcomments -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-comments.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wcomments"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(4: \"\.\*\" within comment .-Wcomment.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(1: multi-line comment .-Wcomment." "multi-line))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-cxx-compat-2_4:
  bin: '"warn-cxx-compat-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=c++-compat -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-cxx-compat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=c++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(identifier \"not\" is a special operator name in C\\+\\+ .-Werror=c\\+\\+-compat.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-cxx-compat_4:
  bin: '"warn-cxx-compat.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wc++-compat -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-cxx-compat.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(identifier \"not\" is a special operator name in C\\+\\+ .-Wc\\+\\+-compat.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-deprecated-2_7:
  bin: '"warn-deprecated-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=deprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-deprecated-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=deprecated"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#assert is a deprecated GCC extension .-Werror=deprecated.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assertions are a deprecated extension .-Werror=deprecated.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-deprecated_7:
  bin: '"warn-deprecated.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wdeprecated -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-deprecated.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wdeprecated"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(#assert is a deprecated GCC extension .-Wdeprecated.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(assertions are a deprecated extension .-Wdeprecated.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-long-long-2_6:
  bin: '"warn-long-long-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wtraditional -Werror=long-long -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-long-long-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wtraditional -Werror=long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(traditional C rejects the \"LL\" suffix .-Werror=long-long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of C99 long long integer constant .-Werror=long-long." "use long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-long-long_6:
  bin: '"warn-long-long.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wtraditional -Wlong-long -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-long-long.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wtraditional -Wlong-long"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects the \"LL\" suffix .-Wlong-long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(use of C99 long long integer constant .-Wlong-long." "use long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-multichar-2_5:
  bin: '"warn-multichar-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=multichar -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-multichar-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=multichar"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multi-character character constant .-Werror=multichar.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-multichar_5:
  bin: '"warn-multichar.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wmultichar -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-multichar.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wmultichar"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(multi-character character constant .-Wmultichar.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-normalized-1_4:
  bin: '"warn-normalized-1.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wnormalized=nfc -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-normalized-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wnormalized=nfc"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(`.U00000f43' is not in NFC .-Wnormalized=.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-normalized-2_4:
  bin: '"warn-normalized-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wnormalized=nfkc -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-normalized-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wnormalized=nfkc"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(`.U000000aa' is not in NFKC .-Wnormalized=.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-normalized-3_4:
  bin: '"warn-normalized-3.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=normalized=nfc -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-normalized-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=normalized=nfc"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(`.U00000f43' is not in NFC .-Werror=normalized=.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-redefined-2_18:
  bin: '"warn-redefined-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=builtin-macro-redefined -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-redefined-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=builtin-macro-redefined"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\"__TIME__\" redefined .-Werror=builtin-macro-redefined.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIME__\" redefined" "not-builtin-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(\"X\" redefined" "not-builtin-2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-redefined_18:
  bin: '"warn-redefined.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wbuiltin-macro-redefined -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-redefined.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wbuiltin-macro-redefined"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIME__\" redefined .-Wbuiltin-macro-redefined.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIME__\" redefined" "not-builtin-1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(\"X\" redefined" "not-builtin-2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-traditional-2_23:
  bin: '"warn-traditional-2.s"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=traditional -Wno-deprecated -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-traditional-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=traditional -Wno-deprecated -Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(suggest hiding #assert from traditional C with an indented # .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(traditional C ignores #define with the # indented .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(suggest not using #elif in traditional C .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function-like macro \"f\" must be used with arguments in traditional C .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(traditional C rejects the \"U\" suffix .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*( traditional C rejects the unary plus operator .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(the meaning of '.x' is different in traditional C .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(the meaning of '.a' is different in traditional C .-Werror=traditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(the meaning of '.u' is different in traditional C .-Werror=traditional.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-traditional_23:
  bin: '"warn-traditional.s"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wtraditional -Wno-deprecated -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-traditional.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wtraditional -Wno-deprecated -Wno-long-long"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest hiding #assert from traditional C with an indented # .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C ignores #define with the # indented .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest not using #elif in traditional C .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(function-like macro \"f\" must be used with arguments in traditional C .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects the \"U\" suffix .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*( traditional C rejects the unary plus operator .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of '.x' is different in traditional C .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of '.a' is different in traditional C .-Wtraditional.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of '.u' is different in traditional C .-Wtraditional.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-trigraphs-1_4:
  bin: '"warn-trigraphs-1.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -trigraphs -Wtrigraphs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-trigraphs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -trigraphs -Wtrigraphs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(trigraph \\?\\?= converted to # .-Wtrigraphs.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-trigraphs-2_4:
  bin: '"warn-trigraphs-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wtrigraphs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-trigraphs-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wtrigraphs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(trigraph \\?\\?= ignored, use -trigraphs to enable .-Wtrigraphs.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-trigraphs-3_4:
  bin: '"warn-trigraphs-3.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -trigraphs -Werror=trigraphs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-trigraphs-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -trigraphs -Werror=trigraphs"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(trigraph \\?\\?= converted to # .-Werror=trigraphs.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-trigraphs-4_4:
  bin: '"warn-trigraphs-4.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=trigraphs -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-trigraphs-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=trigraphs"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(trigraph \\?\\?= ignored, use -trigraphs to enable .-Werror=trigraphs.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-undef-2_5:
  bin: '"warn-undef-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=undef -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-undef-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=undef"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\"x\" is not defined, evaluates to 0 .-Werror=undef.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-undef_5:
  bin: '"warn-undef.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wundef -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-undef.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wundef"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(\"x\" is not defined, evaluates to 0 .-Wundef.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-unused-macros-2_4:
  bin: '"warn-unused-macros-2.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Werror=unused-macros -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-unused-macros-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Werror=unused-macros"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(macro \"X\" is not used .-Werror=unused-macros.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-unused-macros_4:
  bin: '"warn-unused-macros.i"'
  cargs: ' -std=gnu99 -fdiagnostics-show-option -Wunused-macros -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-unused-macros.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fdiagnostics-show-option -Wunused-macros"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(macro \"X\" is not used .-Wunused-macros.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-variadic-2_6:
  bin: '"warn-variadic-2.i"'
  cargs: ' -ansi -fdiagnostics-show-option -pedantic -Werror=variadic-macros -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-variadic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -fdiagnostics-show-option -pedantic -Werror=variadic-macros"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(anonymous variadic macros were introduced in C99 .-Werror=variadic-macros.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not permit named variadic macros .-Werror=variadic-macros.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-variadic_6:
  bin: '"warn-variadic.i"'
  cargs: ' -ansi -fdiagnostics-show-option -pedantic -Wvariadic-macros -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/warn-variadic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -fdiagnostics-show-option -pedantic -Wvariadic-macros"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99 .-Wvariadic-macros.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not permit named variadic macros .-Wvariadic-macros.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wchar-1_24:
  bin: '"./wchar-1.exe"'
  cargs: ' -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/wchar-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_widestr1_9:
  bin: '"widestr1.i"'
  cargs: '  -ansi -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cpp/widestr1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a valid filename" "wide string in #line))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expects" "wide string in #include))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
