test_Wbad-function-cast-1_44:
  bin: '"Wbad-function-cast-1.s"'
  cargs: ' -Wbad-function-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/Wbad-function-cast-1.c'
  herit: *GRPSERIAL
  info: &1
    extraopts:
      - '"-Wbad-function-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'int' to non-matching type '_Decimal32'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'char' to non-matching type '_Decimal64'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'long int' to non-matching type '_Decimal128'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Decimal32' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Decimal64' to non-matching type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Decimal128' to non-matching type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'complex double' to non-matching type '_Decimal32'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wbad-function-cast-1_54:
  bin: '"Wbad-function-cast-1.s"'
  cargs: ' -Wbad-function-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/Wbad-function-cast-1.c'
  herit: *GRPSERIAL
  info: *1
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion-2_46:
  bin: '"Wtraditional-conversion-2.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/Wtraditional-conversion-2.c'
  herit: *GRPSERIAL
  info: &2
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd32' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd32' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd64' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd64' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd128' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd128' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd32' as '_Decimal32' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd32' as '_Decimal32' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd64' as '_Decimal64' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd64' as '_Decimal64' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fd128' as '_Decimal128' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fd128' as '_Decimal128' rather than 'double' due to prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion-2_55:
  bin: '"Wtraditional-conversion-2.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/Wtraditional-conversion-2.c'
  herit: *GRPSERIAL
  info: *2
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex_10:
  bin: '"builtin-complex.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/builtin-complex.c'
  herit: *GRPSERIAL
  info: &3
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not of real binary floating-point type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex_56:
  bin: '"builtin-complex.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/builtin-complex.c'
  herit: *GRPSERIAL
  info: *3
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-bad_40:
  bin: '"cast-bad.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/cast-bad.c'
  herit: *GRPSERIAL
  info: &4
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-bad_57:
  bin: '"cast-bad.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/cast-bad.c'
  herit: *GRPSERIAL
  info: *4
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_composite-type_55:
  bin: '"composite-type.s"'
  cargs: ' -O -Wall -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/composite-type.c'
  herit: *GRPSERIAL
  info: &5
    extraopts:
      - '"-O -Wall -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type '\[^\n\]*' from type '\[^\n\]*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type '\[^\n\]*' from type '\[^\n\]*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type '\[^\n\]*' from type '\[^\n\]*'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_composite-type_58:
  bin: '"composite-type.s"'
  cargs: ' -O -Wall -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/composite-type.c'
  herit: *GRPSERIAL
  info: *5
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-c99_12:
  bin: '"constants-c99.s"'
  cargs: ' -std=c99 -Wno-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-c99.c'
  herit: *GRPSERIAL
  info: &6
    extraopts:
      - '"-std=c99 -Wno-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-c99_59:
  bin: '"constants-c99.s"'
  cargs: ' -std=c99 -Wno-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-c99.c'
  herit: *GRPSERIAL
  info: *6
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-hex_14:
  bin: '"constants-hex.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-hex.c'
  herit: *GRPSERIAL
  info: &7
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix" "hexadecimal floating constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-hex_60:
  bin: '"constants-hex.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-hex.c'
  herit: *GRPSERIAL
  info: *7
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-pedantic_14:
  bin: '"constants-pedantic.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-pedantic.c'
  herit: *GRPSERIAL
  info: &8
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants-pedantic_61:
  bin: '"constants-pedantic.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants-pedantic.c'
  herit: *GRPSERIAL
  info: *8
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants_11:
  bin: '"constants.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants.c'
  herit: *GRPSERIAL
  info: &9 {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constants_62:
  bin: '"constants.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/constants.c'
  herit: *GRPSERIAL
  info: *9
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-complex_118:
  bin: '"./convert-complex.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-complex.c'
  herit: *GRPSERIAL
  info: &10
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-complex_63:
  bin: '"./convert-complex.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-complex.c'
  herit: *GRPSERIAL
  info: *10
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-dfp-round-thread_496:
  bin: '"./convert-dfp-round-thread.exe"'
  cargs: ' -std=gnu99 -D_GNU_SOURCE -pthread'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-dfp-round-thread.c'
  herit: *GRPSERIAL
  info: &11
    extraopts:
      - '"-std=gnu99 -D_GNU_SOURCE -pthread"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-dfp-round-thread_64:
  bin: '"./convert-dfp-round-thread.exe"'
  cargs: ' -std=gnu99 -D_GNU_SOURCE -pthread'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-dfp-round-thread.c'
  herit: *GRPSERIAL
  info: *11
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-dfp-round_124:
  bin: '"./convert-dfp-round.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-dfp-round.c'
  herit: *GRPSERIAL
  info: &12
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_convert-dfp-round_65:
  bin: '"./convert-dfp-round.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/convert-dfp-round.c'
  herit: *GRPSERIAL
  info: *12
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ctypes_52:
  bin: '"ctypes.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/ctypes.c'
  herit: *GRPSERIAL
  info: &13 {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ctypes_66:
  bin: '"ctypes.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/ctypes.c'
  herit: *GRPSERIAL
  info: *13
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ddmode-ice_54:
  bin: '"ddmode-ice.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/ddmode-ice.c'
  herit: *GRPSERIAL
  info: &14
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ddmode-ice_67:
  bin: '"ddmode-ice.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/ddmode-ice.c'
  herit: *GRPSERIAL
  info: *14
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dec-eval-method-2_20:
  bin: '"dec-eval-method-2.s"'
  cargs: ' -D__STDC_WANT_DEC_FP__ -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/dec-eval-method-2.c'
  herit: *GRPSERIAL
  info: &15
    extraopts:
      - '"-D__STDC_WANT_DEC_FP__"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dec-eval-method-2_68:
  bin: '"dec-eval-method-2.s"'
  cargs: ' -D__STDC_WANT_DEC_FP__ -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/dec-eval-method-2.c'
  herit: *GRPSERIAL
  info: *15
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dec-eval-method_13:
  bin: '"dec-eval-method.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/dec-eval-method.c'
  herit: *GRPSERIAL
  info: &16
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dec-eval-method_69:
  bin: '"dec-eval-method.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/dec-eval-method.c'
  herit: *GRPSERIAL
  info: *16
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decfloat-constants_47:
  bin: '"./decfloat-constants.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/decfloat-constants.c'
  herit: *GRPSERIAL
  info: &17 {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decfloat-constants_70:
  bin: '"./decfloat-constants.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/decfloat-constants.c'
  herit: *GRPSERIAL
  info: *17
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-binop_105:
  bin: '"./fe-binop.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-binop.c'
  herit: *GRPSERIAL
  info: &18 {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-binop_71:
  bin: '"./fe-binop.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-binop.c'
  herit: *GRPSERIAL
  info: *18
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-1_40:
  bin: '"./fe-convert-1.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-1.c'
  herit: *GRPSERIAL
  info: &19 {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-1_72:
  bin: '"./fe-convert-1.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-1.c'
  herit: *GRPSERIAL
  info: *19
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-2_33:
  bin: '"./fe-convert-2.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-2.c'
  herit: *GRPSERIAL
  info: &20
    extraopts:
      - '"-mno-hard-dfp" { target { s390*-*-* } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-2_73:
  bin: '"./fe-convert-2.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-2.c'
  herit: *GRPSERIAL
  info: *20
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-3_45:
  bin: '"./fe-convert-3.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-3.c'
  herit: *GRPSERIAL
  info: &21 {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fe-convert-3_74:
  bin: '"./fe-convert-3.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/fe-convert-3.c'
  herit: *GRPSERIAL
  info: *21
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-constant-double_20:
  bin: '"float-constant-double.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/float-constant-double.c'
  herit: *GRPSERIAL
  info: &22 {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-constant-double_75:
  bin: '"float-constant-double.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/float-constant-double.c'
  herit: *GRPSERIAL
  info: *22
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn_20:
  bin: '"floatn.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/floatn.c'
  herit: *GRPSERIAL
  info: &23
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn_76:
  bin: '"floatn.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/floatn.c'
  herit: *GRPSERIAL
  info: *23
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-c89_77:
  bin: '"keywords-c89.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-c89.c'
  herit: *GRPSERIAL
  info: &24
    extraopts:
      - '"-std=c89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-c89_8:
  bin: '"keywords-c89.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-c89.c'
  herit: *GRPSERIAL
  info: *24
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-c99_78:
  bin: '"keywords-c99.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-c99.c'
  herit: *GRPSERIAL
  info: &25
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-c99_8:
  bin: '"keywords-c99.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-c99.c'
  herit: *GRPSERIAL
  info: *25
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-ignored-c99_15:
  bin: '"keywords-ignored-c99.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-ignored-c99.c'
  herit: *GRPSERIAL
  info: &26
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-ignored-c99_79:
  bin: '"keywords-ignored-c99.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-ignored-c99.c'
  herit: *GRPSERIAL
  info: *26
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-pedantic_8:
  bin: '"keywords-pedantic.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-pedantic.c'
  herit: *GRPSERIAL
  info: &27
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-pedantic_80:
  bin: '"keywords-pedantic.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-pedantic.c'
  herit: *GRPSERIAL
  info: *27
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-reserved_16:
  bin: '"keywords-reserved.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-reserved.c'
  herit: *GRPSERIAL
  info: &28
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_keywords-reserved_81:
  bin: '"keywords-reserved.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/keywords-reserved.c'
  herit: *GRPSERIAL
  info: *28
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_operator-bitwise_63:
  bin: '"operator-bitwise.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/operator-bitwise.c'
  herit: *GRPSERIAL
  info: &29
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_operator-bitwise_82:
  bin: '"operator-bitwise.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/operator-bitwise.c'
  herit: *GRPSERIAL
  info: *29
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31344_25:
  bin: '"pr31344.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr31344.c'
  herit: *GRPSERIAL
  info: &30
    extraopts:
      - '"-O -mtune=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31344_83:
  bin: '"pr31344.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr31344.c'
  herit: *GRPSERIAL
  info: *30
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37435_11:
  bin: '"pr37435.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr37435.c'
  herit: *GRPSERIAL
  info: &31
    extraopts:
      - '"-O2 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37435_84:
  bin: '"pr37435.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr37435.c'
  herit: *GRPSERIAL
  info: *31
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41049_562:
  bin: '"./pr41049.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr41049.c'
  herit: *GRPSERIAL
  info: &32
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41049_85:
  bin: '"./pr41049.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr41049.c'
  herit: *GRPSERIAL
  info: *32
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48204_10:
  bin: '"pr48204.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-fre -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr48204.c'
  herit: *GRPSERIAL
  info: &33
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-fre -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48204_86:
  bin: '"pr48204.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-dominator-opts -fno-tree-fre -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr48204.c'
  herit: *GRPSERIAL
  info: *33
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48928_10:
  bin: '"pr48928.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr48928.c'
  herit: *GRPSERIAL
  info: &34
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48928_87:
  bin: '"pr48928.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr48928.c'
  herit: *GRPSERIAL
  info: *34
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52140_10:
  bin: '"pr52140.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr52140.c'
  herit: *GRPSERIAL
  info: &35
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52140_88:
  bin: '"pr52140.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr52140.c'
  herit: *GRPSERIAL
  info: *35
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70052_24:
  bin: '"pr70052.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr70052.c'
  herit: *GRPSERIAL
  info: &36
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70052_89:
  bin: '"pr70052.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr70052.c'
  herit: *GRPSERIAL
  info: *36
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79487_16:
  bin: '"./pr79487.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr79487.c'
  herit: *GRPSERIAL
  info: &37
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79487_90:
  bin: '"./pr79487.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr79487.c'
  herit: *GRPSERIAL
  info: *37
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79515_13:
  bin: '"pr79515.s"'
  cargs: ' -Wdouble-promotion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr79515.c'
  herit: *GRPSERIAL
  info: &38
    extraopts:
      - '"-Wdouble-promotion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79515_91:
  bin: '"pr79515.s"'
  cargs: ' -Wdouble-promotion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pr79515.c'
  herit: *GRPSERIAL
  info: *38
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-1_85:
  bin: '"pragma-float-const-decimal64-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-1.c'
  herit: *GRPSERIAL
  info: &39
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-1_92:
  bin: '"pragma-float-const-decimal64-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-1.c'
  herit: *GRPSERIAL
  info: *39
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-2_86:
  bin: '"pragma-float-const-decimal64-2.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-2.c'
  herit: *GRPSERIAL
  info: &40
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-2_93:
  bin: '"pragma-float-const-decimal64-2.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-2.c'
  herit: *GRPSERIAL
  info: *40
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-3_83:
  bin: '"pragma-float-const-decimal64-3.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-3.c'
  herit: *GRPSERIAL
  info: &41
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-3_94:
  bin: '"pragma-float-const-decimal64-3.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-3.c'
  herit: *GRPSERIAL
  info: *41
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-4_45:
  bin: '"pragma-float-const-decimal64-4.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-4.c'
  herit: *GRPSERIAL
  info: &42
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-4_95:
  bin: '"pragma-float-const-decimal64-4.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-4.c'
  herit: *GRPSERIAL
  info: *42
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-5_46:
  bin: '"pragma-float-const-decimal64-5.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-5.c'
  herit: *GRPSERIAL
  info: &43
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-5_96:
  bin: '"pragma-float-const-decimal64-5.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-5.c'
  herit: *GRPSERIAL
  info: *43
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-6_46:
  bin: '"pragma-float-const-decimal64-6.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-6.c'
  herit: *GRPSERIAL
  info: &44
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-6_97:
  bin: '"pragma-float-const-decimal64-6.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-6.c'
  herit: *GRPSERIAL
  info: *44
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-7_39:
  bin: '"pragma-float-const-decimal64-7.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-7.c'
  herit: *GRPSERIAL
  info: &45
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with hex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-7_98:
  bin: '"pragma-float-const-decimal64-7.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-7.c'
  herit: *GRPSERIAL
  info: *45
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-8_174:
  bin: '"pragma-float-const-decimal64-8.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-8.c'
  herit: *GRPSERIAL
  info: &46
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(#pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid location))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-float-const-decimal64-8_99:
  bin: '"pragma-float-const-decimal64-8.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/pragma-float-const-decimal64-8.c'
  herit: *GRPSERIAL
  info: *46
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-union_100:
  bin: '"struct-union.s"'
  cargs: ' -O -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/struct-union.c'
  herit: *GRPSERIAL
  info: &47
    extraopts:
      - '"-O -Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd32' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'd64' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-union_62:
  bin: '"struct-union.s"'
  cargs: ' -O -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/struct-union.c'
  herit: *GRPSERIAL
  info: *47
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typespec_101:
  bin: '"typespec.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/typespec.c'
  herit: *GRPSERIAL
  info: &48
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal32 _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal64 _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Decimal128 _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Decimal128))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal32))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal64))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Decimal128))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typespec_302:
  bin: '"typespec.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/typespec.c'
  herit: *GRPSERIAL
  info: *48
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-init_102:
  bin: '"./union-init.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/union-init.c'
  herit: *GRPSERIAL
  info: &49 {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-init_58:
  bin: '"./union-init.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/union-init.c'
  herit: *GRPSERIAL
  info: *49
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad-2_103:
  bin: '"usual-arith-conv-bad-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad-2.c'
  herit: *GRPSERIAL
  info: &50
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad-2_13:
  bin: '"usual-arith-conv-bad-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad-2.c'
  herit: *GRPSERIAL
  info: *50
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad-3_104:
  bin: '"usual-arith-conv-bad-3.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad-3.c'
  herit: *GRPSERIAL
  info: &51
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad-3_13:
  bin: '"usual-arith-conv-bad-3.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad-3.c'
  herit: *GRPSERIAL
  info: *51
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad_105:
  bin: '"usual-arith-conv-bad.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad.c'
  herit: *GRPSERIAL
  info: &52
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.*mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error.* mix operands of decimal float))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_usual-arith-conv-bad_49:
  bin: '"usual-arith-conv-bad.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/usual-arith-conv-bad.c'
  herit: *GRPSERIAL
  info: *52
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-conversion-1_106:
  bin: '"wtr-conversion-1.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/wtr-conversion-1.c'
  herit: *GRPSERIAL
  info: &53
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than 'float'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than 'long double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than '_Decimal64'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal32' rather than '_Decimal128'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal64' rather than 'float'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal64' rather than 'long double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal64' rather than '_Decimal128'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal128' rather than 'float'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(as '_Decimal128' rather than 'long double'" "prototype conversion warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-conversion-1_75:
  bin: '"wtr-conversion-1.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dfp/wtr-conversion-1.c'
  herit: *GRPSERIAL
  info: *53
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
