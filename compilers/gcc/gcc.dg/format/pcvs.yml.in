test_array-1_2:
  bin: '"array-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
  herit: *GRPSERIAL
  info: &1
    extraopts:
      - '"-std=gnu99 -Wformat=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(11:format" "wrong type with array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(11:unterminated" "unterminated array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(11:unterminated" "unterminated array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(11:format" "wrong type with array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(11:format" "wrong type with array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(11:format" "wrong type with array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(11:not a string literal" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(25:not a string literal" "volatile))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-1_223:
  bin: '"array-1.s"'
  cargs: '   -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
  herit: *GRPSERIAL
  info: *1
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-1_224:
  bin: '"array-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
  herit: *GRPSERIAL
  info: *1
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-1_41:
  bin: '"array-1.s"'
  cargs: '   -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/array-1.c'
  herit: *GRPSERIAL
  info: *1
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-1_225:
  bin: '"asm_fprintf-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
  herit: *GRPSERIAL
  info: &2
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "counter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(19:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(19:format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(19:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(18:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(20:matching" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(16:arguments" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(16:zero-length" "warning for empty format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(17:embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(19:embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(19:embedded|too many" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null format string warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(17:trailing" "trailing % warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(19:repeated" "repeated flag warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(30:wide" "wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "%s with NULL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(16:too many arguments for format" "too many arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-1_226:
  bin: '"asm_fprintf-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
  herit: *GRPSERIAL
  info: *2
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-1_4:
  bin: '"asm_fprintf-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
  herit: *GRPSERIAL
  info: *2
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-1_81:
  bin: '"asm_fprintf-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-1.c'
  herit: *GRPSERIAL
  info: *2
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-2_227:
  bin: '"asm_fprintf-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
  herit: *GRPSERIAL
  info: &3
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__gcc_host_wide_int__' is not defined as a type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-2_228:
  bin: '"asm_fprintf-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
  herit: *GRPSERIAL
  info: *3
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-2_6:
  bin: '"asm_fprintf-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
  herit: *GRPSERIAL
  info: *3
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-2_9:
  bin: '"asm_fprintf-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-2.c'
  herit: *GRPSERIAL
  info: *3
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-3_10:
  bin: '"asm_fprintf-3.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
  herit: *GRPSERIAL
  info: &4
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__gcc_host_wide_int__' is not defined as a type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-3_229:
  bin: '"asm_fprintf-3.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
  herit: *GRPSERIAL
  info: *4
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-3_230:
  bin: '"asm_fprintf-3.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
  herit: *GRPSERIAL
  info: *4
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-3_8:
  bin: '"asm_fprintf-3.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-3.c'
  herit: *GRPSERIAL
  info: *4
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-4_10:
  bin: '"asm_fprintf-4.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
  herit: *GRPSERIAL
  info: &5
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__gcc_host_wide_int__' is not defined as a type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-4_231:
  bin: '"asm_fprintf-4.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
  herit: *GRPSERIAL
  info: *5
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-4_232:
  bin: '"asm_fprintf-4.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-4.c'
  herit: *GRPSERIAL
  info: *5
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-5_10:
  bin: '"asm_fprintf-5.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
  herit: *GRPSERIAL
  info: &6
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__gcc_host_wide_int__' is not defined as 'long' or 'long long'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-5_12:
  bin: '"asm_fprintf-5.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
  herit: *GRPSERIAL
  info: *6
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-5_233:
  bin: '"asm_fprintf-5.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
  herit: *GRPSERIAL
  info: *6
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm_fprintf-5_234:
  bin: '"asm_fprintf-5.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/asm_fprintf-5.c'
  herit: *GRPSERIAL
  info: *6
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-1_10:
  bin: '"attr-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
  herit: *GRPSERIAL
  info: &7
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot format" "strftime first_arg_num != 0))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-1_14:
  bin: '"attr-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
  herit: *GRPSERIAL
  info: *7
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-1_235:
  bin: '"attr-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
  herit: *GRPSERIAL
  info: *7
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-1_236:
  bin: '"attr-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-1.c'
  herit: *GRPSERIAL
  info: *7
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-2_16:
  bin: '"attr-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
  herit: *GRPSERIAL
  info: &8
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(19:format" "attribute format printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format __printf__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(22:format" "attribute format __scanf__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format strftime))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format __strftime__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format strfmon))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format __strfmon__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ __printf__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ __scanf__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ strftime))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ __strftime__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ strfmon))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format__ __strfmon__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format_arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute __format_arg__))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-2_237:
  bin: '"attr-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
  herit: *GRPSERIAL
  info: *8
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-2_238:
  bin: '"attr-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
  herit: *GRPSERIAL
  info: *8
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-2_68:
  bin: '"attr-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-2.c'
  herit: *GRPSERIAL
  info: *8
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-3_18:
  bin: '"attr-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
  herit: *GRPSERIAL
  info: &9
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format_arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format_arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "bad format_arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not apply|only applies" "format on struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not apply|only applies" "format on union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not apply|only applies" "format on enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not apply|only applies" "format_arg on struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not apply|only applies" "format_arg on union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not apply|only applies" "format_arg on enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(format specifier" "non-id format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operand" "bad number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operand" "bad number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operand" "bad format_arg number))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows" "bad number order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows" "bad number order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a string" "format int string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a string" "signed char string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a string" "unsigned char string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not" "not ...))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not" "not ...))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a string" "format_arg int string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a string" "format_arg signed char string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a string" "format_arg unsigned char string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not return string" "format_arg ret int string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not return string" "format_arg ret signed char string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not return string" "format_arg ret unsigned char string))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(format function type" "unknown format))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-3_239:
  bin: '"attr-3.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
  herit: *GRPSERIAL
  info: *9
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-3_240:
  bin: '"attr-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
  herit: *GRPSERIAL
  info: *9
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-3_71:
  bin: '"attr-3.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-3.c'
  herit: *GRPSERIAL
  info: *9
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-4_20:
  bin: '"attr-4.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
  herit: *GRPSERIAL
  info: &10
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(20:format" "attribute format printf case 0))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format printf case 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format printf case 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "attribute format printf case 3))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-4_241:
  bin: '"attr-4.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
  herit: *GRPSERIAL
  info: *10
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-4_242:
  bin: '"attr-4.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
  herit: *GRPSERIAL
  info: *10
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-4_26:
  bin: '"attr-4.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-4.c'
  herit: *GRPSERIAL
  info: *10
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-5_22:
  bin: '"attr-5.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
  herit: *GRPSERIAL
  info: &11
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(conflict" "conflict))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-5_243:
  bin: '"attr-5.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
  herit: *GRPSERIAL
  info: *11
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-5_244:
  bin: '"attr-5.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
  herit: *GRPSERIAL
  info: *11
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-5_28:
  bin: '"attr-5.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-5.c'
  herit: *GRPSERIAL
  info: *11
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-6_22:
  bin: '"attr-6.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
  herit: *GRPSERIAL
  info: &12
    extraopts:
      - '"-std=gnu89 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(12:format" "implicit scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit" "implicit decl warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-6_24:
  bin: '"attr-6.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
  herit: *GRPSERIAL
  info: *12
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-6_245:
  bin: '"attr-6.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
  herit: *GRPSERIAL
  info: *12
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-6_246:
  bin: '"attr-6.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-6.c'
  herit: *GRPSERIAL
  info: *12
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-7_247:
  bin: '"attr-7.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
  herit: *GRPSERIAL
  info: &13
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(23:format" "prefix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "prefix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "postfix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "postfix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "nested 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "nested 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-7_248:
  bin: '"attr-7.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
  herit: *GRPSERIAL
  info: *13
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-7_26:
  bin: '"attr-7.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
  herit: *GRPSERIAL
  info: *13
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-7_35:
  bin: '"attr-7.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/attr-7.c'
  herit: *GRPSERIAL
  info: *13
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-1_249:
  bin: '"bitfld-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
  herit: *GRPSERIAL
  info: &14
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(15:has type '.*unsigned int:48'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-1_250:
  bin: '"bitfld-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
  herit: *GRPSERIAL
  info: *14
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-1_28:
  bin: '"bitfld-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
  herit: *GRPSERIAL
  info: *14
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-1_51:
  bin: '"bitfld-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/bitfld-1.c'
  herit: *GRPSERIAL
  info: *14
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_branch-1_251:
  bin: '"branch-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
  herit: *GRPSERIAL
  info: &15
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(23:int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(16:int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(36:int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(23:int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(38:too many" "too many args in all branches))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(64:long int" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(27:long int" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(53:long int" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(14:too many" "NULL extra args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null format arg))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_branch-1_252:
  bin: '"branch-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
  herit: *GRPSERIAL
  info: *15
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_branch-1_28:
  bin: '"branch-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
  herit: *GRPSERIAL
  info: *15
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_branch-1_30:
  bin: '"branch-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/branch-1.c'
  herit: *GRPSERIAL
  info: *15
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-1_22:
  bin: '"builtin-1.s"'
  cargs: '   -std=gnu99 -Wformat -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
  herit: *GRPSERIAL
  info: &16
    extraopts:
      - '"-std=gnu99 -Wformat -ffreestanding"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "__builtin_fprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "__builtin_printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "__builtin_fprintf_unlocked))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "__builtin_printf_unlocked))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-1_253:
  bin: '"builtin-1.s"'
  cargs: '   -std=gnu99 -Wformat -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
  herit: *GRPSERIAL
  info: *16
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-1_254:
  bin: '"builtin-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
  herit: *GRPSERIAL
  info: *16
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-1_32:
  bin: '"builtin-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/builtin-1.c'
  herit: *GRPSERIAL
  info: *16
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-1_248:
  bin: '"c90-printf-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
  herit: *GRPSERIAL
  info: &17
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(14:width" "width with %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(14:format|precision" "negative precision warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(too many arguments for format" "too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(14:format" "broken %.-*d format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(too many arguments for format" "too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(15:precision" "precision with %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(15:precision" "precision with %p))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(15:precision" "precision with %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(14:type" "missing type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(15:trailing" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(13:type" "missing type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(14:trailing" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(15:format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(15:format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(15:format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(14:conversion lacks type" "bare %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(15:conversion" "bogus %h.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(15:length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(14:length|C" "C90 bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(14:length|C" "C90 bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(14:does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(14:does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(14:does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(14:does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(14:does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(14:does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(14:length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(14:length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(14:length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(14:length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of %-n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(11:use of both|ignored" "use of space and + flags))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(11:use of both|ignored" "use of space and + flags))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(14:flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(11:ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(11:ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(11:ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(11:ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(11:ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(11:ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(11:flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(13:field" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(15:field" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(14:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(13:format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: warning:[^
        ]*(15:matching" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: warning:[^
        ]*(11:arguments" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: warning:[^
        ]*(11:zero-length" "warning for empty format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(12:embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: warning:[^
        ]*(14:embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded|too many" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: warning:[^
        ]*(3:null" "null format string warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: warning:[^
        ]*(12:trailing" "trailing % warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: warning:[^
        ]*(14:repeated" "repeated flag warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: warning:[^
        ]*(3:constant" "%n with const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: warning:[^
        ]*(25:wide" "wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: warning:[^
        ]*(3:null" "%n with NULL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: warning:[^
        ]*(3:null" "%s with NULL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: warning:[^
        ]*(25:width" "width with %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: warning:[^
        ]*(20:width" "width with %n))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-1_255:
  bin: '"c90-printf-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
  herit: *GRPSERIAL
  info: *17
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-1_256:
  bin: '"c90-printf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
  herit: *GRPSERIAL
  info: *17
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-1_34:
  bin: '"c90-printf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-1.c'
  herit: *GRPSERIAL
  info: *17
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-2_24:
  bin: '"c90-printf-2.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
  herit: *GRPSERIAL
  info: &18
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%hh in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%ll in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%j in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%z in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%t in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%F in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%a in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%A in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-2_257:
  bin: '"c90-printf-2.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
  herit: *GRPSERIAL
  info: *18
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-2_258:
  bin: '"c90-printf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
  herit: *GRPSERIAL
  info: *18
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-2_36:
  bin: '"c90-printf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-2.c'
  herit: *GRPSERIAL
  info: *18
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-3_259:
  bin: '"c90-printf-3.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
  herit: *GRPSERIAL
  info: &19
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vfprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsprintf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-3_260:
  bin: '"c90-printf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
  herit: *GRPSERIAL
  info: *19
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-3_38:
  bin: '"c90-printf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
  herit: *GRPSERIAL
  info: *19
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-printf-3_42:
  bin: '"c90-printf-3.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-printf-3.c'
  herit: *GRPSERIAL
  info: *19
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-1_119:
  bin: '"c90-scanf-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
  herit: *GRPSERIAL
  info: &20
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(suppress" "suppression of %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(together" "suppression with length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "warning for zero width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "width with %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion lacks type" "bare %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion" "bogus %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(no closing" "incomplete scanset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(constant" "%d writing into const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(constant" "%n writing into const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(constant" "%s writing into const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(constant" "%p writing into const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(matching" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(arguments" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(zero-length" "warning for empty format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded|too many" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null format string warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(trailing" "trailing % warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "writing into NULL))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-1_261:
  bin: '"c90-scanf-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
  herit: *GRPSERIAL
  info: *20
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-1_262:
  bin: '"c90-scanf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
  herit: *GRPSERIAL
  info: *20
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-1_40:
  bin: '"c90-scanf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-1.c'
  herit: *GRPSERIAL
  info: *20
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-2_25:
  bin: '"c90-scanf-2.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
  herit: *GRPSERIAL
  info: &21
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%hh in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%ll in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%j in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%z in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "%t in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%F in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%a in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%A in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-2_263:
  bin: '"c90-scanf-2.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
  herit: *GRPSERIAL
  info: *21
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-2_264:
  bin: '"c90-scanf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
  herit: *GRPSERIAL
  info: *21
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-2_42:
  bin: '"c90-scanf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-2.c'
  herit: *GRPSERIAL
  info: *21
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-3_19:
  bin: '"c90-scanf-3.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
  herit: *GRPSERIAL
  info: &22
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%as))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%aS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%a[]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-3_265:
  bin: '"c90-scanf-3.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
  herit: *GRPSERIAL
  info: *22
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-3_266:
  bin: '"c90-scanf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
  herit: *GRPSERIAL
  info: *22
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-3_44:
  bin: '"c90-scanf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-3.c'
  herit: *GRPSERIAL
  info: *22
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-4_267:
  bin: '"c90-scanf-4.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
  herit: *GRPSERIAL
  info: &23
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "sscanf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-4_268:
  bin: '"c90-scanf-4.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
  herit: *GRPSERIAL
  info: *23
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-4_33:
  bin: '"c90-scanf-4.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
  herit: *GRPSERIAL
  info: *23
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-4_46:
  bin: '"c90-scanf-4.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-4.c'
  herit: *GRPSERIAL
  info: *23
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-5_19:
  bin: '"c90-scanf-5.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
  herit: *GRPSERIAL
  info: &24
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%ms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%mS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%mls))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%m[]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%ml[]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-5_269:
  bin: '"c90-scanf-5.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
  herit: *GRPSERIAL
  info: *24
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-5_270:
  bin: '"c90-scanf-5.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
  herit: *GRPSERIAL
  info: *24
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scanf-5_48:
  bin: '"c90-scanf-5.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-scanf-5.c'
  herit: *GRPSERIAL
  info: *24
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-1_19:
  bin: '"c90-strftime-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
  herit: *GRPSERIAL
  info: &25
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-1_271:
  bin: '"c90-strftime-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
  herit: *GRPSERIAL
  info: *25
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-1_272:
  bin: '"c90-strftime-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
  herit: *GRPSERIAL
  info: *25
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-1_50:
  bin: '"c90-strftime-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-1.c'
  herit: *GRPSERIAL
  info: *25
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-2_273:
  bin: '"c90-strftime-2.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
  herit: *GRPSERIAL
  info: &26
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat -Wformat-y2k"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%C not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%D not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%e not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%F not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%g not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%G not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%h not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%n not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%r not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%R not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%t not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%T not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%u not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%V not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%z not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%E not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%O not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-2_274:
  bin: '"c90-strftime-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
  herit: *GRPSERIAL
  info: *26
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-2_31:
  bin: '"c90-strftime-2.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
  herit: *GRPSERIAL
  info: *26
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-strftime-2_52:
  bin: '"c90-strftime-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c90-strftime-2.c'
  herit: *GRPSERIAL
  info: *26
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-printf-1_18:
  bin: '"c94-printf-1.s"'
  cargs: '   -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
  herit: *GRPSERIAL
  info: &27
    extraopts:
      - '"-std=iso9899:199409 -pedantic -Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-printf-1_275:
  bin: '"c94-printf-1.s"'
  cargs: '   -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
  herit: *GRPSERIAL
  info: *27
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-printf-1_276:
  bin: '"c94-printf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
  herit: *GRPSERIAL
  info: *27
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-printf-1_54:
  bin: '"c94-printf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-printf-1.c'
  herit: *GRPSERIAL
  info: *27
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-scanf-1_17:
  bin: '"c94-scanf-1.s"'
  cargs: '   -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
  herit: *GRPSERIAL
  info: &28
    extraopts:
      - '"-std=iso9899:199409 -pedantic -Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-scanf-1_277:
  bin: '"c94-scanf-1.s"'
  cargs: '   -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
  herit: *GRPSERIAL
  info: *28
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-scanf-1_278:
  bin: '"c94-scanf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
  herit: *GRPSERIAL
  info: *28
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-scanf-1_56:
  bin: '"c94-scanf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:199409 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c94-scanf-1.c'
  herit: *GRPSERIAL
  info: *28
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-1_197:
  bin: '"c99-printf-1.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
  herit: *GRPSERIAL
  info: &29
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(length|C" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of %-n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of + flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(use of both|ignored" "use of space and + flags))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(use of both|ignored" "use of space and + flags))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of space flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of # flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of 0 flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored" "0 flag ignored with precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(flags|ignored" "0 flag ignored with - flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "%hhn plain char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "%hhn unsigned char))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-1_279:
  bin: '"c99-printf-1.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
  herit: *GRPSERIAL
  info: *29
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-1_280:
  bin: '"c99-printf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
  herit: *GRPSERIAL
  info: *29
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-1_58:
  bin: '"c99-printf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-1.c'
  herit: *GRPSERIAL
  info: *29
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-2_281:
  bin: '"c99-printf-2.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
  herit: *GRPSERIAL
  info: &30
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%q length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%L length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%Z length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf $ format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf I flag))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-2_282:
  bin: '"c99-printf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
  herit: *GRPSERIAL
  info: *30
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-2_32:
  bin: '"c99-printf-2.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
  herit: *GRPSERIAL
  info: *30
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-2_60:
  bin: '"c99-printf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-2.c'
  herit: *GRPSERIAL
  info: *30
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-3_283:
  bin: '"c99-printf-3.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
  herit: *GRPSERIAL
  info: &31
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "snprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vfprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsnprintf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-3_284:
  bin: '"c99-printf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
  herit: *GRPSERIAL
  info: *31
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-3_39:
  bin: '"c99-printf-3.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
  herit: *GRPSERIAL
  info: *31
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-printf-3_62:
  bin: '"c99-printf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-printf-3.c'
  herit: *GRPSERIAL
  info: *31
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-1_145:
  bin: '"c99-scanf-1.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
  herit: *GRPSERIAL
  info: &32
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(suppress" "suppression of %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(together" "suppression with length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "warning for zero width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "width with %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %hh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %ll))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(does not support" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %L))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "%hhd sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "%hhu sign))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-1_285:
  bin: '"c99-scanf-1.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
  herit: *GRPSERIAL
  info: *32
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-1_286:
  bin: '"c99-scanf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
  herit: *GRPSERIAL
  info: *32
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-1_64:
  bin: '"c99-scanf-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-1.c'
  herit: *GRPSERIAL
  info: *32
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-2_26:
  bin: '"c99-scanf-2.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
  herit: *GRPSERIAL
  info: &33
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%q length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%L length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf $ format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf I flag))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-2_287:
  bin: '"c99-scanf-2.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
  herit: *GRPSERIAL
  info: *33
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-2_288:
  bin: '"c99-scanf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
  herit: *GRPSERIAL
  info: *33
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-2_66:
  bin: '"c99-scanf-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-2.c'
  herit: *GRPSERIAL
  info: *33
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-3_289:
  bin: '"c99-scanf-3.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
  herit: *GRPSERIAL
  info: &34
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "sscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vfscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsscanf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-3_290:
  bin: '"c99-scanf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
  herit: *GRPSERIAL
  info: *34
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-3_32:
  bin: '"c99-scanf-3.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
  herit: *GRPSERIAL
  info: *34
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-3_68:
  bin: '"c99-scanf-3.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-3.c'
  herit: *GRPSERIAL
  info: *34
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-4_19:
  bin: '"c99-scanf-4.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
  herit: *GRPSERIAL
  info: &35
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%ms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%mS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%mls))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%m[]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "%ml[]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-4_291:
  bin: '"c99-scanf-4.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
  herit: *GRPSERIAL
  info: *35
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-4_292:
  bin: '"c99-scanf-4.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
  herit: *GRPSERIAL
  info: *35
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scanf-4_70:
  bin: '"c99-scanf-4.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-scanf-4.c'
  herit: *GRPSERIAL
  info: *35
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-1_293:
  bin: '"c99-strftime-1.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
  herit: *GRPSERIAL
  info: &36
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat -Wformat-y2k"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(multiple|repeated" "multiple %E/%O))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(multiple|together" "multiple %E/%O))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(multiple|together" "multiple %E/%O))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(multiple|repeated" "multiple %E/%O))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ea))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EA))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Eb))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EB))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %ED))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ee))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EF))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Eg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EG))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Eh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EH))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EI))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ej))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Em))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EM))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %En))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ep))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Er))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %ER))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %ES))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Et))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %ET))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Eu))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EU))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EV))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ew))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EW))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ez))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %EZ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %E%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Oa))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OA))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ob))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OB))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Oc))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(in some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier|C" "bad %OC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OF))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier|C" "bad %Og))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier|C" "bad %OG))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Oh))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier|C" "bad %Oj))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %On))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Op))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Or))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OR))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OT))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %Ox))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(in some locales" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OX))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier|C" "bad %OY))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier|C" "bad %Oz))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OZ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %O%))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-1_294:
  bin: '"c99-strftime-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
  herit: *GRPSERIAL
  info: *36
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-1_72:
  bin: '"c99-strftime-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
  herit: *GRPSERIAL
  info: *36
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-1_97:
  bin: '"c99-strftime-1.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-1.c'
  herit: *GRPSERIAL
  info: *36
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-2_23:
  bin: '"c99-strftime-2.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
  herit: *GRPSERIAL
  info: &37
    extraopts:
      - '"-std=iso9899:1999 -pedantic -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "strftime %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "strftime %k))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "strftime %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "strftime %s))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "strftime width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "strftime flags))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-2_295:
  bin: '"c99-strftime-2.s"'
  cargs: '   -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
  herit: *GRPSERIAL
  info: *37
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-2_296:
  bin: '"c99-strftime-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
  herit: *GRPSERIAL
  info: *37
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-strftime-2_74:
  bin: '"c99-strftime-2.s"'
  cargs: '  -DWIDE  -std=iso9899:1999 -pedantic -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/c99-strftime-2.c'
  herit: *GRPSERIAL
  info: *37
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-1_16:
  bin: '"cast-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
  herit: *GRPSERIAL
  info: &38
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-1_297:
  bin: '"cast-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
  herit: *GRPSERIAL
  info: *38
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-1_298:
  bin: '"cast-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
  herit: *GRPSERIAL
  info: *38
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-1_76:
  bin: '"cast-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/cast-1.c'
  herit: *GRPSERIAL
  info: *38
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-printf-1_123:
  bin: '"dfp-printf-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
  herit: *GRPSERIAL
  info: &39
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(flag ignored" "ignore flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(flag ignored" "ignore flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(flag ignored" "ignore flag))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-printf-1_299:
  bin: '"dfp-printf-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
  herit: *GRPSERIAL
  info: *39
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-printf-1_300:
  bin: '"dfp-printf-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
  herit: *GRPSERIAL
  info: *39
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-printf-1_78:
  bin: '"dfp-printf-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-printf-1.c'
  herit: *GRPSERIAL
  info: *39
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-scanf-1_301:
  bin: '"dfp-scanf-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
  herit: *GRPSERIAL
  info: &40
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument" "bad use of %DD))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %H))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-scanf-1_302:
  bin: '"dfp-scanf-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
  herit: *GRPSERIAL
  info: *40
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-scanf-1_80:
  bin: '"dfp-scanf-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
  herit: *GRPSERIAL
  info: *40
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dfp-scanf-1_99:
  bin: '"dfp-scanf-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/dfp-scanf-1.c'
  herit: *GRPSERIAL
  info: *40
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-1_18:
  bin: '"diag-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
  herit: *GRPSERIAL
  info: &41
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(hh" "%hhf warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(ll" "%llf warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(size_t" "size_t format warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-1_303:
  bin: '"diag-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
  herit: *GRPSERIAL
  info: *41
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-1_304:
  bin: '"diag-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
  herit: *GRPSERIAL
  info: *41
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-1_82:
  bin: '"diag-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-1.c'
  herit: *GRPSERIAL
  info: *41
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-2_13:
  bin: '"diag-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
  herit: *GRPSERIAL
  info: &42
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(char \\*" "correct arg type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(size_t \\*" "correct arg type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-2_305:
  bin: '"diag-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
  herit: *GRPSERIAL
  info: *42
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-2_306:
  bin: '"diag-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
  herit: *GRPSERIAL
  info: *42
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-2_84:
  bin: '"diag-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diag-2.c'
  herit: *GRPSERIAL
  info: *42
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-ranges_307:
  bin: '"diagnostic-ranges.s"'
  cargs: '   -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
  herit: *GRPSERIAL
  info: &43
    extraopts:
      - '"-Wformat -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%s' expects argument of type 'char \\*', but argument 2 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int', but argument 2 has type 'long int' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(29: format '%s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(29: format '%s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(11: format '%d' expects a matching 'int' argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(17: format '%s' expects argument of type 'char \\*', but argument 2 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(14: field width specifier '\\*' expects argument of type 'int', but argument 2 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(28: field width specifier '\\*' expects argument of type 'int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(28: field width specifier '\\*' expects argument of type 'int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(29: field precision specifier '\\.\\*' expects argument of type 'int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: warning:[^
        ]*(29: field precision specifier '\\.\\*' expects argument of type 'int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(23: spurious trailing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(20: empty left precision in gnu_strfmon format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(22: empty precision in gnu_strfmon format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(14: repeated '\\+' flag in format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: warning:[^
        ]*(14:conversion lacks type at end of format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: warning:[^
        ]*(13:embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: warning:[^
        ]*(10: format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: warning:[^
        ]*(10: format '%u' expects argument of type 'unsigned int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%i' expects argument of type 'int', but argument 2 has type 'const char \\*' ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format .%d. expects argument of type .int., but argument 2 has type .double.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format .%d. expects argument of type .int., but argument 2 has type .double.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-ranges_308:
  bin: '"diagnostic-ranges.s"'
  cargs: '  -DWIDE  -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
  herit: *GRPSERIAL
  info: *43
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-ranges_335:
  bin: '"diagnostic-ranges.s"'
  cargs: '   -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
  herit: *GRPSERIAL
  info: *43
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-ranges_86:
  bin: '"diagnostic-ranges.s"'
  cargs: '  -DWIDE  -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/diagnostic-ranges.c'
  herit: *GRPSERIAL
  info: *43
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_errmk-1_12:
  bin: '"errmk-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
  herit: *GRPSERIAL
  info: &44
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared|function" "u undeclared error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_errmk-1_309:
  bin: '"errmk-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
  herit: *GRPSERIAL
  info: *44
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_errmk-1_310:
  bin: '"errmk-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
  herit: *GRPSERIAL
  info: *44
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_errmk-1_88:
  bin: '"errmk-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/errmk-1.c'
  herit: *GRPSERIAL
  info: *44
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-1_126:
  bin: '"ext-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
  herit: *GRPSERIAL
  info: &45
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %+m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad % m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %#m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %0m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %'m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hhm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %lm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %llm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %jm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %zm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %tm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %Lm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %qm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %Zm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(no argument" "printf %1\$m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fprintf_unlocked))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf_unlocked))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-1_311:
  bin: '"ext-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
  herit: *GRPSERIAL
  info: *45
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-1_312:
  bin: '"ext-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
  herit: *GRPSERIAL
  info: *45
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-1_90:
  bin: '"ext-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-1.c'
  herit: *GRPSERIAL
  info: *45
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-2_313:
  bin: '"ext-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
  herit: *GRPSERIAL
  info: &46
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad use of %q))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of I flag))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-2_314:
  bin: '"ext-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
  herit: *GRPSERIAL
  info: *46
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-2_73:
  bin: '"ext-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
  herit: *GRPSERIAL
  info: *46
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-2_92:
  bin: '"ext-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-2.c'
  herit: *GRPSERIAL
  info: *46
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-3_216:
  bin: '"ext-3.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
  herit: *GRPSERIAL
  info: &47
    extraopts:
      - '"-std=gnu99 -Wformat -Wformat-y2k"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %a))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %a))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %a))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %a))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %b))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %b))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %b))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %b))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %B))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %B))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %B))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %B))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %F))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %F))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %F))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %F))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %h))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %p))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %p))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %p))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %p))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %r))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %r))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %r))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %r))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %R))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %R))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %R))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %R))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %T))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %T))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %T))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %T))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %Z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %x))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %x))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %x))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %x))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(width" "bad %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %d))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %d))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %e))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %e))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %F))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %F))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %G))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %G))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %H))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %I))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %I))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %j))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %m))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %M))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %M))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %n))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %p))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %r))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %r))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %R))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %R))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %t))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %T))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %T))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %u))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %u))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %U))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %U))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %V))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %V))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %w))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %w))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %W))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %W))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %X))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %Y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %Y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %z))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %P))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %k))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %k))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %l))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %s))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %s))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %c))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %D))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %g))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %g))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %x))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %x))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(only last 2" "2-digit year))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(flag|modifier" "bad %OP))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %-_))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %-0))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %_0))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %^#))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-3_315:
  bin: '"ext-3.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
  herit: *GRPSERIAL
  info: *47
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-3_316:
  bin: '"ext-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
  herit: *GRPSERIAL
  info: *47
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-3_94:
  bin: '"ext-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-3.c'
  herit: *GRPSERIAL
  info: *47
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-4_18:
  bin: '"ext-4.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
  herit: *GRPSERIAL
  info: &48
    extraopts:
      - '"-std=gnu89 -Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-4_317:
  bin: '"ext-4.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
  herit: *GRPSERIAL
  info: *48
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-4_318:
  bin: '"ext-4.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
  herit: *GRPSERIAL
  info: *48
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-4_96:
  bin: '"ext-4.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-4.c'
  herit: *GRPSERIAL
  info: *48
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-5_17:
  bin: '"ext-5.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
  herit: *GRPSERIAL
  info: &49
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "gettext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "dgettext))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "dcgettext))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-5_319:
  bin: '"ext-5.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
  herit: *GRPSERIAL
  info: *49
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-5_320:
  bin: '"ext-5.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
  herit: *GRPSERIAL
  info: *49
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-5_98:
  bin: '"ext-5.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-5.c'
  herit: *GRPSERIAL
  info: *49
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-6_100:
  bin: '"ext-6.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
  herit: *GRPSERIAL
  info: &50
    extraopts:
      - '"-std=gnu89 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fprintf_unlocked))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf_unlocked))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "snprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vfprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsnprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "fscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "sscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vfscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vscanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "vsscanf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-6_321:
  bin: '"ext-6.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
  herit: *GRPSERIAL
  info: *50
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-6_322:
  bin: '"ext-6.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
  herit: *GRPSERIAL
  info: *50
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-6_47:
  bin: '"ext-6.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-6.c'
  herit: *GRPSERIAL
  info: *50
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-7_102:
  bin: '"ext-7.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
  herit: *GRPSERIAL
  info: &51
    extraopts:
      - '"-std=gnu89 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(but argument 2 has type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(but argument 2 has type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(flag together))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(flag together))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(flag together))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-7_323:
  bin: '"ext-7.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
  herit: *GRPSERIAL
  info: *51
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-7_324:
  bin: '"ext-7.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
  herit: *GRPSERIAL
  info: *51
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-7_85:
  bin: '"ext-7.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-7.c'
  herit: *GRPSERIAL
  info: *51
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-8_104:
  bin: '"ext-8.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
  herit: *GRPSERIAL
  info: &52
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment suppression and length modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(flag used with))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-8_325:
  bin: '"ext-8.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
  herit: *GRPSERIAL
  info: *52
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-8_326:
  bin: '"ext-8.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
  herit: *GRPSERIAL
  info: *52
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-8_56:
  bin: '"ext-8.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/ext-8.c'
  herit: *GRPSERIAL
  info: *52
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_few-1_106:
  bin: '"few-1.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
  herit: *GRPSERIAL
  info: &53
    extraopts:
      - '"-std=gnu89 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(field width specifier '\\*' expects a matching 'int' argument" "width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(field precision specifier '\\.\\*' expects a matching 'int' argument" "precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%s' expects a matching 'char \\*' argument" "format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(field width specifier '\\*' expects argument of type 'int'" "width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%s' expects a matching 'char \\*' argument" "format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%s' expects argument of type 'char \\*'" "char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int'" "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects a matching 'int' argument" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%lc' expects a matching 'wint_t' argument" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%lc' expects argument of type 'wint_t'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%s' expects a matching 'char \\*' argument" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%i' expects argument of type 'int \\*'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%lc' expects a matching 'wchar_t \\*' argument" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(format '%lc' expects argument of type 'wchar_t \\*'" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_few-1_30:
  bin: '"few-1.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
  herit: *GRPSERIAL
  info: *53
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_few-1_327:
  bin: '"few-1.s"'
  cargs: '   -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
  herit: *GRPSERIAL
  info: *53
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_few-1_328:
  bin: '"few-1.s"'
  cargs: '  -DWIDE  -std=gnu89 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/few-1.c'
  herit: *GRPSERIAL
  info: *53
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-1_108:
  bin: '"gcc_diag-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
  herit: *GRPSERIAL
  info: &54
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus tree))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus tree))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus tree))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "missing arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus modifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "missing arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "missing arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "missing arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "extra arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "missing arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "HEX))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "counter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad * argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(matching" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(arguments" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: warning:[^
        ]*(zero-length" "warning for empty format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded|too many" "warning for embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null format string warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(trailing" "trailing % warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(wide" "wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "%s with NULL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-1_225:
  bin: '"gcc_diag-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
  herit: *GRPSERIAL
  info: *54
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-1_329:
  bin: '"gcc_diag-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
  herit: *GRPSERIAL
  info: *54
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-1_330:
  bin: '"gcc_diag-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-1.c'
  herit: *GRPSERIAL
  info: *54
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-2_10:
  bin: '"gcc_diag-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
  herit: *GRPSERIAL
  info: &55
    extraopts:
      - '"-Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-2_110:
  bin: '"gcc_diag-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
  herit: *GRPSERIAL
  info: *55
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-2_331:
  bin: '"gcc_diag-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
  herit: *GRPSERIAL
  info: *55
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-2_332:
  bin: '"gcc_diag-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-2.c'
  herit: *GRPSERIAL
  info: *55
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-3_10:
  bin: '"gcc_diag-3.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
  herit: *GRPSERIAL
  info: &56
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('tree' is not defined as a type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-3_112:
  bin: '"gcc_diag-3.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
  herit: *GRPSERIAL
  info: *56
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-3_333:
  bin: '"gcc_diag-3.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
  herit: *GRPSERIAL
  info: *56
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-3_334:
  bin: '"gcc_diag-3.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-3.c'
  herit: *GRPSERIAL
  info: *56
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-4_10:
  bin: '"gcc_diag-4.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
  herit: *GRPSERIAL
  info: &57
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('tree' is not defined as a pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-4_114:
  bin: '"gcc_diag-4.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
  herit: *GRPSERIAL
  info: *57
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-4_335:
  bin: '"gcc_diag-4.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
  herit: *GRPSERIAL
  info: *57
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-4_336:
  bin: '"gcc_diag-4.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-4.c'
  herit: *GRPSERIAL
  info: *57
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-5_10:
  bin: '"gcc_diag-5.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
  herit: *GRPSERIAL
  info: &58
    extraopts:
      - '"-Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-5_116:
  bin: '"gcc_diag-5.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
  herit: *GRPSERIAL
  info: *58
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-5_337:
  bin: '"gcc_diag-5.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
  herit: *GRPSERIAL
  info: *58
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-5_338:
  bin: '"gcc_diag-5.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-5.c'
  herit: *GRPSERIAL
  info: *58
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-6_10:
  bin: '"gcc_diag-6.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
  herit: *GRPSERIAL
  info: &59
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('location_t' is not defined as a type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-6_118:
  bin: '"gcc_diag-6.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
  herit: *GRPSERIAL
  info: *59
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-6_339:
  bin: '"gcc_diag-6.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
  herit: *GRPSERIAL
  info: *59
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-6_340:
  bin: '"gcc_diag-6.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-6.c'
  herit: *GRPSERIAL
  info: *59
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-7_10:
  bin: '"gcc_diag-7.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
  herit: *GRPSERIAL
  info: &60
    extraopts:
      - '"-Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-7_120:
  bin: '"gcc_diag-7.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
  herit: *GRPSERIAL
  info: *60
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-7_341:
  bin: '"gcc_diag-7.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
  herit: *GRPSERIAL
  info: *60
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-7_342:
  bin: '"gcc_diag-7.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-7.c'
  herit: *GRPSERIAL
  info: *60
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-8_10:
  bin: '"gcc_diag-8.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
  herit: *GRPSERIAL
  info: &61
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__gcc_host_wide_int__' is not defined as a type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-8_122:
  bin: '"gcc_diag-8.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
  herit: *GRPSERIAL
  info: *61
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-8_343:
  bin: '"gcc_diag-8.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
  herit: *GRPSERIAL
  info: *61
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-8_344:
  bin: '"gcc_diag-8.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-8.c'
  herit: *GRPSERIAL
  info: *61
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-9_10:
  bin: '"gcc_diag-9.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
  herit: *GRPSERIAL
  info: &62
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__gcc_host_wide_int__' is not defined as 'long' or 'long long'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-9_124:
  bin: '"gcc_diag-9.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
  herit: *GRPSERIAL
  info: *62
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-9_345:
  bin: '"gcc_diag-9.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
  herit: *GRPSERIAL
  info: *62
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_diag-9_346:
  bin: '"gcc_diag-9.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_diag-9.c'
  herit: *GRPSERIAL
  info: *62
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-1_126:
  bin: '"gcc_gfc-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
  herit: *GRPSERIAL
  info: &63
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bad argument types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "too many arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-1_32:
  bin: '"gcc_gfc-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
  herit: *GRPSERIAL
  info: *63
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-1_347:
  bin: '"gcc_gfc-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
  herit: *GRPSERIAL
  info: *63
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-1_348:
  bin: '"gcc_gfc-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-1.c'
  herit: *GRPSERIAL
  info: *63
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-2_128:
  bin: '"gcc_gfc-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
  herit: *GRPSERIAL
  info: &64
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(locus))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(format))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-2_13:
  bin: '"gcc_gfc-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
  herit: *GRPSERIAL
  info: *64
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-2_349:
  bin: '"gcc_gfc-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
  herit: *GRPSERIAL
  info: *64
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc_gfc-2_350:
  bin: '"gcc_gfc-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/gcc_gfc-2.c'
  herit: *GRPSERIAL
  info: *64
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-1_130:
  bin: '"miss-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
  herit: *GRPSERIAL
  info: &65
    extraopts:
      - '"-std=gnu99 -Wmissing-format-attribute"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "printf attribute warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "scanf attribute warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "printf attribute warning 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-1_351:
  bin: '"miss-1.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
  herit: *GRPSERIAL
  info: *65
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-1_352:
  bin: '"miss-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
  herit: *GRPSERIAL
  info: *65
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-1_39:
  bin: '"miss-1.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-1.c'
  herit: *GRPSERIAL
  info: *65
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-2_132:
  bin: '"miss-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
  herit: *GRPSERIAL
  info: &66
    extraopts:
      - '"-std=gnu99 -Wmissing-format-attribute"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-2_16:
  bin: '"miss-2.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
  herit: *GRPSERIAL
  info: *66
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-2_353:
  bin: '"miss-2.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
  herit: *GRPSERIAL
  info: *66
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-2_354:
  bin: '"miss-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-2.c'
  herit: *GRPSERIAL
  info: *66
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-3_134:
  bin: '"miss-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
  herit: *GRPSERIAL
  info: &67
    extraopts:
      - '"-std=gnu99 -Wmissing-format-attribute"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "initialization warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "initialization warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-3_27:
  bin: '"miss-3.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
  herit: *GRPSERIAL
  info: *67
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-3_355:
  bin: '"miss-3.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
  herit: *GRPSERIAL
  info: *67
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-3_356:
  bin: '"miss-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-3.c'
  herit: *GRPSERIAL
  info: *67
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-4_136:
  bin: '"miss-4.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
  herit: *GRPSERIAL
  info: &68
    extraopts:
      - '"-std=gnu99 -Wmissing-format-attribute"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "assignment warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "assignment warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-4_33:
  bin: '"miss-4.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
  herit: *GRPSERIAL
  info: *68
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-4_357:
  bin: '"miss-4.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
  herit: *GRPSERIAL
  info: *68
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-4_358:
  bin: '"miss-4.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-4.c'
  herit: *GRPSERIAL
  info: *68
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-5_138:
  bin: '"miss-5.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
  herit: *GRPSERIAL
  info: &69
    extraopts:
      - '"-std=gnu99 -Wmissing-format-attribute"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "return type warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "return type warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-5_359:
  bin: '"miss-5.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
  herit: *GRPSERIAL
  info: *69
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-5_360:
  bin: '"miss-5.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
  herit: *GRPSERIAL
  info: *69
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-5_49:
  bin: '"miss-5.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-5.c'
  herit: *GRPSERIAL
  info: *69
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-6_140:
  bin: '"miss-6.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
  herit: *GRPSERIAL
  info: &70
    extraopts:
      - '"-std=gnu99 -Wmissing-format-attribute"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "parameter passing warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate" "parameter passing warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-6_32:
  bin: '"miss-6.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
  herit: *GRPSERIAL
  info: *70
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-6_361:
  bin: '"miss-6.s"'
  cargs: '   -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
  herit: *GRPSERIAL
  info: *70
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-6_362:
  bin: '"miss-6.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wmissing-format-attribute -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-6.c'
  herit: *GRPSERIAL
  info: *70
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-7_142:
  bin: '"miss-7.s"'
  cargs: '  -DWIDE  -Wsuggest-attribute=format -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
  herit: *GRPSERIAL
  info: &71
    extraopts:
      - '"-Wsuggest-attribute=format"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(function .bar. might be a candidate for .gnu_printf. format attribute))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-7_36:
  bin: '"miss-7.s"'
  cargs: '   -Wsuggest-attribute=format -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
  herit: *GRPSERIAL
  info: *71
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-7_363:
  bin: '"miss-7.s"'
  cargs: '   -Wsuggest-attribute=format -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
  herit: *GRPSERIAL
  info: *71
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_miss-7_364:
  bin: '"miss-7.s"'
  cargs: '  -DWIDE  -Wsuggest-attribute=format -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/miss-7.c'
  herit: *GRPSERIAL
  info: *71
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-1_144:
  bin: '"multattr-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
  herit: *GRPSERIAL
  info: &72
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-1_365:
  bin: '"multattr-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
  herit: *GRPSERIAL
  info: *72
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-1_366:
  bin: '"multattr-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
  herit: *GRPSERIAL
  info: *72
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-1_51:
  bin: '"multattr-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-1.c'
  herit: *GRPSERIAL
  info: *72
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-2_146:
  bin: '"multattr-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
  herit: *GRPSERIAL
  info: &73
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "printf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "scanf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-2_367:
  bin: '"multattr-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
  herit: *GRPSERIAL
  info: *73
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-2_368:
  bin: '"multattr-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
  herit: *GRPSERIAL
  info: *73
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-2_40:
  bin: '"multattr-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-2.c'
  herit: *GRPSERIAL
  info: *73
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-3_148:
  bin: '"multattr-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
  herit: *GRPSERIAL
  info: &74
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(int" "wrong type in conditional expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(too many" "too many args in all branches))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(long int" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(long int" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(long int" "wrong type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-3_28:
  bin: '"multattr-3.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
  herit: *GRPSERIAL
  info: *74
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-3_369:
  bin: '"multattr-3.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
  herit: *GRPSERIAL
  info: *74
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multattr-3_370:
  bin: '"multattr-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/multattr-3.c'
  herit: *GRPSERIAL
  info: *74
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-1_14:
  bin: '"no-exargs-1.s"'
  cargs: '   -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
  herit: *GRPSERIAL
  info: &75
    extraopts:
      - '"-std=gnu99 -Wformat -Wno-format-extra-args"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-1_150:
  bin: '"no-exargs-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
  herit: *GRPSERIAL
  info: *75
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-1_371:
  bin: '"no-exargs-1.s"'
  cargs: '   -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
  herit: *GRPSERIAL
  info: *75
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-1_372:
  bin: '"no-exargs-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-1.c'
  herit: *GRPSERIAL
  info: *75
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-2_152:
  bin: '"no-exargs-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
  herit: *GRPSERIAL
  info: &76
    extraopts:
      - '"-std=gnu99 -Wformat -Wno-format-extra-args"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(before used" "unused $ operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(before used" "unused $ operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(before used" "unused $ scanf non-pointer operand))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-2_27:
  bin: '"no-exargs-2.s"'
  cargs: '   -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
  herit: *GRPSERIAL
  info: *76
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-2_373:
  bin: '"no-exargs-2.s"'
  cargs: '   -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
  herit: *GRPSERIAL
  info: *76
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-exargs-2_374:
  bin: '"no-exargs-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wno-format-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-exargs-2.c'
  herit: *GRPSERIAL
  info: *76
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-y2k-1_12:
  bin: '"no-y2k-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
  herit: *GRPSERIAL
  info: &77
    extraopts:
      - '"-std=gnu99 -Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-y2k-1_154:
  bin: '"no-y2k-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
  herit: *GRPSERIAL
  info: *77
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-y2k-1_375:
  bin: '"no-y2k-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
  herit: *GRPSERIAL
  info: *77
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-y2k-1_376:
  bin: '"no-y2k-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/no-y2k-1.c'
  herit: *GRPSERIAL
  info: *77
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-1_13:
  bin: '"nonlit-1.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
  herit: *GRPSERIAL
  info: &78
    extraopts:
      - '"-std=gnu99 -Wformat -Wformat-nonliteral"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(argument types" "non-literal))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(argument types" "non-literal))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-1_156:
  bin: '"nonlit-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
  herit: *GRPSERIAL
  info: *78
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-1_377:
  bin: '"nonlit-1.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
  herit: *GRPSERIAL
  info: *78
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-1_378:
  bin: '"nonlit-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-1.c'
  herit: *GRPSERIAL
  info: *78
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-2_13:
  bin: '"nonlit-2.s"'
  cargs: '   -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
  herit: *GRPSERIAL
  info: &79
    extraopts:
      - '"-std=gnu99 -Wformat=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(argument types" "non-literal))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(argument types" "non-literal))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-2_158:
  bin: '"nonlit-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
  herit: *GRPSERIAL
  info: *79
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-2_379:
  bin: '"nonlit-2.s"'
  cargs: '   -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
  herit: *GRPSERIAL
  info: *79
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-2_380:
  bin: '"nonlit-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-2.c'
  herit: *GRPSERIAL
  info: *79
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-3_12:
  bin: '"nonlit-3.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
  herit: *GRPSERIAL
  info: &80
    extraopts:
      - '"-std=gnu99 -Wformat -Wformat-nonliteral"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(format string" "non-literal))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-3_160:
  bin: '"nonlit-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
  herit: *GRPSERIAL
  info: *80
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-3_381:
  bin: '"nonlit-3.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
  herit: *GRPSERIAL
  info: *80
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonlit-3_382:
  bin: '"nonlit-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nonlit-3.c'
  herit: *GRPSERIAL
  info: *80
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-1_14:
  bin: '"nul-1.s"'
  cargs: '   -Wformat -Wno-format-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
  herit: *GRPSERIAL
  info: &81
    extraopts:
      - '"-Wformat -Wno-format-contains-nul"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-1_162:
  bin: '"nul-1.s"'
  cargs: '  -DWIDE  -Wformat -Wno-format-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
  herit: *GRPSERIAL
  info: *81
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-1_383:
  bin: '"nul-1.s"'
  cargs: '   -Wformat -Wno-format-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
  herit: *GRPSERIAL
  info: *81
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-1_384:
  bin: '"nul-1.s"'
  cargs: '  -DWIDE  -Wformat -Wno-format-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-1.c'
  herit: *GRPSERIAL
  info: *81
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-2_16:
  bin: '"nul-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
  herit: *GRPSERIAL
  info: &82
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded .* in format" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-2_164:
  bin: '"nul-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
  herit: *GRPSERIAL
  info: *82
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-2_385:
  bin: '"nul-2.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
  herit: *GRPSERIAL
  info: *82
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nul-2_386:
  bin: '"nul-2.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/nul-2.c'
  herit: *GRPSERIAL
  info: *82
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_null-1_166:
  bin: '"null-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
  herit: *GRPSERIAL
  info: &83
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(too many" "null format with arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(too many" "null format_arg with arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null format with dgettext))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_null-1_28:
  bin: '"null-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
  herit: *GRPSERIAL
  info: *83
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_null-1_387:
  bin: '"null-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
  herit: *GRPSERIAL
  info: *83
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_null-1_388:
  bin: '"null-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/null-1.c'
  herit: *GRPSERIAL
  info: *83
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-1_168:
  bin: '"opt-1.s"'
  cargs: '  -DWIDE  -Wformat-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
  herit: *GRPSERIAL
  info: &84
    extraopts:
      - '"-Wformat-extra-args"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(-Wformat-extra-args ignored without -Wformat" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-1_389:
  bin: '"opt-1.s"'
  cargs: '   -Wformat-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
  herit: *GRPSERIAL
  info: *84
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-1_390:
  bin: '"opt-1.s"'
  cargs: '  -DWIDE  -Wformat-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
  herit: *GRPSERIAL
  info: *84
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-1_7:
  bin: '"opt-1.s"'
  cargs: '   -Wformat-extra-args -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-1.c'
  herit: *GRPSERIAL
  info: *84
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-2_170:
  bin: '"opt-2.s"'
  cargs: '  -DWIDE  -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
  herit: *GRPSERIAL
  info: &85
    extraopts:
      - '"-Wformat-nonliteral"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(-Wformat-nonliteral ignored without -Wformat" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-2_391:
  bin: '"opt-2.s"'
  cargs: '   -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
  herit: *GRPSERIAL
  info: *85
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-2_392:
  bin: '"opt-2.s"'
  cargs: '  -DWIDE  -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
  herit: *GRPSERIAL
  info: *85
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-2_7:
  bin: '"opt-2.s"'
  cargs: '   -Wformat-nonliteral -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-2.c'
  herit: *GRPSERIAL
  info: *85
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-3_172:
  bin: '"opt-3.s"'
  cargs: '  -DWIDE  -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
  herit: *GRPSERIAL
  info: &86
    extraopts:
      - '"-Wformat-security"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(-Wformat-security ignored without -Wformat" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-3_393:
  bin: '"opt-3.s"'
  cargs: '   -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
  herit: *GRPSERIAL
  info: *86
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-3_394:
  bin: '"opt-3.s"'
  cargs: '  -DWIDE  -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
  herit: *GRPSERIAL
  info: *86
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-3_7:
  bin: '"opt-3.s"'
  cargs: '   -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-3.c'
  herit: *GRPSERIAL
  info: *86
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-4_174:
  bin: '"opt-4.s"'
  cargs: '  -DWIDE  -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
  herit: *GRPSERIAL
  info: &87
    extraopts:
      - '"-Wformat-y2k"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(-Wformat-y2k ignored without -Wformat" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-4_395:
  bin: '"opt-4.s"'
  cargs: '   -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
  herit: *GRPSERIAL
  info: *87
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-4_396:
  bin: '"opt-4.s"'
  cargs: '  -DWIDE  -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
  herit: *GRPSERIAL
  info: *87
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-4_7:
  bin: '"opt-4.s"'
  cargs: '   -Wformat-y2k -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-4.c'
  herit: *GRPSERIAL
  info: *87
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-5_176:
  bin: '"opt-5.s"'
  cargs: '  -DWIDE  -Wformat-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
  herit: *GRPSERIAL
  info: &88
    extraopts:
      - '"-Wformat-zero-length"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(-Wformat-zero-length ignored without -Wformat" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-5_397:
  bin: '"opt-5.s"'
  cargs: '   -Wformat-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
  herit: *GRPSERIAL
  info: *88
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-5_398:
  bin: '"opt-5.s"'
  cargs: '  -DWIDE  -Wformat-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
  herit: *GRPSERIAL
  info: *88
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-5_7:
  bin: '"opt-5.s"'
  cargs: '   -Wformat-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-5.c'
  herit: *GRPSERIAL
  info: *88
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-6_178:
  bin: '"opt-6.s"'
  cargs: '  -DWIDE  -Wformat-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
  herit: *GRPSERIAL
  info: &89
    extraopts:
      - '"-Wformat-contains-nul"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(-Wformat-contains-nul ignored without -Wformat" "ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-6_399:
  bin: '"opt-6.s"'
  cargs: '   -Wformat-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
  herit: *GRPSERIAL
  info: *89
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-6_400:
  bin: '"opt-6.s"'
  cargs: '  -DWIDE  -Wformat-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
  herit: *GRPSERIAL
  info: *89
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opt-6_7:
  bin: '"opt-6.s"'
  cargs: '   -Wformat-contains-nul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/opt-6.c'
  herit: *GRPSERIAL
  info: *89
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_plus-1_180:
  bin: '"plus-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
  herit: *GRPSERIAL
  info: &90
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(arguments" "wrong number of args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(zero-length" "zero-length string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(not a string" "non-constant addend))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(not a string" "too large addend))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(not a string" "minus constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(not a string" "negative addend))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_plus-1_20:
  bin: '"plus-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
  herit: *GRPSERIAL
  info: *90
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_plus-1_401:
  bin: '"plus-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
  herit: *GRPSERIAL
  info: *90
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_plus-1_402:
  bin: '"plus-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/plus-1.c'
  herit: *GRPSERIAL
  info: *90
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72858_182:
  bin: '"pr72858.s"'
  cargs: '  -DWIDE  -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
  herit: *GRPSERIAL
  info: &91
    extraopts:
      - '"-Wformat -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'long unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'long long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'long long unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'long double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%x' expects argument of type 'unsigned int', but argument 3 has type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'long long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'long long unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lx' expects argument of type 'long unsigned int', but argument 3 has type 'long double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%o' expects argument of type 'unsigned int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%o' expects argument of type 'unsigned int', but argument 3 has type 'long unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%o' expects argument of type 'unsigned int', but argument 3 has type 'long long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%o' expects argument of type 'unsigned int', but argument 3 has type 'long long unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lo' expects argument of type 'long unsigned int', but argument 3 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lo' expects argument of type 'long unsigned int', but argument 3 has type 'unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lo' expects argument of type 'long unsigned int', but argument 3 has type 'long long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%lo' expects argument of type 'long unsigned int', but argument 3 has type 'long long unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%e' expects argument of type 'double', but argument 3 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%e' expects argument of type 'double', but argument 3 has type 'long double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%Le' expects argument of type 'long double', but argument 3 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%Le' expects argument of type 'long double', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%Le' expects argument of type 'long double', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%E' expects argument of type 'double', but argument 3 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: warning:[^
        ]*(20: format '%E' expects argument of type 'double', but argument 3 has type 'long double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%LE' expects argument of type 'long double', but argument 3 has type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%LE' expects argument of type 'long double', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: warning:[^
        ]*(21: format '%LE' expects argument of type 'long double', but argument 3 has type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: warning:[^
        ]*(26: field width specifier '\\*' expects argument of type 'int', but argument 3 has type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: warning:[^
        ]*(28: field precision specifier '\\.\\*' expects argument of type 'int', but argument 4 has type 'long int'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: warning:[^
        ]*(31: format '%lld' expects argument of type 'long long int', but argument 5 has type 'long int'" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72858_403:
  bin: '"pr72858.s"'
  cargs: '   -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
  herit: *GRPSERIAL
  info: *91
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72858_404:
  bin: '"pr72858.s"'
  cargs: '  -DWIDE  -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
  herit: *GRPSERIAL
  info: *91
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72858_410:
  bin: '"pr72858.s"'
  cargs: '   -Wformat -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr72858.c'
  herit: *GRPSERIAL
  info: *91
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304-2_11:
  bin: '"pr78304-2.s"'
  cargs: '   -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
  herit: *GRPSERIAL
  info: &92
    extraopts:
      - '"-O2 -Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304-2_184:
  bin: '"pr78304-2.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
  herit: *GRPSERIAL
  info: *92
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304-2_405:
  bin: '"pr78304-2.s"'
  cargs: '   -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
  herit: *GRPSERIAL
  info: *92
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304-2_406:
  bin: '"pr78304-2.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304-2.c'
  herit: *GRPSERIAL
  info: *92
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304_10:
  bin: '"pr78304.s"'
  cargs: '   -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
  herit: *GRPSERIAL
  info: &93
    extraopts:
      - '"-O2 -Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304_186:
  bin: '"pr78304.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
  herit: *GRPSERIAL
  info: *93
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304_407:
  bin: '"pr78304.s"'
  cargs: '   -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
  herit: *GRPSERIAL
  info: *93
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78304_408:
  bin: '"pr78304.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78304.c'
  herit: *GRPSERIAL
  info: *93
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78498_12:
  bin: '"pr78498.s"'
  cargs: '   -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
  herit: *GRPSERIAL
  info: &94
    extraopts:
      - '"-O2 -Wall -Wextra -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78498_188:
  bin: '"pr78498.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
  herit: *GRPSERIAL
  info: *94
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78498_409:
  bin: '"pr78498.s"'
  cargs: '   -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
  herit: *GRPSERIAL
  info: *94
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78498_410:
  bin: '"pr78498.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78498.c'
  herit: *GRPSERIAL
  info: *94
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78569_190:
  bin: '"pr78569.s"'
  cargs: '  -DWIDE  -Wformat-truncation -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
  herit: *GRPSERIAL
  info: &95
    extraopts:
      - '"-Wformat-truncation"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(output truncated" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78569_24:
  bin: '"pr78569.s"'
  cargs: '   -Wformat-truncation -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
  herit: *GRPSERIAL
  info: *95
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78569_411:
  bin: '"pr78569.s"'
  cargs: '   -Wformat-truncation -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
  herit: *GRPSERIAL
  info: *95
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78569_412:
  bin: '"pr78569.s"'
  cargs: '  -DWIDE  -Wformat-truncation -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78569.c'
  herit: *GRPSERIAL
  info: *95
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78680_16:
  bin: '"pr78680.s"'
  cargs: '   -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
  herit: *GRPSERIAL
  info: &96
    extraopts:
      - '"-O2 -Wall -Wextra -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(expects a matching" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78680_192:
  bin: '"pr78680.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
  herit: *GRPSERIAL
  info: *96
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78680_413:
  bin: '"pr78680.s"'
  cargs: '   -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
  herit: *GRPSERIAL
  info: *96
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78680_414:
  bin: '"pr78680.s"'
  cargs: '  -DWIDE  -O2 -Wall -Wextra -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr78680.c'
  herit: *GRPSERIAL
  info: *96
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79210_194:
  bin: '"pr79210.s"'
  cargs: '  -DWIDE  -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
  herit: *GRPSERIAL
  info: &97
    extraopts:
      - '"-Wformat -Wformat-signedness"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(6: format .%d. expects argument of type .int., but argument 4 has type .unsigned int. " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79210_23:
  bin: '"pr79210.s"'
  cargs: '   -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
  herit: *GRPSERIAL
  info: *97
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79210_415:
  bin: '"pr79210.s"'
  cargs: '   -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
  herit: *GRPSERIAL
  info: *97
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79210_416:
  bin: '"pr79210.s"'
  cargs: '  -DWIDE  -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr79210.c'
  herit: *GRPSERIAL
  info: *97
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80919_16:
  bin: '"pr80919.s"'
  cargs: '   -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
  herit: *GRPSERIAL
  info: &98
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80919_196:
  bin: '"pr80919.s"'
  cargs: '  -DWIDE  -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
  herit: *GRPSERIAL
  info: *98
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80919_417:
  bin: '"pr80919.s"'
  cargs: '   -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
  herit: *GRPSERIAL
  info: *98
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80919_418:
  bin: '"pr80919.s"'
  cargs: '  -DWIDE  -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/pr80919.c'
  herit: *GRPSERIAL
  info: *98
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sec-1_12:
  bin: '"sec-1.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
  herit: *GRPSERIAL
  info: &99
    extraopts:
      - '"-std=gnu99 -Wformat -Wformat-security"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(no format arguments" "security warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sec-1_198:
  bin: '"sec-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
  herit: *GRPSERIAL
  info: *99
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sec-1_419:
  bin: '"sec-1.s"'
  cargs: '   -std=gnu99 -Wformat -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
  herit: *GRPSERIAL
  info: *99
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sec-1_420:
  bin: '"sec-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -Wformat-security -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sec-1.c'
  herit: *GRPSERIAL
  info: *99
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sentinel-1_200:
  bin: '"sentinel-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
  herit: *GRPSERIAL
  info: &100
    extraopts:
      - '"-Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C requires|named arguments" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not enough|too few arguments" "sentinel))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(applies to function types" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(named arguments" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(variadic functions" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(less than zero" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(not enough" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(missing sentinel" "sentinel))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sentinel-1_421:
  bin: '"sentinel-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
  herit: *GRPSERIAL
  info: *100
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sentinel-1_422:
  bin: '"sentinel-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
  herit: *GRPSERIAL
  info: *100
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sentinel-1_73:
  bin: '"sentinel-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/sentinel-1.c'
  herit: *GRPSERIAL
  info: *100
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-1_202:
  bin: '"strfmon-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
  herit: *GRPSERIAL
  info: &101
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "+ and ( flags))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "+ and ( flags))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(empty" "empty left precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(empty" "empty right precision))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "bogus %%))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(matching" "too few args))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(zero-length" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null format string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(trailing" "tailing %))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(embedded" "embedded NUL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(repeated" "repeated flag))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-1_423:
  bin: '"strfmon-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
  herit: *GRPSERIAL
  info: *101
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-1_424:
  bin: '"strfmon-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
  herit: *GRPSERIAL
  info: *101
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-1_63:
  bin: '"strfmon-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-1.c'
  herit: *GRPSERIAL
  info: *101
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-2_13:
  bin: '"strfmon-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
  herit: *GRPSERIAL
  info: &102
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(missing fill character at end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-2_204:
  bin: '"strfmon-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
  herit: *GRPSERIAL
  info: *102
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-2_425:
  bin: '"strfmon-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
  herit: *GRPSERIAL
  info: *102
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strfmon-2_426:
  bin: '"strfmon-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/strfmon-2.c'
  herit: *GRPSERIAL
  info: *102
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unnamed-1_206:
  bin: '"unnamed-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
  herit: *GRPSERIAL
  info: &103
    extraopts:
      - '"-Wformat"'
      - '"-Wformat -msse" { target { { i?86-*-* x86_64-*-* } && ilp32 } }'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned only|too large" "constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unnamed-1_25:
  bin: '"unnamed-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
  herit: *GRPSERIAL
  info: *103
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unnamed-1_427:
  bin: '"unnamed-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
  herit: *GRPSERIAL
  info: *103
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unnamed-1_428:
  bin: '"unnamed-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/unnamed-1.c'
  herit: *GRPSERIAL
  info: *103
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-1_13:
  bin: '"va-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
  herit: *GRPSERIAL
  info: &104
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(format" "format error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-1_208:
  bin: '"va-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
  herit: *GRPSERIAL
  info: *104
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-1_429:
  bin: '"va-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
  herit: *GRPSERIAL
  info: *104
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-1_430:
  bin: '"va-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/va-1.c'
  herit: *GRPSERIAL
  info: *104
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-signedness_11:
  bin: '"warn-signedness.s"'
  cargs: '   -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
  herit: *GRPSERIAL
  info: &105
    extraopts:
      - '"-Wformat -Wformat-signedness"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type 'int', but argument 2 has type 'unsigned int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type 'unsigned int', but argument 2 has type 'int'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-signedness_210:
  bin: '"warn-signedness.s"'
  cargs: '  -DWIDE  -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
  herit: *GRPSERIAL
  info: *105
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-signedness_431:
  bin: '"warn-signedness.s"'
  cargs: '   -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
  herit: *GRPSERIAL
  info: *105
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-signedness_432:
  bin: '"warn-signedness.s"'
  cargs: '  -DWIDE  -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warn-signedness.c'
  herit: *GRPSERIAL
  info: *105
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warnll-1_212:
  bin: '"warnll-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
  herit: *GRPSERIAL
  info: &106
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat -Wno-long-long"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qd))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qi))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qo))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qu))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qx))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qX))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %qn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %Ld))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %Li))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %oL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %Lu))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %Lx))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "printf %LX))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qd))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qi))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qo))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qu))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qx))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qX))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %qn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %Ld))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %Li))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %oL))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %Lu))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %Lx))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(C" "scanf %LX))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warnll-1_433:
  bin: '"warnll-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
  herit: *GRPSERIAL
  info: *106
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warnll-1_434:
  bin: '"warnll-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
  herit: *GRPSERIAL
  info: *106
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warnll-1_45:
  bin: '"warnll-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/warnll-1.c'
  herit: *GRPSERIAL
  info: *106
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-1_125:
  bin: '"xopen-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
  herit: *GRPSERIAL
  info: &107
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(precision" "precision with %C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hhC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %lC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %llC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %jC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %zC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %tC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %LC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %+C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad % C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %#C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %0C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %'C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hhS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %lS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %llS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %jS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %zS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %tS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %LS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %+S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad % S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %#S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %0S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad %'S))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hhC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %lC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %llC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %jC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %zC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %tC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %LC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %hhS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %lS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %llS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %jS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %zS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %tS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(length" "bad %LS))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(flag" "bad use of ' flag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(arg 2|argument 2" "mismatched args with $ format))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(missing" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(used after format" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(missing" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(missing" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(missing" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(operand" "$ number too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(operand" "$ number too small))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(before used" "unused $ operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(unused" "unused $ operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(before used" "unused $ operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(unused" "unused $ scanf pointer operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(unused" "unused $ scanf pointer operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(before used" "unused $ scanf non-pointer operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(unused" "unused $ scanf pointer operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(operand" "operand number with suppression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(more than once" "multiple use of scanf argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-1_214:
  bin: '"xopen-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
  herit: *GRPSERIAL
  info: *107
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-1_435:
  bin: '"xopen-1.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
  herit: *GRPSERIAL
  info: *107
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-1_436:
  bin: '"xopen-1.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-1.c'
  herit: *GRPSERIAL
  info: *107
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-2_21:
  bin: '"xopen-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
  herit: *GRPSERIAL
  info: &108
    extraopts:
      - '"-std=gnu99 -Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-2_216:
  bin: '"xopen-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
  herit: *GRPSERIAL
  info: *108
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-2_437:
  bin: '"xopen-2.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
  herit: *GRPSERIAL
  info: *108
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-2_438:
  bin: '"xopen-2.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-2.c'
  herit: *GRPSERIAL
  info: *108
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-3_15:
  bin: '"xopen-3.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
  herit: *GRPSERIAL
  info: &109
    extraopts:
      - '"-std=gnu99 -Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(used after format" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(used after format" "mixing $ and non-$ formats))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(used after format" "mixing $ and non-$ formats))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-3_218:
  bin: '"xopen-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
  herit: *GRPSERIAL
  info: *109
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-3_439:
  bin: '"xopen-3.s"'
  cargs: '   -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
  herit: *GRPSERIAL
  info: *109
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_xopen-3_440:
  bin: '"xopen-3.s"'
  cargs: '  -DWIDE  -std=gnu99 -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/xopen-3.c'
  herit: *GRPSERIAL
  info: *109
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_z-1_220:
  bin: '"z-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
  herit: *GRPSERIAL
  info: &110
    extraopts:
      - '"-Wformat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_z-1_28:
  bin: '"z-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
  herit: *GRPSERIAL
  info: *110
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_z-1_441:
  bin: '"z-1.s"'
  cargs: '   -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
  herit: *GRPSERIAL
  info: *110
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_z-1_442:
  bin: '"z-1.s"'
  cargs: '  -DWIDE  -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/z-1.c'
  herit: *GRPSERIAL
  info: *110
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero-length-1_15:
  bin: '"zero-length-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
  herit: *GRPSERIAL
  info: &111
    extraopts:
      - '"-std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero-length-1_222:
  bin: '"zero-length-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
  herit: *GRPSERIAL
  info: *111
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero-length-1_443:
  bin: '"zero-length-1.s"'
  cargs: '   -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
  herit: *GRPSERIAL
  info: *111
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero-length-1_444:
  bin: '"zero-length-1.s"'
  cargs: '  -DWIDE  -std=iso9899:1990 -pedantic -Wformat -Wno-format-zero-length -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/format/zero-length-1.c'
  herit: *GRPSERIAL
  info: *111
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
