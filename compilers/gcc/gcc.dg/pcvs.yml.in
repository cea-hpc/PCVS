test_20000108-1_20:
  bin: '"./20000108-1.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000108-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000111-1_17:
  bin: '"20000111-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000111-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000623-1_20:
  bin: '"./20000623-1.exe"'
  cargs: ' -O3 -fno-strict-aliasing'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000623-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-strict-aliasing"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000629-1_13:
  bin: '"20000629-1.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000629-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000707-1_16:
  bin: '"20000707-1.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000707-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000906-1_78:
  bin: '"./20000906-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000906-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20000926-1_27:
  bin: '"20000926-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20000926-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*((excess elements)|(near initialization)" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001009-1_47:
  bin: '"20001009-1.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001009-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001012-1_19:
  bin: '"./20001012-1.exe"'
  cargs: ' -O2 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001012-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001012-2_38:
  bin: '"./20001012-2.exe"'
  cargs: ' -O2 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001012-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001023-1_62:
  bin: '"./20001023-1.exe"'
  cargs: ' -O2 -fomit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001023-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001108-1_34:
  bin: '"./20001108-1.exe"'
  cargs: ' -O2 -fomit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001108-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001116-1_11:
  bin: '"20001116-1.s"'
  cargs: ' -Wempty-body -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001116-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wempty-body
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(empty body in an))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001117-1_43:
  bin: '"./20001117-1.exe"'
  cargs: ' -O2 -finstrument-functions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001117-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finstrument-functions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001201-1_7:
  bin: '"20001201-1.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001201-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20001228-1_16:
  bin: '"20001228-1.s"'
  cargs: ' -ffast-math -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20001228-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010202-1_27:
  bin: '"20010202-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010202-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010405-1_19:
  bin: '"20010405-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010405-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010516-1_8:
  bin: '"20010516-1.s"'
  cargs: ' -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010516-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:" "non-lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010622-1_11:
  bin: '"20010622-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010622-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010822-1_44:
  bin: '"./20010822-1.exe"'
  cargs: ' -Os'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010822-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20010912-1_48:
  bin: '"./20010912-1.exe"'
  cargs: ' -O2 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20010912-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011008-1_8:
  bin: '"20011008-1.s"'
  cargs: ' -O0 -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011008-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(13:does not declare anything))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011008-2_24:
  bin: '"./20011008-2.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011008-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011015-1_17:
  bin: '"20011015-1.s"'
  cargs: ' -O3 -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011015-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011021-1_45:
  bin: '"20011021-1.s"'
  cargs: ' -std=c99 -W -Wall -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011021-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -W -Wall -Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(missing init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization of union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization of union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(missing init))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011130-1_25:
  bin: '"20011130-1.s"'
  cargs: ' -O3 -g -finline-limit=100 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011130-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g -finline-limit=100"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20011214-1_17:
  bin: '"./20011214-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20011214-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020103-1_39:
  bin: '"20020103-1.s"'
  cargs: -O2 -fpic -fno-omit-frame-pointer -fno-asynchronous-unwind-tables -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020103-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -fno-omit-frame-pointer -fno-asynchronous-unwind-tables"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020104-1_22:
  bin: '"20020104-1.s"'
  cargs: ' -O -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020104-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "statement with no effect warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "statement with no effect warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020108-1_17:
  bin: '"20020108-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020108-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020115-1_15:
  bin: '"20020115-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020115-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020116-1_16:
  bin: '"20020116-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020116-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fpic -mexplicit-relocs -mcpu=ev4" { target alpha*-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-1_21:
  bin: '"20020122-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-2_42:
  bin: '"20020122-2.s"'
  cargs: ' -O2 -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-3_15:
  bin: '"20020122-3.s"'
  cargs: ' -Os -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fprefetch-loop-arrays -w"'
      - '"-Os -fprefetch-loop-arrays -mtune=pentium3 -w" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020122-4_11:
  bin: '"20020122-4.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020122-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020201-1_38:
  bin: '"./20020201-1.exe"'
  cargs: ' -fprofile-arcs'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020201-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-arcs"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020206-1_45:
  bin: '"./20020206-1.exe"'
  cargs: ' -O2 -fprefetch-loop-arrays -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020206-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
      - '"-O2 -fprefetch-loop-arrays -mtune=pentium3 -w" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020210-1_28:
  bin: '"./20020210-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020210-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fomit-frame-pointer" { target h8300-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020219-1_50:
  bin: '"./20020219-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020219-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mdisable-indexing" { target hppa*-*-hpux* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020220-1_19:
  bin: '"20020220-1.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020220-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020220-2_12:
  bin: '"20020220-2.s"'
  cargs: ' -O2 -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020220-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020222-1_34:
  bin: '"20020222-1.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020222-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fPIC" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020310-1_55:
  bin: '"./20020310-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020310-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i586" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020312-1_10:
  bin: '"20020312-1.s"'
  cargs: ' -O -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020312-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020312-2_169:
  bin: '"./20020312-2.exe"'
  cargs: ' -O -fno-pic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020312-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-pic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020319-1_10:
  bin: '"20020319-1.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020319-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020411-1_54:
  bin: '"20020411-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020411-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020415-1_36:
  bin: '"20020415-1.s"'
  cargs: ' -O2 -fpic -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020415-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020418-1_26:
  bin: '"20020418-1.s"'
  cargs: ' -O2 -msse -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020418-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -msse -ffast-math" { target i?86-*-* x86_64-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020418-2_21:
  bin: '"20020418-2.s"'
  cargs: ' -O2 -funroll-all-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020418-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-all-loops"'
      - '"-O2 -funroll-all-loops -march=pentium3" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020425-1_15:
  bin: '"20020425-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020425-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020426-2_176:
  bin: '"./20020426-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020426-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -frename-registers -fomit-frame-pointer -fPIC -mtune=i686" { target { { i?86-*-* x86_64-*-* } && { ia32 && fpic } } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020430-1_195:
  bin: '"20020430-1.s"'
  cargs: ' -O2 -frename-registers -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020430-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -frename-registers -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020503-1_11:
  bin: '"20020503-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020503-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -mflat" { target sparc*-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020517-1_28:
  bin: '"./20020517-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020517-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020525-1_24:
  bin: '"./20020525-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020525-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020527-1_54:
  bin: '"20020527-1.s"'
  cargs: ' -fms-extensions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020527-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fms-extensions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020530-1_20:
  bin: '"20020530-1.s"'
  cargs: ' -fverbose-asm -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020530-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fverbose-asm"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020607-1_40:
  bin: '"./20020607-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020607-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020607-2_74:
  bin: '"./20020607-2.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020607-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20020919-1_258:
  bin: '"20020919-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20020919-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021006-1_27:
  bin: '"20021006-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021006-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021014-1_27:
  bin: '"./20021014-1.exe"'
  cargs: ' -O2 -p'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021014-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -p"'
      - '"-O2 -p -static" { target hppa*-*-hpux* }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(profiler" "No profiler support))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021018-1_29:
  bin: '"./20021018-1.exe"'
  cargs: ' -O2 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021018-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021023-1_24:
  bin: '"20021023-1.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021023-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021029-1_18:
  bin: '"20021029-1.s"'
  cargs: -O2 -fpic -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021029-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021029-2_14:
  bin: '"20021029-2.s"'
  cargs: -O2 -fmerge-all-constants -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021029-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmerge-all-constants"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20021116-1_31:
  bin: '"20021116-1.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20021116-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030107-1_6:
  bin: '"20030107-1.s"'
  cargs: ' -fprofile-arcs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030107-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-arcs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030120-1_9:
  bin: '"20030120-1.s"'
  cargs: ' -O -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030120-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030204-1_17:
  bin: '"20030204-1.s"'
  cargs: ' -O -ffast-math -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030204-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -funroll-loops"'
      - '"-march=pentium3 -O -ffast-math -funroll-loops" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030213-1_36:
  bin: '"20030213-1.exe"'
  cargs: ' -O -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030213-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030225-1_101:
  bin: '"./20030225-1.exe"'
  cargs: ' -O2 -fPIC'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030225-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030309-1_42:
  bin: '"20030309-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030309-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030321-1_18:
  bin: '"20030321-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030321-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030323-1_24:
  bin: '"./20030323-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030323-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030324-1_39:
  bin: '"./20030324-1.exe"'
  cargs: ' -O -fstrict-aliasing -fgcse'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030324-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-aliasing -fgcse"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030331-2_13:
  bin: '"20030331-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030331-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030414-1_39:
  bin: '"20030414-1.o"'
  cargs: ' -O2 -fPIC -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030414-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC" { target *-*-*gnu* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030414-2_38:
  bin: '"./20030414-2.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030414-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030612-1_25:
  bin: '"./20030612-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030612-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(statement-expressions should end with a non-void expression" "))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030625-1_9:
  bin: '"20030625-1.s"'
  cargs: ' -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030625-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(moo" "has incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030626-1_18:
  bin: '"20030626-1.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030626-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030627-1_20:
  bin: '"20030627-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030627-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030702-1_13:
  bin: '"20030702-1.s"'
  cargs: ' -O2 -fpic -fprofile-arcs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030702-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -fprofile-arcs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030707-1_16:
  bin: '"20030707-1.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030707-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030708-1_14:
  bin: '"20030708-1.exe"'
  cargs: ' -O2 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030708-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030711-1_36:
  bin: '"./20030711-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030711-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030717-1_24:
  bin: '"./20030717-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030717-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030721-1_41:
  bin: '"20030721-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030721-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030804-1_75:
  bin: '"20030804-1.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030804-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030805-1_23:
  bin: '"./20030805-1.exe"'
  cargs: ' -O2 -fgnu89-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030805-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030815-1_18:
  bin: '"20030815-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030815-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030820-1_13:
  bin: '"20030820-1.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030820-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030826-1_33:
  bin: '"./20030826-1.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030826-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030826-2_64:
  bin: '"./20030826-2.exe"'
  cargs: ' -O2 -fomit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030826-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
      - '"-O2 -fomit-frame-pointer -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030906-1_21:
  bin: '"20030906-1.s"'
  cargs: ' -O -finline-functions -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030906-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -finline-functions -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with no value, in function returning non-void))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20030906-2_21:
  bin: '"20030906-2.s"'
  cargs: ' -O -finline-functions -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20030906-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -finline-functions -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with no value, in function returning non-void))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031002-1_14:
  bin: '"20031002-1.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031002-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031012-1_18:
  bin: '"20031012-1.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031012-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031102-1_37:
  bin: '"./20031102-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031102-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031111-1_13:
  bin: '"20031111-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031111-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031201-1_20:
  bin: '"20031201-1.s"'
  cargs: ' -O2 -fno-expensive-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031201-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-expensive-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031202-1_44:
  bin: '"./20031202-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031202-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031216-1_39:
  bin: '"./20031216-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031216-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fPIC" { target s390*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031218-1_19:
  bin: '"20031218-1.s"'
  cargs: ' -O -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031218-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031218-2_12:
  bin: '"20031218-2.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031218-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031218-3_14:
  bin: '"20031218-3.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031218-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031222-1_18:
  bin: '"20031222-1.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031222-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20031223-1_13:
  bin: '"20031223-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20031223-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a label can only be part of a statement and a declaration is not a statement" "not stmt))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label at end of compound statement" "label))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "type name))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040123-1_12:
  bin: '"20040123-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040123-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040127-1_24:
  bin: '"20040127-1.o"'
  cargs: ' -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040127-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040127-2_33:
  bin: '"20040127-2.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040127-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040202-1_8:
  bin: '"20040202-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040202-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040203-1_17:
  bin: '"20040203-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040203-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040206-1_11:
  bin: '"20040206-1.s"'
  cargs: ' -O2 -W -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040206-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -W -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(no return statement))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040217-1_19:
  bin: '"20040217-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040217-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040219-1_75:
  bin: '"./20040219-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040219-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -minline-float-divide-max-throughput" { target ia64-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040223-1_41:
  bin: '"20040223-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040223-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(address" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(address" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(address" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040305-2_49:
  bin: '"./20040305-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040305-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040306-1_22:
  bin: '"20040306-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040306-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040309-1_17:
  bin: '"./20040309-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040309-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-minline-int-divide-max-throughput" { target ia64-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040310-1_34:
  bin: '"20040310-1.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040310-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040311-2_36:
  bin: '"20040311-2.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040311-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040322-1_4:
  bin: '"20040322-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040322-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "flexible array member not))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "parse error before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040331-1_14:
  bin: '"./20040331-1.exe"'
  cargs: ' -O2 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040331-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040409-1_4:
  bin: '"20040409-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040409-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040609-1_73:
  bin: '"20040609-1.s"'
  cargs: ' -Os -frename-registers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040609-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -frename-registers"'
      - '"-mconstant-gp -Os -frename-registers" { target ia64-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040622-2_11:
  bin: '"20040622-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040622-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040625-1_37:
  bin: '"./20040625-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040625-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-mminimal-toc" { target { { powerpc*-*-* && lp64 } || { powerpc-ibm-aix* } } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040627-1_42:
  bin: '"20040627-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040627-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040813-1_14:
  bin: '"20040813-1.s"'
  cargs: -gstabs -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040813-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-gstabs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040910-1_2:
  bin: '"20040910-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040910-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse error|syntax error|expected '\\)') before 'int'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040916-1_45:
  bin: '"20040916-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040916-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20040920-1_12:
  bin: '"20040920-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20040920-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object 'bob' is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object 'bar.foo' is not a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041014-1_10:
  bin: '"20041014-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041014-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced-group))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041104-1_18:
  bin: '"20041104-1.s"'
  cargs: ' -O2 -frename-registers -fno-schedule-insns -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041104-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -frename-registers -fno-schedule-insns"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041106-1_31:
  bin: '"./20041106-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041106-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -O2
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041122-1_19:
  bin: '"20041122-1.s"'
  cargs: ' -O1 -fmove-loop-invariants -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041122-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fmove-loop-invariants"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041213-1_33:
  bin: '"20041213-1.s"'
  cargs: ' -fshow-column -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041213-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1:conflicting types))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(1:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(13:conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(6:conflicting types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20041219-1_47:
  bin: '"./20041219-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20041219-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050105-1_31:
  bin: '"20050105-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050105-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050105-2_32:
  bin: '"20050105-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050105-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050111-1_21:
  bin: '"20050111-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050111-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050111-2_21:
  bin: '"20050111-2.s"'
  cargs: ' -O2 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050111-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050121-1_9:
  bin: '"20050121-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050121-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement not within))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050121-2_67:
  bin: '"20050121-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050121-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050209-1_5:
  bin: '"20050209-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050209-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050307-1_52:
  bin: '"20050307-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050307-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050309-1_41:
  bin: '"20050309-1.s"'
  cargs: ' -O2 -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050309-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050321-1_26:
  bin: '"20050321-1.s"'
  cargs: ' -O2 -fmodulo-sched -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050321-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050321-2_55:
  bin: '"20050321-2.exe"'
  cargs: ' -g1 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050321-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g1 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050325-1_20:
  bin: '"20050325-1.s"'
  cargs: ' -O2 -fprofile-arcs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050325-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-arcs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050330-1_14:
  bin: '"20050330-1.s"'
  cargs: ' -O2 -fmodulo-sched -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050330-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050330-2_22:
  bin: '"20050330-2.s"'
  cargs: ' -O2 -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050330-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050503-1_50:
  bin: '"20050503-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050503-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050517-1_8:
  bin: '"20050517-1.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050517-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050527-1_55:
  bin: '"./20050527-1.exe"'
  cargs: ' -O2 -Wuninitialized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050527-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050603-2_23:
  bin: '"./20050603-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050603-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050607-1_14:
  bin: '"20050607-1.s"'
  cargs: ' -Wpadded -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050607-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpadded"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050620-1_15:
  bin: '"20050620-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050620-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050629-1_297:
  bin: '"20050629-1.s"'
  cargs: ' -O2 -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050629-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050702-1_24:
  bin: '"20050702-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050702-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050811-1_19:
  bin: '"20050811-1.s"'
  cargs: ' -O2 -fdump-rtl-all-graph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050811-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-all-graph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050811-2_19:
  bin: '"20050811-2.s"'
  cargs: ' -O2 -fdump-rtl-postreload-graph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050811-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-postreload-graph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050826-1_52:
  bin: '"./20050826-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050826-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050922-1_47:
  bin: '"./20050922-1.exe"'
  cargs: ' -O1 -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050922-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20050922-2_34:
  bin: '"./20050922-2.exe"'
  cargs: ' -O1 -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20050922-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051201-1_27:
  bin: '"20051201-1.s"'
  cargs: ' -O1 -fprofile-generate -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051201-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fprofile-generate -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051207-1_5:
  bin: '"20051207-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051207-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051207-2_5:
  bin: '"20051207-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051207-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20051207-3_7:
  bin: '"20051207-3.s"'
  cargs: ' -fno-unit-at-a-time -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20051207-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-unit-at-a-time"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(section type conflict))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060410_16:
  bin: '"20060410.s"'
  cargs: -g -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060410.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060419-1_4:
  bin: '"20060419-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060419-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored for field of type.*unsigned char\\\[1\\\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored for field of type.*unsigned char\\\[14\\\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060425-1_38:
  bin: '"./20060425-1.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060425-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060425-2_10:
  bin: '"20060425-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060425-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20060801-1_10:
  bin: '"20060801-1.s"'
  cargs: ' -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20060801-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061026_15:
  bin: '"20061026.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061026.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061109-1_17:
  bin: '"20061109-1.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061109-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061109-2_17:
  bin: '"20061109-2.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061109-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061124-1_22:
  bin: '"./20061124-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061124-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20061127-1_29:
  bin: '"20061127-1.s"'
  cargs: ' -O1 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20061127-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20070112-1_24:
  bin: '"20070112-1.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20070112-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20070507-1_103:
  bin: '"./20070507-1.exe"'
  cargs: ' -O3 -fPIC'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20070507-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fPIC"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20070725-1_64:
  bin: '"./20070725-1.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20070725-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20080615-1_25:
  bin: '"20080615-1.s"'
  cargs: ' -w -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20080615-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20080820_4:
  bin: '"20080820.s"'
  cargs: ' -fshow-column -fms-extensions -pedantic -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20080820.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -fms-extensions -pedantic -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(29:ISO C90 doesn't support unnamed))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20081223-1_5:
  bin: '"20081223-1.s"'
  cargs: ' -flto -ffat-lto-objects -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20081223-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -ffat-lto-objects" { target lto }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'bar' isn't known))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20090902-1_3:
  bin: '"20090902-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20090902-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20090922-1_65:
  bin: '"20090922-1.s"'
  cargs: ' -O2 -g -funroll-loops -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20090922-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -funroll-loops -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20100906-1_49:
  bin: '"./20100906-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20100906-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fno-short-enums -Wl,--no-enum-size-warning" {target arm_eabi}'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20101010-1_18:
  bin: '"20101010-1.s"'
  cargs: ' -O2 -fno-crossjumping -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20101010-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-crossjumping"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20101013-1_10:
  bin: '"20101013-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20101013-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20111216-1_17:
  bin: '"20111216-1.s"'
  cargs: ' -O -fexceptions -fnon-call-exceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20111216-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fnon-call-exceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20111227-2_45:
  bin: '"20111227-2.s"'
  cargs: -fdump-rtl-ree -O -free -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20111227-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ree -O -free"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20111227-3_45:
  bin: '"20111227-3.s"'
  cargs: -fdump-rtl-ree -O -free -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20111227-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ree -O -free"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20141029-1_27:
  bin: '"20141029-1.s"'
  cargs: -fstrict-volatile-bitfields -fdump-rtl-final -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20141029-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields -fdump-rtl-final"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150120-1_51:
  bin: '"20150120-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150120-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150120-2_32:
  bin: '"20150120-2.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150120-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150120-3_32:
  bin: '"20150120-3.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150120-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20150306-1_20:
  bin: '"./20150306-1.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20150306-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_20161219_30:
  bin: '"20161219.o"'
  cargs: ' -O1 -w -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/20161219.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_54455_26:
  bin: '"54455.s"'
  cargs: ' -O1 -fschedule-insns -fselective-scheduling --param max-sched-extend-regions-iters=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/54455.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fschedule-insns -fselective-scheduling --param max-sched-extend-regions-iters=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_920413-1_10:
  bin: '"920413-1.s"'
  cargs: ' -Wtraditional -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/920413-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(width of integer|traditional C rejects))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_940409-1_6:
  bin: '"940409-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/940409-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_940510-1_5:
  bin: '"940510-1.s"'
  cargs: ' -std=c89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/940510-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member in a struct with no named members"  "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_951130-1_5:
  bin: '"951130-1.s"'
  cargs: ' -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/951130-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980502-1_9:
  bin: '"980502-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980502-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980523-1_53:
  bin: '"./980523-1.exe"'
  cargs: ' -O2 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980523-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980526-1_17:
  bin: '"980526-1.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980526-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_980816-1_20:
  bin: '"980816-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/980816-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_990213-1_12:
  bin: '"990213-1.s"'
  cargs: ' -W -Wall -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/990213-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-W -Wall -Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_990506-0_9:
  bin: '"990506-0.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/990506-0.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared-variable message))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_O16384_15:
  bin: '"O16384.s"'
  cargs: ' -O16384 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/O16384.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O16384"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_PR68002_7:
  bin: '"PR68002.s"'
  cargs: -O1 -fkeep-static-functions -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/PR68002.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fkeep-static-functions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Waddress-2_24:
  bin: '"Waddress-2.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Waddress-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Waddress_10:
  bin: '"Waddress.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Waddress.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wall_9:
  bin: '"Wall.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wall.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-10_26:
  bin: '"Walloca-10.s"'
  cargs: ' -Walloca-larger-than=2000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. may be too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-11_13:
  bin: '"Walloca-11.s"'
  cargs: ' -Walloca -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-12_12:
  bin: '"Walloca-12.s"'
  cargs: ' -Walloca-larger-than=128 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=128 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-13_12:
  bin: '"Walloca-13.s"'
  cargs: ' -Walloca-larger-than=100 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=100 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-14_13:
  bin: '"Walloca-14.s"'
  cargs: ' -O2 -Walloca-larger-than=126812070 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloca-larger-than=126812070"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-1_65:
  bin: '"Walloca-1.s"'
  cargs: ' -Walloca-larger-than=2000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' within a loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(large due to conversion" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to 'alloca' is zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-2_46:
  bin: '"Walloca-2.s"'
  cargs: ' -Walloca-larger-than=2000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(large due to conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' may be too large" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of 'alloca'" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-3_34:
  bin: '"Walloca-3.s"'
  cargs: ' -Walloca-larger-than=2000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' bound is unknown))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*('alloca' bound is unknown))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-4_17:
  bin: '"Walloca-4.s"'
  cargs: ' -Walloca-larger-than=5000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=5000 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-5_33:
  bin: '"Walloca-5.s"'
  cargs: ' -Walloca-larger-than=123 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=123 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of alloca" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-6_12:
  bin: '"Walloca-6.s"'
  cargs: ' -Walloca-larger-than=256 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=256 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-7_18:
  bin: '"Walloca-7.s"'
  cargs: ' -Walloca -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca -O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(use of 'alloca'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(use of 'alloca'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-8_13:
  bin: '"Walloca-8.s"'
  cargs: ' -Walloca-larger-than=2000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=2000 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walloca-9_20:
  bin: '"Walloca-9.s"'
  cargs: ' -Walloca-larger-than=5000 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walloca-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca-larger-than=5000 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walways-true-1_57:
  bin: '"Walways-true-1.s"'
  cargs: ' -Waddress -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walways-true-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(7:always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(11:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(10:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(10:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(13:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(9:the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Walways-true-2_60:
  bin: '"Walways-true-2.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Walways-true-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(always evaluate as" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-10_25:
  bin: '"Warray-bounds-10.s"'
  cargs: ' -O3 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-11_103:
  bin: '"Warray-bounds-11.s"'
  cargs: ' -O3 -Warray-bounds=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(subscript is above array bound))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-12_26:
  bin: '"Warray-bounds-12.s"'
  cargs: ' -O3 -Warray-bounds -mssse3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-13_18:
  bin: '"Warray-bounds-13.s"'
  cargs: ' -O3 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-14_28:
  bin: '"Warray-bounds-14.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(outside array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(outside array bounds))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-15_20:
  bin: '"Warray-bounds-15.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(above array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(above array bounds))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-16_40:
  bin: '"Warray-bounds-16.s"'
  cargs: ' -O3 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-17_13:
  bin: '"Warray-bounds-17.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-18_25:
  bin: '"Warray-bounds-18.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-19_17:
  bin: '"Warray-bounds-19.s"'
  cargs: ' -O3 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-20_21:
  bin: '"Warray-bounds-20.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-21_22:
  bin: '"Warray-bounds-21.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-2_13:
  bin: '"Warray-bounds-2.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-3_108:
  bin: '"Warray-bounds-3.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-4_17:
  bin: '"Warray-bounds-4.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-5_24:
  bin: '"Warray-bounds-5.s"'
  cargs: ' -O3 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-6_29:
  bin: '"Warray-bounds-6.s"'
  cargs: ' -O3 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-7_13:
  bin: '"Warray-bounds-7.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-8_20:
  bin: '"Warray-bounds-8.s"'
  cargs: ' -O3 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds-9_19:
  bin: '"Warray-bounds-9.s"'
  cargs: ' -O3 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Warray-bounds_101:
  bin: '"Warray-bounds.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Warray-bounds.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(6:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(8:array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(15:array subscript))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-1_6:
  bin: '"Wattributes-1.s"'
  cargs: ' -Wattributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wattributes
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-2_6:
  bin: '"Wattributes-2.s"'
  cargs: ' -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wno-attributes
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-3_5:
  bin: '"Wattributes-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-3.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wattributes-4_3:
  bin: '"Wattributes-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wattributes-4.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(bad option))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wbad-function-cast-1_51:
  bin: '"Wbad-function-cast-1.s"'
  cargs: ' -Wbad-function-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wbad-function-cast-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wbad-function-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'int' to non-matching type 'float'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'char' to non-matching type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'long int' to non-matching type '_Bool'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'float' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'double' to non-matching type 'long int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'complex double' to non-matching type 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'enum e' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type '_Bool' to non-matching type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'char \\*' to non-matching type '\[^\\n\]*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from function call of type 'int \\*' to non-matching type '\[^\\n\]*'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wbool-operation-1_16:
  bin: '"Wbool-operation-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wbool-operation-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of a boolean expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of a boolean expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of a boolean expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of a boolean expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc++-compat_9:
  bin: '"Wc++-compat.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc++-compat.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-1_56:
  bin: '"Wc90-c99-compat-1.s"'
  cargs: ' -std=gnu90 -Wpedantic -Wc90-c99-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wpedantic -Wc90-c99-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-2_56:
  bin: '"Wc90-c99-compat-2.s"'
  cargs: ' -std=gnu99 -Wc90-c99-compat -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wc90-c99-compat -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-3_56:
  bin: '"Wc90-c99-compat-3.s"'
  cargs: ' -std=gnu11 -Wc90-c99-compat -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wc90-c99-compat -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-4_54:
  bin: '"Wc90-c99-compat-4.s"'
  cargs: ' -std=gnu90 -Wpedantic -Wno-c90-c99-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wpedantic -Wno-c90-c99-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-5_54:
  bin: '"Wc90-c99-compat-5.s"'
  cargs: ' -std=gnu90 -pedantic-errors -Wno-c90-c99-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors -Wno-c90-c99-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-6_29:
  bin: '"Wc90-c99-compat-6.s"'
  cargs: ' -std=gnu90 -Wc90-c99-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wc90-c99-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-7_13:
  bin: '"Wc90-c99-compat-7.s"'
  cargs: ' -std=gnu90 -Wpedantic -Wc90-c99-compat -Wno-long-long -Wno-declaration-after-statement -Wno-vla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -Wpedantic -Wc90-c99-compat -Wno-long-long -Wno-declaration-after-statement -Wno-vla"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc90-c99-compat-8_56:
  bin: '"Wc90-c99-compat-8.s"'
  cargs: ' -std=gnu90 -pedantic-errors -Wc90-c99-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc90-c99-compat-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors -Wc90-c99-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .long long.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support flexible array members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of bit-field .b. is a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(anonymous variadic macros were introduced in C99))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma at end of enumerator list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .\\\[\\\*\\\]. array declarators))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support .static. or type qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids compound literals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids mixed declarations and code))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids subscripting non-lvalue array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invoking macro F argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array .a.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-1_18:
  bin: '"Wc99-c11-compat-1.s"'
  cargs: ' -std=gnu90 -pedantic -Wc99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic -Wc99-c11-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support ._Generic.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-2_18:
  bin: '"Wc99-c11-compat-2.s"'
  cargs: ' -std=gnu99 -pedantic -Wc99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic -Wc99-c11-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Generic.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-3_18:
  bin: '"Wc99-c11-compat-3.s"'
  cargs: ' -std=gnu11 -pedantic-errors -Wc99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -pedantic-errors -Wc99-c11-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C99 does not support ._Generic.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-4_18:
  bin: '"Wc99-c11-compat-4.s"'
  cargs: ' -std=gnu99 -pedantic-errors -Wno-c99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors -Wno-c99-c11-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-5_18:
  bin: '"Wc99-c11-compat-5.s"'
  cargs: ' -std=gnu11 -Wc99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wc99-c11-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-6_18:
  bin: '"Wc99-c11-compat-6.s"'
  cargs: ' -std=gnu90 -pedantic-errors -Wc99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors -Wc99-c11-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support ._Generic.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wc99-c11-compat-7_18:
  bin: '"Wc99-c11-compat-7.s"'
  cargs: ' -std=gnu99 -pedantic-errors -Wc99-c11-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wc99-c11-compat-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors -Wc99-c11-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 doesn.t support unnamed structs/unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Noreturn.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef .A.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Thread_local.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Static_assert.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support the ._Atomic. qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Alignas.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Alignof.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support ._Generic.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wchar-subscripts-1_29:
  bin: '"Wchar-subscripts-1.s"'
  cargs: ' -Wchar-subscripts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wchar-subscripts-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wchar-subscripts"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript has type 'char'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript has type 'char'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wchar-subscripts_12:
  bin: '"Wchar-subscripts.s"'
  cargs: ' -Wchar-subscripts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wchar-subscripts.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wchar-subscripts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-3_5:
  bin: '"Wconversion-3.s"'
  cargs: ' -O2 -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(negative))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-4_5:
  bin: '"Wconversion-4.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-5_35:
  bin: '"Wconversion-5.s"'
  cargs: ' -O2 -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(may alter its value" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(may alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(may alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(may change the sign))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-complex-c99_138:
  bin: '"Wconversion-complex-c99.s"'
  cargs: '  -std=c99 -pedantic -Wconversion  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-complex-c99.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -std=c99 -pedantic -Wconversion "'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-complex-gnu_127:
  bin: '"Wconversion-complex-gnu.s"'
  cargs: '  -std=gnu99 -Wconversion  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-complex-gnu.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -std=gnu99 -Wconversion "'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(float-conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-integer-no-sign_96:
  bin: '"Wconversion-integer-no-sign.s"'
  cargs: ' -std=c99 -fsigned-char -Wconversion -Wno-sign-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-integer-no-sign.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fsigned-char -Wconversion -Wno-sign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-integer_98:
  bin: '"Wconversion-integer.s"'
  cargs: ' -std=c99 -fsigned-char -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-integer.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fsigned-char -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*( conversion" "conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type" "implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*( conversion" "conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type" "implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-pr34389_55:
  bin: '"Wconversion-pr34389.s"'
  cargs: ' -Wconversion -Wsign-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-pr34389.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wconversion-real-integer_113:
  bin: '"Wconversion-real-integer.s"'
  cargs: ' -std=c99 -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wconversion-real-integer.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-10_73:
  bin: '"Wcxx-compat-10.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-11_21:
  bin: '"Wcxx-compat-11.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-12_10:
  bin: '"Wcxx-compat-12.s"'
  cargs: ' -fno-short-enums -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-short-enums -Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-13_26:
  bin: '"Wcxx-compat-13.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(operator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-14_6:
  bin: '"Wcxx-compat-14.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-15_33:
  bin: '"Wcxx-compat-15.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-16_12:
  bin: '"Wcxx-compat-16.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-17_21:
  bin: '"Wcxx-compat-17.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-18_15:
  bin: '"Wcxx-compat-18.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-19_19:
  bin: '"Wcxx-compat-19.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-1_11:
  bin: '"Wcxx-compat-1.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not permitted))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-20_15:
  bin: '"Wcxx-compat-20.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized const member in))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-21_25:
  bin: '"Wcxx-compat-21.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-22_8:
  bin: '"Wcxx-compat-22.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(empty struct has size 0 in C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(empty union has size 0 in C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(empty struct has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(empty union has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(empty union has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(empty struct has size 0 in C|declaration does not declare anything))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-2_38:
  bin: '"Wcxx-compat-2.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(5:keyword))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-3_46:
  bin: '"Wcxx-compat-3.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-4_49:
  bin: '"Wcxx-compat-4.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-5_45:
  bin: '"Wcxx-compat-5.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-6_112:
  bin: '"Wcxx-compat-6.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-7_35:
  bin: '"Wcxx-compat-7.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-8_68:
  bin: '"Wcxx-compat-8.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of '__alignof__'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'w5' isn't known" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(not visible in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wcxx-compat-9_21:
  bin: '"Wcxx-compat-9.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wcxx-compat-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-1_26:
  bin: '"./Wdeclaration-after-statement-1.exe"'
  cargs: ' -Wdeclaration-after-statement'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wdeclaration-after-statement"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration after statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration after statement))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-2_26:
  bin: '"./Wdeclaration-after-statement-2.exe"'
  cargs: ' -std=c99 -pedantic-errors -Wdeclaration-after-statement'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -Wdeclaration-after-statement"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-3_24:
  bin: '"Wdeclaration-after-statement-3.s"'
  cargs: ' -std=c99 -pedantic -Werror=declaration-after-statement -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic -Werror=declaration-after-statement"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "declaration-after-statement))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdeclaration-after-statement-4_23:
  bin: '"Wdeclaration-after-statement-4.s"'
  cargs: ' -std=c90 -pedantic -Wno-declaration-after-statement -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdeclaration-after-statement-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic -Wno-declaration-after-statement"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdesignated-init-2_15:
  bin: '"Wdesignated-init-2.s"'
  cargs: ' -std=gnu11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdesignated-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdesignated-init_107:
  bin: '"Wdesignated-init.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdesignated-init.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only valid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only valid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only valid))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*((positional|near initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wdouble-promotion_104:
  bin: '"Wdouble-promotion.s"'
  cargs: ' -Wdouble-promotion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wdouble-promotion.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wdouble-promotion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wduplicate-decl-specifier-c11_27:
  bin: '"Wduplicate-decl-specifier-c11.s"'
  cargs: ' -std=c11 -Wduplicate-decl-specifier -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wduplicate-decl-specifier-c11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wduplicate-decl-specifier"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate ._Atomic.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate ._Atomic.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate ._Atomic.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wduplicate-decl-specifier_63:
  bin: '"Wduplicate-decl-specifier.s"'
  cargs: ' -Wduplicate-decl-specifier -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wduplicate-decl-specifier.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wduplicate-decl-specifier"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .restrict.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .restrict.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .const.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .volatile.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate .restrict.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wenum-compare-1_33:
  bin: '"Wenum-compare-1.s"'
  cargs: ' -Wenum-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wenum-compare-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wenum-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between .enum E1. and .enum E2.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between .enum E1. and .enum E2.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-10_19:
  bin: '"Werror-10.s"'
  cargs: ' -Wattributes -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-11_19:
  bin: '"Werror-11.s"'
  cargs: ' -Wattributes -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-12_18:
  bin: '"Werror-12.s"'
  cargs: ' -Wattributes -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-13_8:
  bin: '"Werror-13.s"'
  cargs: ' -Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror=error -Werror=p, -Werror=l, -Werror=fatal-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wp, is not an option that controls warnings" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wl, is not an option that controls warnings" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Werror is not an option that controls warnings" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wfatal-errors is not an option that controls warnings" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-1_22:
  bin: '"Werror-1.s"'
  cargs: ' -Waddress -Wattributes -Werror -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Wattributes -Werror -fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-2_17:
  bin: '"Werror-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-3_16:
  bin: '"Werror-3.s"'
  cargs: ' -Waddress -Wattributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Wattributes"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-4_18:
  bin: '"Werror-4.s"'
  cargs: ' -Wattributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(will always evaluate as 'true'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-5_17:
  bin: '"Werror-5.s"'
  cargs: ' -Waddress -Wattributes -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Wattributes -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-6_16:
  bin: '"Werror-6.s"'
  cargs: ' -Wattributes -Werror=address -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes -Werror=address"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-7_17:
  bin: '"Werror-7.s"'
  cargs: ' -Waddress -Werror -Wno-error=address -Wattributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress -Werror -Wno-error=address -Wattributes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-8_18:
  bin: '"Werror-8.s"'
  cargs: ' -Wattributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wattributes"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(.* attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(.* will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Werror-implicit-function-declaration_8:
  bin: '"Werror-implicit-function-declaration.s"'
  cargs: ' -std=c89 -Werror-implicit-function-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Werror-implicit-function-declaration.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Werror-implicit-function-declaration"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wfatal-2_9:
  bin: '"Wfatal-2.s"'
  cargs: ' -Woverflow -Wdiv-by-zero -Werror -Wfatal-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wfatal-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow -Wdiv-by-zero -Werror -Wfatal-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wfatal_12:
  bin: '"Wfatal.s"'
  cargs: ' -Woverflow -Werror=div-by-zero -Wfatal-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wfatal.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow -Werror=div-by-zero -Wfatal-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(division by zero))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wfloat-equal-1_10:
  bin: '"Wfloat-equal-1.s"'
  cargs: ' -Wfloat-equal -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wfloat-equal-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wfloat-equal"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(comparing floating point))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wframe-address-in-Wall_14:
  bin: '"Wframe-address-in-Wall.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wframe-address-in-Wall.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wframe-address_55:
  bin: '"Wframe-address.s"'
  cargs: ' -Wframe-address -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wframe-address.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wframe-address"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_frame_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(builtin_return_address))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wframe-larger-than_13:
  bin: '"Wframe-larger-than.s"'
  cargs: ' -Wframe-larger-than=2048 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wframe-larger-than.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wframe-larger-than=2048"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(the frame size of .* bytes is larger than 2048 bytes))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-fallthrough-1_22:
  bin: '"Wimplicit-fallthrough-1.s"'
  cargs: ' -Wimplicit-fallthrough -Wdeclaration-after-statement -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-fallthrough-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-fallthrough -Wdeclaration-after-statement"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(mixed declarations and code))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c89-default_7:
  bin: '"Wimplicit-function-declaration-c89-default.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c89-default.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c89-pedantic_7:
  bin: '"Wimplicit-function-declaration-c89-pedantic.s"'
  cargs: ' -std=c89 -pedantic-errors -Wimplicit-function-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c89-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic-errors -Wimplicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c89_7:
  bin: '"Wimplicit-function-declaration-c89.s"'
  cargs: ' -std=c89 -Wimplicit-function-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c89.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wimplicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c99-pedantic_7:
  bin: '"Wimplicit-function-declaration-c99-pedantic.s"'
  cargs: ' -std=c99 -pedantic-errors -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c99-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-function-declaration-c99_7:
  bin: '"Wimplicit-function-declaration-c99.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-function-declaration-c99.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-1_11:
  bin: '"Wimplicit-int-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(return type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type of .a. defaults to .int." "type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-2_11:
  bin: '"Wimplicit-int-2.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of .a. defaults to .int." "type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults to))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-3_10:
  bin: '"Wimplicit-int-3.s"'
  cargs: ' -pedantic-errors -Wno-implicit-int -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -Wno-implicit-int"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wimplicit-int-4_11:
  bin: '"Wimplicit-int-4.s"'
  cargs: ' -Wno-implicit -Wimplicit-int -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wimplicit-int-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-implicit -Wimplicit-int"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(return type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type of .a. defaults to .int." "type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(type defaults to))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wincompatible-pointer-types_21:
  bin: '"Wincompatible-pointer-types.s"'
  cargs: ' -Wno-incompatible-pointer-types -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wincompatible-pointer-types.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-incompatible-pointer-types"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wint-conversion_22:
  bin: '"Wint-conversion.s"'
  cargs: ' -Wno-int-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wint-conversion.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-int-conversion"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wjump-misses-init-1_156:
  bin: '"Wjump-misses-init-1.s"'
  cargs: ' -Wjump-misses-init -Wno-switch-unreachable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wjump-misses-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wjump-misses-init -Wno-switch-unreachable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wjump-misses-init-2_52:
  bin: '"Wjump-misses-init-2.s"'
  cargs: ' -Wjump-misses-init -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wjump-misses-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wjump-misses-init -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(jump))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wlarger-than2_7:
  bin: '"Wlarger-than2.s"'
  cargs: ' -Wlarger-than=8 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wlarger-than2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wlarger-than=8"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(size of.*9 bytes))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wlarger-than_10:
  bin: '"Wlarger-than.s"'
  cargs: ' -Wlarger-than-32768 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wlarger-than.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wlarger-than-32768"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wlogical-op-1_77:
  bin: '"Wlogical-op-1.s"'
  cargs: ' -Wlogical-op -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wlogical-op-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(logical))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-braces-fixits_202:
  bin: '"Wmissing-braces-fixits.s"'
  cargs: ' -Wmissing-braces -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-braces-fixits.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-braces -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces around initializer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-parameter-type-Wextra_7:
  bin: '"Wmissing-parameter-type-Wextra.s"'
  cargs: ' -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-parameter-type-Wextra.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(type of 'bar' defaults to 'int'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-parameter-type-no_7:
  bin: '"Wmissing-parameter-type-no.s"'
  cargs: ' -Wall -Wextra -Wno-missing-parameter-type -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-parameter-type-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -Wno-missing-parameter-type -std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wmissing-parameter-type_6:
  bin: '"Wmissing-parameter-type.s"'
  cargs: ' -Wmissing-parameter-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wmissing-parameter-type.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-parameter-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(type of 'bar' defaults to 'int'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wnested-externs-1_22:
  bin: '"Wnested-externs-1.s"'
  cargs: ' -Wnested-externs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wnested-externs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wnested-externs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'b'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'd'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(nested extern declaration of 'f2'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wnested-externs-2_11:
  bin: '"Wnested-externs-2.s"'
  cargs: ' -Wnested-externs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wnested-externs-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wnested-externs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(14:nested extern declaration of 'i'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(16:nested extern declaration of 'foo'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(20:nested extern declaration of 's'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-all_10:
  bin: '"Wno-all.s"'
  cargs: ' -Wall -Wno-all -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-all.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-c++-compat_9:
  bin: '"Wno-c++-compat.s"'
  cargs: ' -Wno-c++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-c++-compat.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-c++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized and declared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-frame-address_8:
  bin: '"Wno-frame-address.s"'
  cargs: ' -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-frame-address.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wno-pointer-sign_26:
  bin: '"Wno-pointer-sign.s"'
  cargs: ' -Wno-pointer-sign -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wno-pointer-sign.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-sign"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wobjsize-1_15:
  bin: '"Wobjsize-1.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wobjsize-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wold-style-definition-1_24:
  bin: '"Wold-style-definition-1.s"'
  cargs: ' -Wold-style-definition -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wold-style-definition-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wold-style-definition -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(old-style function definition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wold-style-definition-2_10:
  bin: '"Wold-style-definition-2.s"'
  cargs: ' -Wold-style-definition -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wold-style-definition-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wold-style-definition"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C requires a named argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverflow-1_7:
  bin: '"Woverflow-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverflow-2_7:
  bin: '"Woverflow-2.s"'
  cargs: ' -O2 -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverflow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverflow-3_7:
  bin: '"Woverflow-3.s"'
  cargs: ' -O2 -Wno-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverflow-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89-asm_47:
  bin: '"Woverlength-strings-pedantic-c89-asm.s"'
  cargs: ' -std=c89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89-asm.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89-ext_19:
  bin: '"Woverlength-strings-pedantic-c89-ext.s"'
  cargs: ' -std=c89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89-ext.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89-no_19:
  bin: '"Woverlength-strings-pedantic-c89-no.s"'
  cargs: ' -std=c89 -pedantic -Wno-overlength-strings -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic -Wno-overlength-strings"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c89_19:
  bin: '"Woverlength-strings-pedantic-c89.s"'
  cargs: ' -std=c89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c89.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c90-asm_48:
  bin: '"Woverlength-strings-pedantic-c90-asm.s"'
  cargs: ' -std=c90 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c90-asm.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c90-ext_19:
  bin: '"Woverlength-strings-pedantic-c90-ext.s"'
  cargs: ' -std=c90 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c90-ext.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c90_19:
  bin: '"Woverlength-strings-pedantic-c90.s"'
  cargs: ' -std=c90 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c90.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99-asm_48:
  bin: '"Woverlength-strings-pedantic-c99-asm.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99-asm.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99-ext_19:
  bin: '"Woverlength-strings-pedantic-c99-ext.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99-ext.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99-no_19:
  bin: '"Woverlength-strings-pedantic-c99-no.s"'
  cargs: ' -std=c99 -pedantic -Wno-overlength-strings -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic -Wno-overlength-strings"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings-pedantic-c99_19:
  bin: '"Woverlength-strings-pedantic-c99.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings-pedantic-c99.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(greater than))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverlength-strings_19:
  bin: '"Woverlength-strings.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverlength-strings.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-1_28:
  bin: '"Woverride-init-1.s"'
  cargs: ' -Woverride-init -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverride-init"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-2_28:
  bin: '"Woverride-init-2.s"'
  cargs: ' -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field overwritten))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-3_29:
  bin: '"Woverride-init-3.s"'
  cargs: ' -Wextra -Wno-override-init -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-override-init"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-side-effects-1_25:
  bin: '"Woverride-init-side-effects-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-side-effects-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized field with side-effects overwritten))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Woverride-init-side-effects-2_25:
  bin: '"Woverride-init-side-effects-2.s"'
  cargs: ' -Wno-override-init-side-effects -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Woverride-init-side-effects-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-override-init-side-effects"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpadded_14:
  bin: '"Wpadded.s"'
  cargs: ' -Wpadded -fpack-struct=8 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpadded.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpadded -fpack-struct=8"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(padding struct to align" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-10_42:
  bin: '"Wparentheses-10.s"'
  cargs: ' -Wparentheses -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-11_258:
  bin: '"Wparentheses-11.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-12_135:
  bin: '"Wparentheses-12.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-13_67:
  bin: '"Wparentheses-13.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-14_11:
  bin: '"Wparentheses-14.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(7:suggest parentheses))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-1_15:
  bin: '"Wparentheses-1.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wparentheses
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-2_121:
  bin: '"Wparentheses-2.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(mathematical meaning" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest parentheses around comparison" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-3_68:
  bin: '"Wparentheses-3.s"'
  cargs: ' -Wparentheses -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses -std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-4_85:
  bin: '"Wparentheses-4.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-5_31:
  bin: '"Wparentheses-5.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-6_121:
  bin: '"Wparentheses-6.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-7_121:
  bin: '"Wparentheses-7.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-8_103:
  bin: '"Wparentheses-8.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wparentheses-9_61:
  bin: '"Wparentheses-9.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wparentheses-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous" "correct warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(ambiguous" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-arith_11:
  bin: '"Wpointer-arith.s"'
  cargs: ' -Werror=pointer-arith -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-arith.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror=pointer-arith"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type argument to increment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-Wall-no_9:
  bin: '"Wpointer-sign-Wall-no.s"'
  cargs: ' -Wno-pointer-sign -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-Wall-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-sign -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-Wall_10:
  bin: '"Wpointer-sign-Wall.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-Wall.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(differ in signedness))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-pedantic-no_9:
  bin: '"Wpointer-sign-pedantic-no.s"'
  cargs: ' -Wno-pointer-sign -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-pedantic-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-sign -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign-pedantic_9:
  bin: '"Wpointer-sign-pedantic.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign-pedantic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(differ in signedness))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-sign_13:
  bin: '"Wpointer-sign.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-sign.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-to-int-cast-1_12:
  bin: '"Wpointer-to-int-cast-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-to-int-cast-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-to-int-cast-2_12:
  bin: '"Wpointer-to-int-cast-2.s"'
  cargs: ' -Wpointer-to-int-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-to-int-cast-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-to-int-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpointer-to-int-cast-3_21:
  bin: '"Wpointer-to-int-cast-3.s"'
  cargs: ' -Wno-pointer-to-int-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpointer-to-int-cast-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-pointer-to-int-cast"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wpragmas-1_11:
  bin: '"Wpragmas-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wpragmas-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(bad option))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wredundant-decls-1_7:
  bin: '"Wredundant-decls-1.s"'
  cargs: ' -Wredundant-decls -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wredundant-decls-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wredundant-decls"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(redundant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wredundant-decls-2_27:
  bin: '"Wredundant-decls-2.s"'
  cargs: ' -Wredundant-decls -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wredundant-decls-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wredundant-decls"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(5:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(12:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(12:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(12:redundant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(5:redundant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wreturn-local-addr_9:
  bin: '"Wreturn-local-addr.o"'
  cargs: ' -Werror=return-local-addr -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wreturn-local-addr.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror=return-local-addr"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of local variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wreturn-type2_9:
  bin: '"Wreturn-type2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wreturn-type2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wreturn-type_5:
  bin: '"Wreturn-type.s"'
  cargs: ' -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wreturn-type.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(return" "missing return))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsequence-point-pr18050_24:
  bin: '"Wsequence-point-pr18050.s"'
  cargs: ' -Wsequence-point -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wsequence-point-pr18050.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(operation on 'y' may be undefined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-1_32:
  bin: '"Wshadow-1.s"'
  cargs: ' -Wshadow -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a global decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-2_10:
  bin: '"Wshadow-2.s"'
  cargs: ' -Wshadow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-3_21:
  bin: '"Wshadow-3.s"'
  cargs: ' -std=gnu89 -Wshadow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Wshadow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'v' shadows a global declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration of 'a' shadows a parameter))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-4_38:
  bin: '"Wshadow-4.s"'
  cargs: ' -Wshadow -Wsystem-headers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow -Wsystem-headers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-compatible-local-1_36:
  bin: '"Wshadow-compatible-local-1.s"'
  cargs: ' -Wshadow=compatible-local -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-compatible-local-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow=compatible-local"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-local-1_22:
  bin: '"Wshadow-local-1.s"'
  cargs: ' -Wshadow=local -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-local-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow=local"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-local-2_49:
  bin: '"Wshadow-local-2.s"'
  cargs: ' -Wshadow=local -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-local-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow=local"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a previous local))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wshadow-local-3_9:
  bin: '"Wshadow-local-3.s"'
  cargs: ' -Wno-shadow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wshadow-local-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-shadow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsign-conversion_96:
  bin: '"Wsign-conversion.s"'
  cargs: ' -std=c99 -fsigned-char -Wsign-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wsign-conversion.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fsigned-char -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wsizeof-pointer-memaccess1_457:
  bin: '"Wsizeof-pointer-memaccess1.s"'
  cargs: ' -Wall -Wno-sizeof-array-argument -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wsizeof-pointer-memaccess1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-sizeof-array-argument"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the destination; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the first source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same pointer type \[^\n\r\]* as the second source; expected \[^\n\r\]* or an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the destination; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the first source; did you mean to dereference it))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to provide an explicit length))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to remove the addressof))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: warning:[^
        ]*(call is the same expression as the second source; did you mean to dereference it))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-const-ptr-nonconst-ptr_10:
  bin: '"Wstrict-aliasing-bogus-const-ptr-nonconst-ptr.s"'
  cargs: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-const-ptr-nonconst-ptr.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-never-dereferenced_14:
  bin: '"Wstrict-aliasing-bogus-never-dereferenced.s"'
  cargs: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-never-dereferenced.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-pta-1_19:
  bin: '"Wstrict-aliasing-bogus-pta-1.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-pta-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-ref-all-2_28:
  bin: '"Wstrict-aliasing-bogus-ref-all-2.s"'
  cargs: ' -O2 -Wall -msse2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-ref-all-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
      - '"-O2 -Wall -mabi=altivec" { target { { powerpc*-*-linux* } && ilp32 } }'
      - '"-O2 -Wall -msse2" { target { i?86-*-* x86_64-*-* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-ref-all_41:
  bin: '"Wstrict-aliasing-bogus-ref-all.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-ref-all.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(will break))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(will break))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-struct-included_18:
  bin: '"Wstrict-aliasing-bogus-struct-included.s"'
  cargs: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-struct-included.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-upcast_17:
  bin: '"Wstrict-aliasing-bogus-upcast.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-upcast.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-bogus-vla-1_11:
  bin: '"Wstrict-aliasing-bogus-vla-1.s"'
  cargs: ' -std=gnu99 -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-bogus-vla-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-converted-assigned_15:
  bin: '"Wstrict-aliasing-converted-assigned.s"'
  cargs: ' -O2 -Wstrict-aliasing -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-converted-assigned.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-aliasing -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punn" "type-punn))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-float-ptr-int-obj_23:
  bin: '"Wstrict-aliasing-float-ptr-int-obj.s"'
  cargs: ' -O -Wstrict-aliasing -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-float-ptr-int-obj.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wstrict-aliasing -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(does break strict-aliasing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-aliasing-struct-with-char-member_16:
  bin: '"Wstrict-aliasing-struct-with-char-member.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-aliasing-struct-with-char-member.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(will break strict-aliasing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-10_10:
  bin: '"Wstrict-overflow-10.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-11_19:
  bin: '"Wstrict-overflow-11.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-12_16:
  bin: '"Wstrict-overflow-12.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-13_18:
  bin: '"Wstrict-overflow-13.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-14_15:
  bin: '"Wstrict-overflow-14.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=4 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-15_15:
  bin: '"Wstrict-overflow-15.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=4 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-16_11:
  bin: '"Wstrict-overflow-16.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-17_20:
  bin: '"Wstrict-overflow-17.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-18_22:
  bin: '"Wstrict-overflow-18.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(signed overflow" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-19_15:
  bin: '"Wstrict-overflow-19.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-1_13:
  bin: '"Wstrict-overflow-1.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-20_15:
  bin: '"Wstrict-overflow-20.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-21_12:
  bin: '"Wstrict-overflow-21.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-22_13:
  bin: '"Wstrict-overflow-22.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming pointer wraparound does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-23_31:
  bin: '"Wstrict-overflow-23.s"'
  cargs: ' -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-24_10:
  bin: '"Wstrict-overflow-24.s"'
  cargs: ' -fstrict-overflow -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-25_11:
  bin: '"Wstrict-overflow-25.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-25.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-26_16:
  bin: '"Wstrict-overflow-26.s"'
  cargs: ' -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-26.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-2_13:
  bin: '"Wstrict-overflow-2.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-3_13:
  bin: '"Wstrict-overflow-3.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=4 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-4_13:
  bin: '"Wstrict-overflow-4.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-5_13:
  bin: '"Wstrict-overflow-5.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-6_13:
  bin: '"Wstrict-overflow-6.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-7_10:
  bin: '"Wstrict-overflow-7.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-8_10:
  bin: '"Wstrict-overflow-8.s"'
  cargs: ' -fstrict-overflow -O2 -Wall -Wno-strict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wall -Wno-strict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstrict-overflow-9_10:
  bin: '"Wstrict-overflow-9.s"'
  cargs: ' -fstrict-overflow -O2 -Wstrict-overflow=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstrict-overflow-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -Wstrict-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow does not occur" "correct warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-1_29:
  bin: '"Wstring-literal-comparison-1.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison with string))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-2_29:
  bin: '"Wstring-literal-comparison-2.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison with string))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-3_29:
  bin: '"Wstring-literal-comparison-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wstring-literal-comparison-4_29:
  bin: '"Wstring-literal-comparison-4.s"'
  cargs: ' -Wall -Wno-address -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wstring-literal-comparison-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-address"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-2_31:
  bin: '"Wswitch-2.s"'
  cargs: ' -Wswitch -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e4' not handled in switch" "enum e4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-default_62:
  bin: '"Wswitch-default.s"'
  cargs: ' -Wswitch-default -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-default.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-default"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(switch missing default case))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum-2_21:
  bin: '"Wswitch-enum-2.s"'
  cargs: ' -O2 -Wswitch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wswitch-enum"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated" "3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '1' not in enumerated" "1))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum-3_15:
  bin: '"Wswitch-enum-3.s"'
  cargs: ' -O2 -Wswitch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wswitch-enum"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'a' not handled" "a))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '1' not in enumerated" "1))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum-error_63:
  bin: '"Wswitch-enum-error.s"'
  cargs: ' -Werror=switch-enum -Wswitch -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum-error.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror=switch-enum -Wswitch"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-enum_63:
  bin: '"Wswitch-enum.s"'
  cargs: ' -Wswitch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-enum.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-enum"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-error_64:
  bin: '"Wswitch-error.s"'
  cargs: ' -Werror=switch -Wswitch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-error.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror=switch -Wswitch-enum"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-unreachable-1_35:
  bin: '"Wswitch-unreachable-1.s"'
  cargs: ' -Wswitch-unreachable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-unreachable-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-unreachable"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into scope))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(statement will never be executed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(statement will never be executed))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch-unreachable-2_12:
  bin: '"Wswitch-unreachable-2.s"'
  cargs: ' -Wswitch-unreachable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch-unreachable-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-unreachable"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wswitch_63:
  bin: '"Wswitch.s"'
  cargs: ' -Wswitch -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wswitch.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e1' not handled in switch" "enum e1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(enumeration value 'e2' not handled in switch" "enum e2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(case value '3' not in enumerated type 'enum e'" "excess 3))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion-2_64:
  bin: '"Wtraditional-conversion-2.s"'
  cargs: ' -std=c99 -pedantic-errors -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtraditional-conversion-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as integer rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as integer rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fcf' as complex rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fcf' as complex rather than floating due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fcf' as complex rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fcf' as complex rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ff' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.ff' as floating rather than integer due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ff' as floating rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.ff' as floating rather than complex due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ff' as 'float' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.ff' as 'float' rather than 'double' due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsll' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsll' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsc' with different width due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'full' as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'x.full' as unsigned due to prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtraditional-conversion_20:
  bin: '"Wtraditional-conversion.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtraditional-conversion.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wtraditional-conversion
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtrampolines_57:
  bin: '"Wtrampolines.s"'
  cargs: ' -O2 -Wtrampolines -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtrampolines.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wtrampolines"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(trampoline generated for nested function 'b'" "standard descriptors))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits-Wextra_70:
  bin: '"Wtype-limits-Wextra.s"'
  cargs: ' -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits-Wextra.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits-no_66:
  bin: '"Wtype-limits-no.s"'
  cargs: ' -Wextra -Wno-type-limits -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-type-limits"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits2_12:
  bin: '"Wtype-limits2.s"'
  cargs: ' -Wtype-limits -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wtype-limits_70:
  bin: '"Wtype-limits.s"'
  cargs: ' -Wtype-limits -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wtype-limits.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always false due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison is always true due to limited range of data type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunknownprag_11:
  bin: '"Wunknownprag.s"'
  cargs: ' -Wunknown-pragmas -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunknownprag.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunknown-pragmas"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ignoring #pragma))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunsuffixed-float-constants-1_17:
  bin: '"Wunsuffixed-float-constants-1.s"'
  cargs: ' -std=gnu99 -Wunsuffixed-float-constants -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunsuffixed-float-constants-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wunsuffixed-float-constants"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(unsuffixed float constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(unsuffixed float constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-function_6:
  bin: '"Wunused-function.s"'
  cargs: ' -Wunused-function -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-function.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-function"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*('foo' defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*('bar' defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-label-1_13:
  bin: '"Wunused-label-1.s"'
  cargs: ' -Wunused-label -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-label-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-label"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-local-typedefs_36:
  bin: '"Wunused-local-typedefs.s"'
  cargs: ' -Wunused-local-typedefs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-local-typedefs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-local-typedefs"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(locally defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(locally defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(locally defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-parm-1_29:
  bin: '"Wunused-parm-1.s"'
  cargs: ' -Wunused -W -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-parm-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused -W"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(set but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-value-1_31:
  bin: '"Wunused-value-1.s"'
  cargs: ' -Wunused-value -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-value-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-value"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(value computed is not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-value-2_18:
  bin: '"Wunused-value-2.s"'
  cargs: ' -Wunused-value -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-value-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-value"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-value-3_9:
  bin: '"Wunused-value-3.s"'
  cargs: ' -Wunused-value -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-value-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-value"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-var-1_26:
  bin: '"Wunused-var-1.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-var-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(set but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-var-2_19:
  bin: '"Wunused-var-2.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-var-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wunused-var-3_34:
  bin: '"Wunused-var-3.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wunused-var-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-1_5:
  bin: '"Wvla-1.s"'
  cargs: ' -std=c89 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array 'array'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-2_5:
  bin: '"Wvla-2.s"'
  cargs: ' -std=c99 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array 'array'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-3_5:
  bin: '"Wvla-3.s"'
  cargs: ' -pedantic-errors -std=c89 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c89 -Wvla"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable.* array 'array'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-4_5:
  bin: '"Wvla-4.s"'
  cargs: ' -pedantic-errors -std=c99 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c99 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array 'array'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-5_5:
  bin: '"Wvla-5.s"'
  cargs: ' -pedantic-errors -std=c89 -Wno-vla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c89 -Wno-vla"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-6_5:
  bin: '"Wvla-6.s"'
  cargs: ' -std=c89 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wvla"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-7_5:
  bin: '"Wvla-7.s"'
  cargs: ' -pedantic-errors -std=c89 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c89 -Wvla"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-larger-than-1_25:
  bin: '"Wvla-larger-than-1.s"'
  cargs: ' -Wvla-larger-than=100 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-larger-than-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wvla-larger-than=100 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wvla-larger-than-2_71:
  bin: '"Wvla-larger-than-2.s"'
  cargs: ' -O2 -Wvla-larger-than=40 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wvla-larger-than-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wvla-larger-than=40"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(array may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(array may be too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(variable-length array is too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_Wwrite-strings-1_8:
  bin: '"Wwrite-strings-1.s"'
  cargs: ' -Wwrite-strings -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/Wwrite-strings-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wwrite-strings"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_addr_builtin-1_198:
  bin: '"addr_builtin-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/addr_builtin-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(built-in function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_addr_equal-1_103:
  bin: '"./addr_equal-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/addr_equal-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-10_31:
  bin: '"alias-10.s"'
  cargs: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-11_111:
  bin: '"./alias-11.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-12_9:
  bin: '"alias-12.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(part of alias cycle" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-13_9:
  bin: '"alias-13.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(part of alias cycle" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-14_70:
  bin: '"alias-14.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-15_15:
  bin: '"alias-15.s"'
  cargs: ' -ansi -pedantic-errors -O2 -fdump-ipa-cgraph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-15.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-1_28:
  bin: '"alias-1.s"'
  cargs: ' -Wstrict-aliasing=2 -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punned pointer will" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punning to incomplete" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-2_16:
  bin: '"alias-2.s"'
  cargs: ' -Wstrict-aliasing=2 -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punned pointer will" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-3_11:
  bin: '"alias-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aliased to))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-4_11:
  bin: '"alias-4.s"'
  cargs: ' -O2 -funit-at-a-time -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aliased to))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-5_7:
  bin: '"alias-5.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-6_7:
  bin: '"alias-6.exe"'
  cargs: ' -O2 -funit-at-a-time'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-7_20:
  bin: '"./alias-7.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-8_12:
  bin: '"alias-8.s"'
  cargs: ' -Wstrict-aliasing=2 -fstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(type-punned pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alias-9_20:
  bin: '"alias-9.s"'
  cargs: ' -Wstrict-aliasing=2 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alias-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(strict-aliasing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(strict-aliasing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(strict-aliasing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_align-1_28:
  bin: '"./align-1.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/align-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_align-2_6:
  bin: '"align-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/align-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_align-3_11:
  bin: '"align-3.s"'
  cargs: -O2 -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/align-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_alignof_11:
  bin: '"alignof.s"'
  cargs: ' -std=c11 -Wno-error -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/alignof.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wno-error -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not allow ._Alignof \\(expression\\).))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_always_inline2_8:
  bin: '"always_inline2.s"'
  cargs: ' -O2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/always_inline2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(body not available))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_always_inline3_11:
  bin: '"always_inline3.s"'
  cargs: ' -O2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/always_inline3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(recursive inlining))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_always_inline_9:
  bin: '"always_inline.s"'
  cargs: ' -O2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/always_inline.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable argument lists))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_and-1_10:
  bin: '"and-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/and-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-10_57:
  bin: '"./anon-struct-10.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-11_111:
  bin: '"anon-struct-11.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-12_108:
  bin: '"./anon-struct-12.exe"'
  cargs: ' -fplan9-extensions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fplan9-extensions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-13_76:
  bin: '"anon-struct-13.s"'
  cargs: ' -fplan9-extensions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fplan9-extensions"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no member))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-14_9:
  bin: '"anon-struct-14.s"'
  cargs: ' -fplan9-extensions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fplan9-extensions"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-15_16:
  bin: '"anon-struct-15.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-1_56:
  bin: '"anon-struct-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-2_48:
  bin: '"anon-struct-2.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(does not declare anything))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-3_32:
  bin: '"anon-struct-3.s"'
  cargs: ' -std=gnu89 -fms-extensions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -fms-extensions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-4_10:
  bin: '"anon-struct-4.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-5_7:
  bin: '"anon-struct-5.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything" "int;))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no members" "no members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-6_12:
  bin: '"anon-struct-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type qualifier in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration" "empty 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-7_10:
  bin: '"anon-struct-7.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids member declarations with no members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-8_10:
  bin: '"anon-struct-8.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids member declarations with no members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_anon-struct-9_129:
  bin: '"anon-struct-9.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/anon-struct-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-10_33:
  bin: '"array-10.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at file scope|outside of any function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:at file scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(20:at file scope))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(9:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(12:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(14:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(20:division by zero" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(23:division by zero" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-11_15:
  bin: '"array-11.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested context" "nested))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements" "excess))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-12_13:
  bin: '"array-12.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "iso))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-13_28:
  bin: '"./array-13.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*((excess elements)|(near initialization)" "))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-14_18:
  bin: '"array-14.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-15_52:
  bin: '"array-15.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-1_15:
  bin: '"array-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-2_14:
  bin: '"array-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested context" "nested))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements" "excess))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-3_11:
  bin: '"array-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "iso))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-4_25:
  bin: '"./array-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*((excess elements)|(near initialization)" "))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-5_42:
  bin: '"array-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-6_18:
  bin: '"array-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((non-static)|(initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-7_14:
  bin: '"array-7.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-8_48:
  bin: '"array-8.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is neither array nor pointer nor vector))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array subscript is not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array subscript is not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type 'struct si'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type" "incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type 'struct si'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-9_10:
  bin: '"array-9.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-9.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-const-1_8:
  bin: '"array-const-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-const-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-const-2_9:
  bin: '"array-const-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-const-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-const-3_9:
  bin: '"array-const-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-const-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-init-1_25:
  bin: '"array-init-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-init-2_51:
  bin: '"./array-init-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-quals-1_31:
  bin: '"array-quals-1.s"'
  cargs: -Wno-discarded-array-qualifiers -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-quals-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-discarded-array-qualifiers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_array-quals-2_14:
  bin: '"array-quals-2.s"'
  cargs: ' -pedantic -Wno-discarded-array-qualifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/array-quals-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wno-discarded-array-qualifiers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_aru-2_29:
  bin: '"./aru-2.exe"'
  cargs: ' -O2 -pg'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/aru-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pg"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-10_12:
  bin: '"asm-10.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not directly addressable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-1_12:
  bin: '"asm-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "casts make rvalues))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-2_9:
  bin: '"asm-2.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-3_9:
  bin: '"asm-3.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-4_16:
  bin: '"asm-4.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-6_7:
  bin: '"asm-6.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-6.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate asm operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined named operand))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-7_28:
  bin: '"asm-7.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-7.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-8_9:
  bin: '"asm-8.s"'
  cargs: ' -O -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-9_11:
  bin: '"asm-9.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-b_39:
  bin: '"./asm-b.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-fs-1_14:
  bin: '"asm-fs-1.s"'
  cargs: -w -ffunction-sections -fdata-sections -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-fs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -ffunction-sections -fdata-sections"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-names_16:
  bin: '"asm-names.s"'
  cargs: -fleading-underscore -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-names.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fleading-underscore"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-pr24146_16:
  bin: '"asm-pr24146.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-pr24146.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-qual-1_12:
  bin: '"asm-qual-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-qual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(const qualifier ignored on asm))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(restrict qualifier ignored on asm))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asm-wide-1_32:
  bin: '"asm-wide-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asm-wide-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output" "output))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output" "output))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output" "output))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_asr_div1_57:
  bin: '"./asr_div1.exe"'
  cargs: -O2 -fdump-rtl-combine-all -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/asr_div1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
      - '"-O2 -fdump-rtl-combine-all -mtune=cortex-a53" { target aarch64*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assign-warn-1_128:
  bin: '"assign-warn-1.s"'
  cargs: ' -pedantic -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/assign-warn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'striaF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'stribFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'struct s' from type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'int' but 'struct s' was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istraF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istrbFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'int' from type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing type 'int' using type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'struct s' but 'int' was expected))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fqaF' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fqbFp.x' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'qaF' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'qbFp.x' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(return discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'fdaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'fdbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'dfaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids passing argument 1 of 'dfbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'suaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'subFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'usaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'usbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'cuaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'cubFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'ucaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'ucbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'csaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'csbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'scaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'scbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ciaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'cibFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'icaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'icbFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ciiaF' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'ciibFp.x' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'iicaF' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'iicbFp.x' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes integer from pointer without a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assign-warn-2_125:
  bin: '"assign-warn-2.s"'
  cargs: ' -pedantic-errors -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/assign-warn-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'fqaF' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'fqbFp.x' makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return makes '__attribute__..noreturn..' qualified function pointer from unqualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'qaF' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'qbFp.x' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'fdaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'fdbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'dfaF' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids passing argument 1 of 'dfbFp.x' between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids initialization between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids return between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'suaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'subFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'usaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'usbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'cuaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'cubFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'ucaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'ucbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'csaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'csbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'scaF' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in passing argument 1 of 'scbFp.x' differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in initialization differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer targets in return differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'ciaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'cibFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'icaF' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'icbFp.x' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'ciiaF' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'ciibFp.x' makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'iicaF' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'iicbFp.x' makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'striaF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'stribFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'struct s' from type 'int'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'int' but 'struct s' was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istraF'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type for argument 1 of 'istrbFp.x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning to type 'int' from type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing type 'int' using type 'struct s'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when returning type 'struct s' but 'int' was expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_assign-warn-3_13:
  bin: '"assign-warn-3.s"'
  cargs: ' -O3 -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/assign-warn-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-1_86:
  bin: '"./atomic-compare-exchange-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-2_86:
  bin: '"./atomic-compare-exchange-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-3_86:
  bin: '"./atomic-compare-exchange-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-compare-exchange-4_88:
  bin: '"./atomic-compare-exchange-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-compare-exchange-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-march=pentium" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-1_68:
  bin: '"./atomic-exchange-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-2_68:
  bin: '"./atomic-exchange-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-3_68:
  bin: '"./atomic-exchange-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-exchange-4_70:
  bin: '"./atomic-exchange-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-exchange-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-march=pentium" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-fence_28:
  bin: '"./atomic-fence.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-fence.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-fetch-bool_64:
  bin: '"atomic-fetch-bool.s"'
  cargs: ' -pedantic-errors -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-fetch-bool.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_fetch_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_add_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_sub_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_xor_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_or_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__atomic_nand_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_fetch_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_add_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_sub_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_xor_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_or_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__atomic_nand_fetch.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-flag_32:
  bin: '"./atomic-flag.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-flag.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-generic-aux_58:
  bin: '"atomic-generic-aux.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-generic-aux.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-generic_58:
  bin: '"./atomic-generic.exe"'
  cargs: ' -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-generic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-invalid-2_59:
  bin: '"atomic-invalid-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-invalid-2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(failure memory model cannot be stronger))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(failure memory model cannot be stronger))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-invalid_36:
  bin: '"atomic-invalid.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-invalid.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-constant argument))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(failure memory model cannot be stronger))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid failure memory))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-1_67:
  bin: '"./atomic-load-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-2_69:
  bin: '"./atomic-load-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-3_66:
  bin: '"./atomic-load-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-load-4_67:
  bin: '"./atomic-load-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-load-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-march=pentium" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-lockfree-aux_17:
  bin: '"atomic-lockfree-aux.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-lockfree-aux.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-lockfree_121:
  bin: '"./atomic-lockfree.exe"'
  cargs: ' -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-lockfree.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-noinline-aux_72:
  bin: '"atomic-noinline-aux.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-noinline-aux.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-noinline_61:
  bin: '"./atomic-noinline.exe"'
  cargs: ' -w -fno-inline-atomics'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-noinline.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -fno-inline-atomics"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-1_555:
  bin: '"./atomic-op-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-2_556:
  bin: '"./atomic-op-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-3_555:
  bin: '"./atomic-op-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-4_557:
  bin: '"./atomic-op-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-march=pentium" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-6_11:
  bin: '"atomic-op-6.s"'
  cargs: ' -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-op-optimize_20:
  bin: '"atomic-op-optimize.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-op-optimize.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-param_14:
  bin: '"atomic-param.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-param.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-pr51256_47:
  bin: '"atomic-pr51256.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-pr51256.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer to a constant size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer to a nonzero size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incorrect number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size mismatch in argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-integer memory model argument))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid memory model argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-1_48:
  bin: '"./atomic-store-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-2_47:
  bin: '"./atomic-store-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-3_48:
  bin: '"./atomic-store-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_atomic-store-4_50:
  bin: '"./atomic-store-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/atomic-store-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-march=pentium" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-1_8:
  bin: '"attr-alias-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-2_20:
  bin: '"attr-alias-2.exe"'
  cargs: ' -funit-at-a-time'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funit-at-a-time"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-3_63:
  bin: '"attr-alias-3.exe"'
  cargs: ' -O2 -fno-common'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-common"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-4_4:
  bin: '"attr-alias-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alias-5_14:
  bin: '"attr-alias-5.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alias-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\241'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U0000ffff'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U000fffff'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U00ffffff'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined symbol '\\\\U0fffffff'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_align-1_39:
  bin: '"attr-alloc_align-1.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_align-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_align-2_10:
  bin: '"attr-alloc_align-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_align-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_align-3_55:
  bin: '"attr-alloc_align-3.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_align-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-10_142:
  bin: '"attr-alloc_size-10.s"'
  cargs: ' -O2 -Walloc-size-larger-than=12 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=12"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-11_69:
  bin: '"attr-alloc_size-11.s"'
  cargs: ' -O2 -Walloc-size-larger-than=12 -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=12 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12" "missing range info for signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12" "missing range info for short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -1\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[13, \[0-9\]+\\\] exceeds maximum object size 12))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-2_4:
  bin: '"attr-alloc_size-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(outside range))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-3_476:
  bin: '"attr-alloc_size-3.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .-\[0-9\]+. is negative" "argument 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative" "argument 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, -\[0-9\]+\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+l*. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1l*. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+l*, -\[0-9\]+l*\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]+l*, 0l*\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-1l*, 0l*\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+" "argument 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: warning:[^
        ]*(product .\[0-9\]+ \\* \[0-9\]+. of arguments 1 and 2 exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: warning:[^
        ]*(product .\[0-9\]+ \\* \[0-9\]+. of arguments 1 and 2 exceeds .SIZE_MAX.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size " "argument 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-4_203:
  bin: '"attr-alloc_size-4.s"'
  cargs: ' -O2 -Wall -Walloc-size-larger-than=1234 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Walloc-size-larger-than=1234"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .1235u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+u?, \[0-9\]+u?\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-\[0-9\]+. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .-1. is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+u?. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-2, -1\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1235, 2345\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1235, \[0-9\]+\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1236, \[0-9\]+\\\] exceeds maximum object size 1234" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]*, -1\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[-\[0-9\]*, 0\\\] is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(product .2 \\* 1234. of arguments 1 and 2 exceeds maximum object size \[0-9\]+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(product .1234 \\* 1234. of arguments 1 and 2 exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .1235. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .1235. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .\[0-9\]+. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .\[0-9\]+. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .1235. exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[1235, 1236\\\] exceeds maximum object size 1234))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size " "argument 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-5_234:
  bin: '"attr-alloc_size-5.s"'
  cargs: ' -O2 -Wall -Walloc-zero -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Walloc-zero"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value is zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value is zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-6_74:
  bin: '"attr-alloc_size-6.s"'
  cargs: ' -O0 -Wall -Walloc-size-larger-than=12345 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wall -Walloc-size-larger-than=12345"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12346\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12347\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12348\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12349\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12346\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12347\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12348\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12349\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-7_73:
  bin: '"attr-alloc_size-7.s"'
  cargs: ' -O2 -Wall -Walloc-size-larger-than=12345 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Walloc-size-larger-than=12345"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12346\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12347\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .12348\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 value .12349\[lu\]*. exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[12346\[lu\]*, \[0-9\]+\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[12347\[lu\]*, \[0-9\]+\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(product .6172\[lu\]* \\* 3\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(product .4\[lu\]* \\* 4115\[lu\]*. of arguments 1 and 2 exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[12348\[lu\]*, 24692\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 range \\\[12349\[lu\]*, 24693\[lu\]*\\\] exceeds maximum object size 12345))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-8_62:
  bin: '"attr-alloc_size-8.s"'
  cargs: ' -O2 -Walloc-size-larger-than=123 -Walloca-larger-than=234 -Wvla-larger-than=345 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=123 -Walloca-larger-than=234 -Wvla-larger-than=345"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to variable-length array is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 value .124\[lu\]*. exceeds maximum object size 123))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size-9_31:
  bin: '"attr-alloc_size-9.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alloc_size_36:
  bin: '"attr-alloc_size.s"'
  cargs: ' -O2 -Wall -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alloc_size.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter outside range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "strcpy))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-alwaysinline_19:
  bin: '"attr-alwaysinline.s"'
  cargs: -O0 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-alwaysinline.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-assume_aligned-1_39:
  bin: '"attr-assume_aligned-1.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-assume_aligned-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-assume_aligned-2_8:
  bin: '"attr-assume_aligned-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-assume_aligned-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments specified))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-assume_aligned-3_23:
  bin: '"attr-assume_aligned-3.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-assume_aligned-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-error-1_12:
  bin: '"attr-error-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-error-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-externally-visible-1_48:
  bin: '"attr-externally-visible-1.s"'
  cargs: -O3 -fwhole-program -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-externally-visible-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fwhole-program"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-externally-visible-2_33:
  bin: '"attr-externally-visible-2.s"'
  cargs: ' -O -fwhole-program -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-externally-visible-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fwhole-program"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(have effect only on public))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(does not apply to types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-hotcold-1_8:
  bin: '"attr-hotcold-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-hotcold-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-invalid_102:
  bin: '"attr-invalid.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-invalid.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(does not apply to types" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(does not apply to types" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute |directive ignored" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-may-alias-1_15:
  bin: '"attr-may-alias-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-may-alias-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-mode-1_13:
  bin: '"attr-mode-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-mode-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-mode-2_22:
  bin: '"attr-mode-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-mode-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-nest_17:
  bin: '"attr-nest.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-nest.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-noinline_68:
  bin: '"attr-noinline.s"'
  cargs: -O2 -finline-functions -fno-ipa-icf -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-noinline.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finline-functions -fno-ipa-icf"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(inline function \[^\n\]* given attribute noinline" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(inline function \[^\n\]* given attribute noinline" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*((inline function \[^\n\]* given attribute noinline|declared inline after its definition)" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(follows declaration with attribute noinline" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(follows inline declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(follows declaration with attribute noinline" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weak-1_4:
  bin: '"attr-weak-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weak-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(inline.*weak))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weak-hidden-1_6:
  bin: '"./attr-weak-hidden-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weak-hidden-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weak-hidden-1a_11:
  bin: '"attr-weak-hidden-1a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weak-hidden-1a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-1_235:
  bin: '"./attr-weakref-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-1a_8:
  bin: '"attr-weakref-1a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-1a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-1b_20:
  bin: '"attr-weakref-1b.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-1b.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-2_7:
  bin: '"attr-weakref-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(weakref 'Wv1a' must have static linkage))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-3_3:
  bin: '"attr-weakref-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-3.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute should be accompanied))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_attr-weakref-4_4:
  bin: '"attr-weakref-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/attr-weakref-4.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored because function is defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored because variable is initialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_auto-type-1_38:
  bin: '"./auto-type-1.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/auto-type-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_auto-type-2_23:
  bin: '"auto-type-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/auto-type-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(plain identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized data declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized data declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(single declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__auto_type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bad-binary-ops_48:
  bin: '"bad-binary-ops.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bad-binary-ops.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary \+))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary \+))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bad-dereference_24:
  bin: '"bad-dereference.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bad-dereference.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type argument of unary ... .have .int..))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type argument of unary ... .have .struct foo..))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-1_25:
  bin: '"bconstp-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-2_27:
  bin: '"bconstp-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-3_27:
  bin: '"bconstp-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bconstp-4_10:
  bin: '"bconstp-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bconstp-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bf-ms-layout-3_52:
  bin: '"./bf-ms-layout-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bf-ms-layout-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-1_312:
  bin: '"binary-constants-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-2_16:
  bin: '"binary-constants-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-3_16:
  bin: '"binary-constants-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binary-constants-4_18:
  bin: '"binary-constants-4.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binary-constants-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix \"p1\" on integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid suffix \"b3011\" on integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid digit \"3\" in binary constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand1_10:
  bin: '"binop-notand1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand1a_12:
  bin: '"binop-notand1a.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand1a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand2_10:
  bin: '"binop-notand2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand2a_10:
  bin: '"binop-notand2a.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand2a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand3_10:
  bin: '"binop-notand3.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand3a_10:
  bin: '"binop-notand3a.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand3a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand4_10:
  bin: '"binop-notand4.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand4a_12:
  bin: '"binop-notand4a.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand4a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand5_10:
  bin: '"binop-notand5.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand5a_10:
  bin: '"binop-notand5a.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand5a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand6_10:
  bin: '"binop-notand6.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notand6a_10:
  bin: '"binop-notand6a.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notand6a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notor1_10:
  bin: '"binop-notor1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notor1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notor2_10:
  bin: '"binop-notor2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notor2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notxor1_10:
  bin: '"binop-notxor1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notxor1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-notxor2_10:
  bin: '"binop-notxor2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-notxor2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor1_10:
  bin: '"binop-xor1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor2_13:
  bin: '"binop-xor2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor3_10:
  bin: '"binop-xor3.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor4_13:
  bin: '"binop-xor4.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_binop-xor5_14:
  bin: '"binop-xor5.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/binop-xor5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-10_8:
  bin: '"bitfld-10.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('sizeof' applied to a bit-field))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-11_8:
  bin: '"bitfld-11.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__alignof' applied to a bit-field))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-12_12:
  bin: '"bitfld-12.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(attempt to take address of bit-field structure member 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot take address of bit-field 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot take address of bit-field 'a'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-13_14:
  bin: '"bitfld-13.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 's' has invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 'p' has invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 'f' has invalid type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-14_11:
  bin: '"bitfld-14.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bit-field 'a' width not an integer constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-15_13:
  bin: '"bitfld-15.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-mno-ms-bitfields -Wno-packed-bitfield-compat" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-16_12:
  bin: '"bitfld-16.s"'
  cargs: ' -Wno-packed-bitfield-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-packed-bitfield-compat"'
      - '"-Wno-packed-bitfield-compat -mno-ms-bitfields" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-17_12:
  bin: '"bitfld-17.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-mno-ms-bitfields -Wno-packed-bitfield-compat" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-18_12:
  bin: '"bitfld-18.s"'
  cargs: ' -Wno-packed-bitfield-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-packed-bitfield-compat"'
      - '"-Wno-packed-bitfield-compat -mno-ms-bitfields" { target { i?86-*-mingw* x86_64-*-mingw* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-19_11:
  bin: '"bitfld-19.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-1_31:
  bin: '"bitfld-1.s"'
  cargs: ' -pedantic -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(negative width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exceeds its type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(narrower))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C" "extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(GCC extension|ISO C))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-20_11:
  bin: '"bitfld-20.s"'
  cargs: ' -O2 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-21_11:
  bin: '"bitfld-21.s"'
  cargs: ' -O2 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-22_18:
  bin: '"bitfld-22.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-22.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:cannot take address of bit-field 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:cannot take address of bit-field 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:cannot take address of bit-field 'x'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-2_23:
  bin: '"bitfld-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(truncated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(truncated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-3_67:
  bin: '"./bitfld-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-4_42:
  bin: '"./bitfld-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-5_12:
  bin: '"bitfld-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-6_16:
  bin: '"bitfld-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-7_8:
  bin: '"bitfld-7.s"'
  cargs: ' -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(9:applied to a bit-field" "typeof))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-8_7:
  bin: '"bitfld-8.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(width" "bit-field too wide))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bitfld-9_119:
  bin: '"./bitfld-9.exe"'
  cargs: ' -funsigned-bitfields -fsigned-char -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bitfld-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsigned-bitfields -fsigned-char -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute directive ignored))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_boolcomplex-1_3:
  bin: '"boolcomplex-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/boolcomplex-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as decrement operand))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_bss_8:
  bin: '"bss.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/bss.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "zero init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "zero init))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-alloc-size_73:
  bin: '"builtin-alloc-size.s"'
  cargs: ' -ansi -pedantic-errors -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-alloc-size.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply1_10:
  bin: '"builtin-apply1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply2_47:
  bin: '"./builtin-apply2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply3_32:
  bin: '"./builtin-apply3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-apply4_32:
  bin: '"./builtin-apply4.exe"'
  cargs: ' -O2 -Wmissing-noreturn -fgnu89-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-apply4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn -fgnu89-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-arith-overflow-1_131:
  bin: '"./builtin-arith-overflow-1.exe"'
  cargs: ' -O2 -fdump-tree-optimized -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-arith-overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-arith-overflow-2_109:
  bin: '"./builtin-arith-overflow-2.exe"'
  cargs: ' -O2 -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-arith-overflow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-assume-aligned-1_40:
  bin: '"builtin-assume-aligned-1.s"'
  cargs: ' -O3 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-assume-aligned-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-assume-aligned-2_18:
  bin: '"builtin-assume-aligned-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-assume-aligned-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-integer argument 3 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-integer argument 3 in call to function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-1_33:
  bin: '"builtin-bswap-1.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-2_20:
  bin: '"./builtin-bswap-2.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-3_20:
  bin: '"./builtin-bswap-3.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-4_75:
  bin: '"./builtin-bswap-4.exe"'
  cargs: ' -Wall'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-5_19:
  bin: '"./builtin-bswap-5.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-6_41:
  bin: '"builtin-bswap-6.s"'
  cargs: -O -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-rtl-combine"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-6a_43:
  bin: '"builtin-bswap-6a.s"'
  cargs: -O2 -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-6a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-7_42:
  bin: '"builtin-bswap-7.s"'
  cargs: -O -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-rtl-combine"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-7a_43:
  bin: '"builtin-bswap-7a.s"'
  cargs: -O2 -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-7a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-8_45:
  bin: '"builtin-bswap-8.s"'
  cargs: -O2 -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
      - '"-O2 -fdump-rtl-combine -march=z900" { target s390-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-bswap-9_45:
  bin: '"builtin-bswap-9.s"'
  cargs: -O2 -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-bswap-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-choose-expr-2_12:
  bin: '"builtin-choose-expr-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-choose-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(first argument to '__builtin_choose_expr' not a constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-choose-expr_90:
  bin: '"./builtin-choose-expr.exe"'
  cargs: ' -O1 -Wall'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-choose-expr.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wall"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex-err-1_26:
  bin: '"builtin-complex-err-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-complex-err-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not of real binary floating-point type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not of real binary floating-point type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(different types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot take address))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-complex-err-2_10:
  bin: '"builtin-complex-err-2.s"'
  cargs: ' -std=c90 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-complex-err-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-constant_p-1_10:
  bin: '"builtin-constant_p-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-constant_p-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-ffs-1_17:
  bin: '"builtin-ffs-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-ffs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-inf-1_13:
  bin: '"builtin-inf-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-inf-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not support infinity" "INF unsupported))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not support infinity" "INF unsupported))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not support infinity" "INF unsupported))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-10_26:
  bin: '"builtin-object-size-10.s"'
  cargs: ' -O2 -fdump-tree-objsz1-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-objsz1-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-11_22:
  bin: '"./builtin-object-size-11.exe"'
  cargs: ' -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-12_19:
  bin: '"./builtin-object-size-12.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-13_351:
  bin: '"./builtin-object-size-13.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-14_28:
  bin: '"./builtin-object-size-14.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-15_27:
  bin: '"./builtin-object-size-15.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-16_205:
  bin: '"./builtin-object-size-16.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(assumed to have one element))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-17_162:
  bin: '"builtin-object-size-17.s"'
  cargs: ' -O0 -fdump-tree-ssa -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fdump-tree-ssa"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(assumed to have one element))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-18_15:
  bin: '"builtin-object-size-18.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-1_441:
  bin: '"./builtin-object-size-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-2_398:
  bin: '"./builtin-object-size-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-3_447:
  bin: '"./builtin-object-size-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-4_408:
  bin: '"./builtin-object-size-4.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-5_56:
  bin: '"builtin-object-size-5.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-6_435:
  bin: '"./builtin-object-size-6.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-7_71:
  bin: '"./builtin-object-size-7.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-8_200:
  bin: '"./builtin-object-size-8.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-object-size-9_31:
  bin: '"./builtin-object-size-9.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-object-size-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-prefetch-1_45:
  bin: '"./builtin-prefetch-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-prefetch-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid second argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid second argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid second argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid third argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid third argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid third argument to '__builtin_prefetch'; using zero))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-protos-1_74:
  bin: '"builtin-protos-1.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-protos-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -Wtraditional-conversion
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(as unsigned due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(as signed due to prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-redefine_79:
  bin: '"builtin-redefine.s"'
  cargs: ' -Wno-builtin-macro-redefined -U__DATE__ -D__TIME__=X -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-redefine.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-builtin-macro-redefined -U__DATE__ -D__TIME__=X"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIME__\" redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__DATE__\" redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__TIMESTAMP__\" redefined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__LINE__\" redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__INCLUDE_LEVEL__\" redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(\"__COUNTER__\" redef))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-return-1_35:
  bin: '"./builtin-return-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-return-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-1_119:
  bin: '"builtin-stringop-chk-1.s"'
  cargs: ' -O2 -Wno-format -std=gnu99 -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-format -std=gnu99 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 bytes into a region of size 1" "memcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 " "mempcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "memmove))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3" "stpcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "strncpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "strncpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "strcat))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 " "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "snprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3" "vsprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 2 of the destination" "vsnprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 " "strcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 3 exceeds the size 1 of the destination" "strncpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 5" "sprintf))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 16 " "memcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 48 " "memset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "stpcpy))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7" "memset))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-2_137:
  bin: '"builtin-stringop-chk-2.s"'
  cargs: ' -O2 -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "memcpy))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-4_525:
  bin: '"builtin-stringop-chk-4.s"'
  cargs: ' -O2 -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 overflows the destination" "excessive pointer offset))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 5 bytes into a region of size 3" "strcat to a non-empty string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: warning:[^
        ]*(writing at least 1 byte into a region of size 0 " "strcpy into empty substring))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: warning:[^
        ]*(writing at least 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: warning:[^
        ]*(writing at least 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 9 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 10 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 11 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 1 byte into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 1 exceeds the size 0 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 1 exceeds the size 0 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 6 exceeds the size 5 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 5 bytes into a region of size 3" "strncat to a non-empty string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 5 equals the size of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound \[0-9\]+ exceeds the size 5 of the destination ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound \[0-9\]+ exceeds maximum object size ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: warning:[^
        ]*(writing \[0-9\]+ bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: warning:[^
        ]*(writing \[0-9\]+ bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 7 and 8 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between \[0-9\]+ and \[0-9\]+ bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 1 and 2 bytes into a region of size 0 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 6 and 7 bytes into a region of size 5 ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: warning:[^
        ]*(specified size between \[0-9\]+ and \[0-9\]+ exceeds maximum object size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-5_260:
  bin: '"builtin-stringop-chk-5.s"'
  cargs: ' -O2 -Wstringop-overflow=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstringop-overflow=1"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 8 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 4 bytes into a region of size 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 bytes into a region of size 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 bytes into a region of size 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 8 and 32 bytes into a region of size 4 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 8 overflows the destination" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 8 bytes into a region of size 7" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 7 bytes into a region of size 6" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 6 bytes into a region of size 5" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 4 bytes into a region of size 3" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 3 bytes into a region of size 2" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 2 bytes into a region of size 1" "memcpy into allocated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 13 and 33 bytes into a region of size 8 overflows the destination))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-6_112:
  bin: '"builtin-stringop-chk-6.s"'
  cargs: ' -O2 -Wstringop-overflow=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstringop-overflow=2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 17 and 29 bytes into a region of size 4 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 17 and 31 bytes into a region of size 8 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(writing between 12 and 32 bytes into a region of size 3 overflows the destination))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-stringop-chk-7_72:
  bin: '"builtin-stringop-chk-7.s"'
  cargs: ' -O2 -Wstringop-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-stringop-chk-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstringop-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-strncat-chk-1_38:
  bin: '"builtin-strncat-chk-1.s"'
  cargs: ' -O2 -std=gnu99 -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-strncat-chk-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99 -ftrack-macro-expansion=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 11 bytes into a region of size 10 overflows the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 11 exceeds the size 10 of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 10 equals the size of the destination))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(specified bound 11 exceeds the size 10 of the destination))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-strstr-1_31:
  bin: '"builtin-strstr-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-strstr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-strstr_8:
  bin: '"builtin-strstr.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-strstr.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-1_17:
  bin: '"builtin-unreachable-1.s"'
  cargs: ' -O2 -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-2_18:
  bin: '"builtin-unreachable-2.s"'
  cargs: -O2 -fdump-tree-optimized -fdump-rtl-cse1 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdump-rtl-cse1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-3_9:
  bin: '"builtin-unreachable-3.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-4_14:
  bin: '"builtin-unreachable-4.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-5_22:
  bin: '"builtin-unreachable-5.s"'
  cargs: ' -O2 -fdump-tree-fab1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtin-unreachable-6_20:
  bin: '"builtin-unreachable-6.s"'
  cargs: ' -O2 -fdump-tree-fab1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtin-unreachable-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-10_55:
  bin: '"builtins-10.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-11_53:
  bin: '"builtins-11.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-12_28:
  bin: '"builtins-12.s"'
  cargs: -ansi -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-13_62:
  bin: '"builtins-13.exe"'
  cargs: ' -ansi'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-14_26:
  bin: '"builtins-14.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-15_17:
  bin: '"builtins-15.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-16_28:
  bin: '"builtins-16.s"'
  cargs: -O -ansi -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-17_29:
  bin: '"builtins-17.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-18_65:
  bin: '"builtins-18.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-19_44:
  bin: '"builtins-19.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-1_212:
  bin: '"builtins-1.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(target format does not support infinity" "inf))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-20_749:
  bin: '"builtins-20.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-21_65:
  bin: '"builtins-21.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-22_12:
  bin: '"builtins-22.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-23_12:
  bin: '"builtins-23.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-24_35:
  bin: '"./builtins-24.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-26_105:
  bin: '"builtins-26.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-26.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-27_47:
  bin: '"builtins-27.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-27.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-28_27:
  bin: '"builtins-28.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-28.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "crealf not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cimagf not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "creal not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cimag not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "creall not lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cimagl not lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-2_227:
  bin: '"builtins-2.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-30_27:
  bin: '"builtins-30.s"'
  cargs: ' -Wall -Wshadow -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-30.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wshadow -fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a built-in|number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(8:shadows a built-in))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(10:argument 'foo' doesn't match built-in prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shadows a built-in|number of arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(18:argument 'foo' doesn't match))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-31_36:
  bin: '"builtins-31.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-31.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-32_58:
  bin: '"./builtins-32.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-32.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-33_65:
  bin: '"builtins-33.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-33.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-34_172:
  bin: '"builtins-34.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-34.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-35_6:
  bin: '"builtins-35.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-35.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-36_79:
  bin: '"builtins-36.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-36.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-37_29:
  bin: '"builtins-37.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-37.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-38_48:
  bin: '"builtins-38.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-38.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-39_48:
  bin: '"builtins-39.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-39.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-40_68:
  bin: '"builtins-40.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-40.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-41_57:
  bin: '"builtins-41.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-41.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-43_57:
  bin: '"builtins-43.s"'
  cargs: ' -O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-gimple -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-43.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-gimple -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-44_57:
  bin: '"builtins-44.s"'
  cargs: ' -O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-44.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-45_56:
  bin: '"builtins-45.s"'
  cargs: ' -O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-45.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-trapping-math -fno-finite-math-only -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-46_142:
  bin: '"builtins-46.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-46.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-47_19:
  bin: '"./builtins-47.exe"'
  cargs: ' -O -ffast-math -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-47.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-48_181:
  bin: '"./builtins-48.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-48.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-49_181:
  bin: '"./builtins-49.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-49.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-50_159:
  bin: '"./builtins-50.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-50.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-51_157:
  bin: '"./builtins-51.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-51.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-52_23:
  bin: '"builtins-52.exe"'
  cargs: ' -O -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-52.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-53_122:
  bin: '"builtins-53.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-53.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-54_146:
  bin: '"builtins-54.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-54.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-55_86:
  bin: '"builtins-55.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-55.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-57_25:
  bin: '"builtins-57.exe"'
  cargs: ' -std=c99 -ffinite-math-only -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-57.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -ffinite-math-only -O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-58_33:
  bin: '"builtins-58.s"'
  cargs: -O -ffast-math -std=c99 -fno-ident -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-58.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -std=c99 -fno-ident"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-59_14:
  bin: '"builtins-59.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-59.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-60_15:
  bin: '"builtins-60.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-60.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-61_32:
  bin: '"builtins-61.s"'
  cargs: ' -O -ffast-math -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-61.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-62_40:
  bin: '"builtins-62.s"'
  cargs: ' -O -ffinite-math-only -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-62.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffinite-math-only -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-63_28:
  bin: '"builtins-63.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-63.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-64_9:
  bin: '"./builtins-64.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-64.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-65_40:
  bin: '"builtins-65.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-65.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-66_11:
  bin: '"builtins-66.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-66.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-67_75:
  bin: '"builtins-67.exe"'
  cargs: ' -ffast-math -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-67.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -lm"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-68_114:
  bin: '"builtins-68.s"'
  cargs: ' -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-68.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to function .__builtin_alloca_with_align. must be a constant integer power of 2 between .8. and ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a constant integer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-6_80:
  bin: '"./builtins-6.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-7_55:
  bin: '"builtins-7.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-85_25:
  bin: '"builtins-85.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-85.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-8_42:
  bin: '"./builtins-8.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-9_103:
  bin: '"builtins-9.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-error_68:
  bin: '"builtins-error.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-error.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-const integer argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_builtins-nonnull_239:
  bin: '"builtins-nonnull.s"'
  cargs: ' -ansi -pedantic-errors -O2 -Wnonnull -ftrack-macro-expansion=0 -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/builtins-nonnull.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 5 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null where non-null expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 5 null where non-null expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-1_41:
  bin: '"c11-align-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(useless))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-2_92:
  bin: '"./c11-align-2.exe"'
  cargs: ' -std=c11 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(useless))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-3_43:
  bin: '"c11-align-3.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large|power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(positive power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(power of 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for typedef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(alignment specified for function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-4_9:
  bin: '"c11-align-4.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(reduce alignment))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-5_28:
  bin: '"c11-align-5.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-align-6_40:
  bin: '"./c11-align-6.exe"'
  cargs: ' -std=c11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-align-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-anon-struct-1_72:
  bin: '"c11-anon-struct-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-anon-struct-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-anon-struct-2_57:
  bin: '"c11-anon-struct-2.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-anon-struct-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has no member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-anon-struct-3_34:
  bin: '"c11-anon-struct-3.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-anon-struct-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration does not declare anything))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-1_267:
  bin: '"c11-atomic-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .i. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-2_165:
  bin: '"c11-atomic-2.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-3_174:
  bin: '"c11-atomic-3.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type|pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to|invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(atomic type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(atomic type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(applied to a qualified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(inappropriate type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may not be qualified))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-atomic-4_92:
  bin: '"c11-atomic-4.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-atomic-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(accessing a member .x. of an atomic union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-complex-1_43:
  bin: '"./c11-complex-1.exe"'
  cargs: ' -std=c11 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-complex-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-float-1_169:
  bin: '"c11-float-1.i"'
  cargs: ' -std=c11 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-float-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-float-2_9:
  bin: '"c11-float-2.i"'
  cargs: ' -std=c11 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-float-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-generic-1_57:
  bin: '"./c11-generic-1.exe"'
  cargs: ' -std=c11 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-generic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-generic-2_27:
  bin: '"c11-generic-2.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-generic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate .*default.* case))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable length type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two compatible types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-generic-3_10:
  bin: '"c11-generic-3.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-generic-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible with any association))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-1_59:
  bin: '"c11-noreturn-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-2_77:
  bin: '"./c11-noreturn-2.exe"'
  cargs: ' -std=c11 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(has a 'return' statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(does return" "second warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-3_11:
  bin: '"c11-noreturn-3.s"'
  cargs: ' -std=c11 -pedantic-errors -fhosted -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors -fhosted"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('main' declared '_Noreturn'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-4_11:
  bin: '"c11-noreturn-4.s"'
  cargs: ' -std=c11 -pedantic-errors -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors -ffreestanding"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-noreturn-5_17:
  bin: '"c11-noreturn-5.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-noreturn-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(typedef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-pointer-float-1_28:
  bin: '"c11-pointer-float-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-pointer-float-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-1_41:
  bin: '"c11-static-assert-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-2_41:
  bin: '"c11-static-assert-2.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert1\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert2\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert3\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert4\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert5\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert6\"))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static assertion failed: \"assert7\"))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-3_28:
  bin: '"c11-static-assert-3.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(loop initial declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-4_13:
  bin: '"c11-static-assert-4.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-5_5:
  bin: '"c11-static-assert-5.s"'
  cargs: ' -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-static-assert-6_5:
  bin: '"c11-static-assert-6.s"'
  cargs: ' -std=c11 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-static-assert-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-stdatomic-1_119:
  bin: '"c11-stdatomic-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-stdatomic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-stdatomic-2_27:
  bin: '"c11-stdatomic-2.i"'
  cargs: ' -std=c11 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-stdatomic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-thread-local-1_28:
  bin: '"c11-thread-local-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-thread-local-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized and))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-thread-local-2_46:
  bin: '"c11-thread-local-2.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-thread-local-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(thread))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static but declared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static but used in inline))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-true_min-1_18:
  bin: '"./c11-true_min-1.exe"'
  cargs: ' -std=c11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-true_min-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-typedef-1_70:
  bin: '"c11-typedef-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-typedef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with different type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-uni-string-1_112:
  bin: '"./c11-uni-string-1.exe"'
  cargs: ' -std=c11 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-uni-string-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-uni-string-2_8:
  bin: '"c11-uni-string-2.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-uni-string-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(concatenation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-version-1_9:
  bin: '"c11-version-1.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-version-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c11-version-2_9:
  bin: '"c11-version-2.s"'
  cargs: ' -std=iso9899:2011 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c11-version-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:2011 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-align-1_6:
  bin: '"c90-align-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-align-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Alignof'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Alignas'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-anon-struct-1_12:
  bin: '"c90-anon-struct-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-anon-struct-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-1_21:
  bin: '"c90-array-lval-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-2_20:
  bin: '"c90-array-lval-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-3_34:
  bin: '"c90-array-lval-3.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|incompatible" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue|invalid" "array not decaying to lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-4_26:
  bin: '"c90-array-lval-4.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-5_26:
  bin: '"c90-array-lval-5.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-6_16:
  bin: '"c90-array-lval-6.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-lvalue" "array not decaying to lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-7_23:
  bin: '"c90-array-lval-7.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "bad conditional))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-lval-8_20:
  bin: '"c90-array-lval-8.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-lval-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-quals-2_3:
  bin: '"c90-array-quals-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-quals-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-array-quals_3:
  bin: '"c90-array-quals.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-array-quals.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-arraydecl-1_30:
  bin: '"c90-arraydecl-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-arraydecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[*\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[*\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[quals\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[quals expr\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[static expr\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[static quals expr\] not in C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "\[quals static expr\] not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-atomic-1_7:
  bin: '"c90-atomic-1.s"'
  cargs: ' -std=c90 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-atomic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-complex-1_7:
  bin: '"c90-complex-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-complex-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(C" "_Complex not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-complit-1_20:
  bin: '"c90-complit-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-complit-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "scalar))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal" "array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-10_30:
  bin: '"c90-const-expr-10.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-11_27:
  bin: '"c90-const-expr-11.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a constant expression|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a constant expression|near initialization))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-1_23:
  bin: '"c90-const-expr-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "increment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "decrement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "function call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial" "comma))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-2_45:
  bin: '"c90-const-expr-2.s"'
  cargs: ' -std=iso9899:1990 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-3_46:
  bin: '"c90-const-expr-3.s"'
  cargs: ' -std=iso9899:1990 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-4_11:
  bin: '"c90-const-expr-4.s"'
  cargs: ' -std=iso9899:1990 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-5_39:
  bin: '"c90-const-expr-5.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(5:assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(6:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(19:ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-6_55:
  bin: '"c90-const-expr-6.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variabl|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab|can't be evaluated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-7_35:
  bin: '"c90-const-expr-7.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-8_28:
  bin: '"c90-const-expr-8.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -fwrapv"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:not an integer constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1:overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(31:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(12:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(13:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(16:integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-const-expr-9_29:
  bin: '"c90-const-expr-9.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-const-expr-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-digraph-1_24:
  bin: '"./c90-digraph-1.exe"'
  cargs: ' -std=iso9899:1990 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-digraph-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-dupqual-1_12:
  bin: '"c90-dupqual-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-dupqual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-enum-comma-1_7:
  bin: '"c90-enum-comma-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-enum-comma-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comma at end" "enum comma error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-flex-array-1_7:
  bin: '"c90-flex-array-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-flex-array-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90" "flexible array members not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-flex-array-2_15:
  bin: '"c90-flex-array-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-flex-array-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-float-1_169:
  bin: '"c90-float-1.i"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-float-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-fordecl-1_14:
  bin: '"c90-fordecl-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-fordecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('for' loop initial declarations are only allowed in C99 or C11 mode" "declaration in for loop))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-func-1_10:
  bin: '"c90-func-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-func-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*( ISO C90 does not support .__func__. predefined identifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-func-2_12:
  bin: '"c90-func-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-func-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-hexfloat-1_11:
  bin: '"c90-hexfloat-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-hexfloat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(hexadecimal floating" "hex float error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(hexadecimal floating" "hex float error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many decimal points" "bad hex float))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-hexfloat-2_24:
  bin: '"./c90-hexfloat-2.exe"'
  cargs: ' -std=iso9899:1990 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-hexfloat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-idem-qual-1_8:
  bin: '"c90-idem-qual-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-idem-qual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-idem-qual-2_7:
  bin: '"c90-idem-qual-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-idem-qual-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-idem-qual-3_11:
  bin: '"c90-idem-qual-3.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-idem-qual-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate" "duplicate type qualifier error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-impl-decl-1_22:
  bin: '"c90-impl-decl-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-impl-decl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-impl-int-1_8:
  bin: '"c90-impl-int-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-impl-int-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-impl-int-2_8:
  bin: '"c90-impl-int-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-impl-int-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-init-1_25:
  bin: '"c90-init-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO (C89|C90) forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO (C89|C90) forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO (C89|C90) forbids specifying subobject to initialize))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((forbids specifying range of elements to initialize)|(ISO (C89|C90) forbids specifying subobject to initialize)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer without))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer with ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not computable at load time))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-intconst-1_763:
  bin: '"c90-intconst-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-intconst-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned" "unsigned decimal no suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned" "unsigned decimal long suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: warning:[^
        ]*(unsigned" "unsigned decimal long suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-intprom-1_47:
  bin: '"c90-intprom-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-intprom-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-left-shift-1_12:
  bin: '"c90-left-shift-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-left-shift-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-left-shift-2_14:
  bin: '"c90-left-shift-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-left-shift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-left-shift-3_14:
  bin: '"c90-left-shift-3.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-left-shift-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-longlong-1_6:
  bin: '"c90-longlong-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-longlong-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(long long" "long long not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-mixdecl-1_13:
  bin: '"c90-mixdecl-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-mixdecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mix|parse" "mixed declarations and code not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-noreturn-1_5:
  bin: '"c90-noreturn-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-noreturn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Noreturn'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-restrict-1_7:
  bin: '"c90-restrict-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-restrict-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected|no type" "restrict not in C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-return-1_17:
  bin: '"c90-return-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-return-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with a value" "return constraint violation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-scope-1_34:
  bin: '"./c90-scope-1.exe"'
  cargs: ' -std=iso9899:1990 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-scope-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-static-1_22:
  bin: '"c90-static-1.s"'
  cargs: ' -O2 -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-static-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-static-assert-1_5:
  bin: '"c90-static-assert-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-static-assert-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support '_Static_assert'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-thread-local-1_5:
  bin: '"c90-thread-local-1.s"'
  cargs: ' -std=c90 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-thread-local-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-typedef-1_6:
  bin: '"c90-typedef-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-typedef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-typespec-1_522:
  bin: '"c90-typespec-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-typespec-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:322:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:362:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:377:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:409:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:428:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:435:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:436:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:440:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:441:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:445:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:455:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:467:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:468:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:472:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:481:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:491:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:499:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:505:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:506:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:509:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:512:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:517:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:522:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c90-vla-1_12:
  bin: '"c90-vla-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c90-vla-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forbids variable length array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-digraph-1_24:
  bin: '"./c94-digraph-1.exe"'
  cargs: ' -std=iso9899:199409 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c94-digraph-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c94-version-1_9:
  bin: '"c94-version-1.s"'
  cargs: ' -std=iso9899:199409 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c94-version-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:199409 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-align-1_6:
  bin: '"c99-align-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-align-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Alignof'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Alignas'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-anon-struct-1_12:
  bin: '"c99-anon-struct-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-anon-struct-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed structs))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-1_17:
  bin: '"c99-array-lval-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-2_18:
  bin: '"c99-array-lval-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-3_24:
  bin: '"c99-array-lval-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-4_24:
  bin: '"c99-array-lval-4.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-5_26:
  bin: '"c99-array-lval-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "bad address-of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-6_15:
  bin: '"c99-array-lval-6.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-7_21:
  bin: '"c99-array-lval-7.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-lval-8_30:
  bin: '"c99-array-lval-8.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-lval-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-array-nonobj-1_27:
  bin: '"c99-array-nonobj-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-array-nonobj-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "\[\]\[\] var))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "\[\]\[\] arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "struct \[\] var))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "struct \[\] arg))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "func \[\] var))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array" "func \[\] arg))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-arraydecl-1_111:
  bin: '"c99-arraydecl-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-arraydecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "discards quals))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-parameter" "quals in non-parm array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-parameter" "static in non-parm array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-parameter" "static in non-final parm array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-arraydecl-2_16:
  bin: '"c99-arraydecl-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-arraydecl-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse|syntax|expected" "bad array declarator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-arraydecl-3_20:
  bin: '"c99-arraydecl-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-arraydecl-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards 'restrict' qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards 'restrict' qualifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-atomic-1_8:
  bin: '"c99-atomic-1.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-atomic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Atomic))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-bool-1_248:
  bin: '"./c99-bool-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-bool-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-bool-2_14:
  bin: '"c99-bool-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-bool-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(width))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-bool-3_33:
  bin: '"./c99-bool-3.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-bool-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complex-1_33:
  bin: '"c99-complex-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complex-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(plain" "plain _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex integer" "_Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex integer" "_Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex conj" "~ for conjugation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complex-2_22:
  bin: '"c99-complex-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complex-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "postinc))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "preinc))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "postdec))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "predec))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complex-3_7:
  bin: '"c99-complex-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complex-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complit-1_112:
  bin: '"./c99-complit-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complit-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-complit-2_70:
  bin: '"c99-complit-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-complit-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "incomplete struct type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "incomplete union type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init|variable" "VLA type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "value outside array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "value outside array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "value outside array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "non-const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "struct bad init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "union bad init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "array bad init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(init" "array bad init))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-condexpr-1_70:
  bin: '"c99-condexpr-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-condexpr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-10_28:
  bin: '"c99-const-expr-10.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-11_46:
  bin: '"c99-const-expr-11.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-12_23:
  bin: '"c99-const-expr-12.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-13_16:
  bin: '"c99-const-expr-13.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -frounding-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -frounding-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-14_35:
  bin: '"c99-const-expr-14.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-1_16:
  bin: '"c99-const-expr-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-2_45:
  bin: '"c99-const-expr-2.s"'
  cargs: ' -std=iso9899:1999 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-3_45:
  bin: '"c99-const-expr-3.s"'
  cargs: ' -std=iso9899:1999 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-4_11:
  bin: '"c99-const-expr-4.s"'
  cargs: ' -std=iso9899:1999 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-5_39:
  bin: '"c99-const-expr-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids assignment between function pointer and 'void \\*'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids comparison of 'void \\*' with function pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-6_62:
  bin: '"c99-const-expr-6.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variabl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variab))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant|near initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-7_43:
  bin: '"c99-const-expr-7.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-8_28:
  bin: '"c99-const-expr-8.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -fwrapv"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1:overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(16:integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-const-expr-9_26:
  bin: '"c99-const-expr-9.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-const-expr-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -ftrack-macro-expansion=0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-digraph-1_24:
  bin: '"./c99-digraph-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-digraph-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-dupqual-1_12:
  bin: '"c99-dupqual-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-dupqual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-enum-comma-1_6:
  bin: '"c99-enum-comma-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-enum-comma-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-1_8:
  bin: '"c99-flex-array-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not at end" "not at end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-2_14:
  bin: '"c99-flex-array-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of flexible array member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-3_47:
  bin: '"c99-flex-array-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "struct in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "struct in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "struct in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure" "recursive union in array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-5_6:
  bin: '"c99-flex-array-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member in union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-6_15:
  bin: '"c99-flex-array-6.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-7_17:
  bin: '"c99-flex-array-7.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-1_9:
  bin: '"c99-flex-array-typedef-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no named members" "members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not at end" "not at end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-2_17:
  bin: '"c99-flex-array-typedef-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of flexible array member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-3_32:
  bin: '"c99-flex-array-typedef-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of structure))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-5_6:
  bin: '"c99-flex-array-typedef-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(flexible array member in union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-7_18:
  bin: '"c99-flex-array-typedef-7.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-flex-array-typedef-8_16:
  bin: '"c99-flex-array-typedef-8.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-flex-array-typedef-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-float-1_169:
  bin: '"c99-float-1.i"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-float-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-fordecl-1_35:
  bin: '"./c99-fordecl-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-fordecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-fordecl-2_28:
  bin: '"c99-fordecl-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-fordecl-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(bar" "function in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(static" "static in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extern" "extern in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(FOO" "enum value in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(FOO" "enum value in for loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(BAR" "enum tag in for loop))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-fordecl-3_15:
  bin: '"c99-fordecl-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-fordecl-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s' declared in 'for' loop initial declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u' declared in 'for' loop initial declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-1_17:
  bin: '"./c99-func-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-2_10:
  bin: '"c99-func-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected" "before string constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-3_16:
  bin: '"./c99-func-3.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-func-4_10:
  bin: '"c99-func-4.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-func-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(discards" "__func__ pointer to const))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-1_6:
  bin: '"c99-hexfloat-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-hexfloat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-2_24:
  bin: '"./c99-hexfloat-2.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-hexfloat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-hexfloat-3_25:
  bin: '"c99-hexfloat-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-hexfloat-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(require an exponent))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(require an exponent))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(require an exponent))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(exponent has no digits))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-idem-qual-1_7:
  bin: '"c99-idem-qual-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-idem-qual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-idem-qual-2_6:
  bin: '"c99-idem-qual-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-idem-qual-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-idem-qual-3_9:
  bin: '"c99-idem-qual-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-idem-qual-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-impl-decl-1_21:
  bin: '"c99-impl-decl-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-impl-decl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit" "C99 implicit declaration error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(implicit" "C99 implicit declaration error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-impl-int-1_9:
  bin: '"c99-impl-int-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-impl-int-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type defaults" "C99 implicit int error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return type defaults" "C99 implicit int error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-impl-int-2_9:
  bin: '"c99-impl-int-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-impl-int-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(defaults" "C99 implicit int parameter error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-1_78:
  bin: '"./c99-init-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-2_30:
  bin: '"c99-init-2.s"'
  cargs: ' -std=iso9899:1999 -Wall -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -Wall -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((array index in non-array)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((field name not in record)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15: has no member named .D.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((is not constant)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((array index in initializer exceeds array bounds)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((array index in initializer exceeds array bounds)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forbids specifying range of elements))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer without))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(use of designated initializer with ))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*((initialized field with side-effects overwritten)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*((initialized field with side-effects overwritten)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*((initialized field with side-effects overwritten)|(near initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-3_8:
  bin: '"c99-init-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer type|near init" "pointer designator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-4_8:
  bin: '"c99-init-4.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-5_9:
  bin: '"c99-init-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-init-6_6:
  bin: '"c99-init-6.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-init-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initial))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-intconst-1_639:
  bin: '"c99-intconst-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-intconst-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-intconst-2_8:
  bin: '"c99-intconst-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-intconst-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant is so large that it is unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer constant is so large that it is unsigned))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-intprom-1_77:
  bin: '"c99-intprom-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-intprom-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-left-shift-1_12:
  bin: '"c99-left-shift-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-left-shift-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-left-shift-2_14:
  bin: '"c99-left-shift-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -Wno-shift-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-left-shift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wno-shift-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-left-shift-3_14:
  bin: '"c99-left-shift-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -Wno-shift-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-left-shift-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wno-shift-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-longlong-1_6:
  bin: '"c99-longlong-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-longlong-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-longlong-2_6:
  bin: '"c99-longlong-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -Wlong-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-longlong-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wlong-long"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-main-1_9:
  bin: '"./c99-main-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -Wreturn-type -O -fhosted'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-main-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -Wreturn-type -O -fhosted"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-mixdecl-1_25:
  bin: '"./c99-mixdecl-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-mixdecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-noreturn-1_5:
  bin: '"c99-noreturn-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-noreturn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Noreturn'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-predef-1_63:
  bin: '"c99-predef-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-predef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-1_19:
  bin: '"c99-restrict-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict" "restrict constraint violation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict" "restrict constraint violation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict" "restrict constraint violation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-2_12:
  bin: '"c99-restrict-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-3_7:
  bin: '"c99-restrict-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-restrict-4_17:
  bin: '"c99-restrict-4.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-restrict-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-return-1_18:
  bin: '"c99-return-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-return-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with no value" "return constraint violation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(with a value" "return constraint violation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scope-1_34:
  bin: '"./c99-scope-1.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-scope-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-scope-2_71:
  bin: '"./c99-scope-2.exe"'
  cargs: ' -std=iso9899:1999 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-scope-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-static-1_35:
  bin: '"c99-static-1.s"'
  cargs: ' -O2 -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-static-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined" "VLA))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-static-assert-1_5:
  bin: '"c99-static-assert-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-static-assert-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C99 does not support '_Static_assert'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-1_270:
  bin: '"c99-stdint-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -fhosted -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -fhosted"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-2_8:
  bin: '"c99-stdint-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors -ffreestanding"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-3_39:
  bin: '"c99-stdint-3.s"'
  cargs: ' -std=iso9899:1999 -fhosted -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -fhosted"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-4_8:
  bin: '"c99-stdint-4.s"'
  cargs: ' -std=iso9899:1999 -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -ffreestanding"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-5_69:
  bin: '"c99-stdint-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-6_74:
  bin: '"c99-stdint-6.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-7_217:
  bin: '"c99-stdint-7.s"'
  cargs: ' -std=iso9899:1999 -fhosted -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -fhosted"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-stdint-8_9:
  bin: '"c99-stdint-8.s"'
  cargs: ' -std=iso9899:1999 -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-stdint-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -ffreestanding"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tag-1_151:
  bin: '"c99-tag-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tag-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward" "enum forward 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward" "enum forward 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward" "enum forward 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(rede" "struct redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(rede" "union redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(rede" "enum redef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong|forward" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong|forward" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wrong" "wrong tag type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tag-2_16:
  bin: '"c99-tag-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tag-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tag-3_59:
  bin: '"c99-tag-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tag-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:empty declaration with type qualifier does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:empty declaration with storage class specifier does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(28:empty declaration with type qualifier does not redeclare tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(29:'u3' defined as wrong kind of tag))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(29:empty declaration with type qualifier does not redeclare tag" "wrong tag empty))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(13:useless type qualifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(15:useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(14:useless type qualifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(14:useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(32:useless type qualifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(30:useless storage class specifier in empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-1_249:
  bin: '"c99-tgmath-1.i"'
  cargs: ' -std=iso9899:1999 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-2_16:
  bin: '"c99-tgmath-2.s"'
  cargs: -std=iso9899:1999 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-3_16:
  bin: '"c99-tgmath-3.s"'
  cargs: -std=iso9899:1999 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-tgmath-4_16:
  bin: '"c99-tgmath-4.s"'
  cargs: -std=iso9899:1999 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-tgmath-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-thread-local-1_5:
  bin: '"c99-thread-local-1.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-thread-local-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Thread_local))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-typedef-1_6:
  bin: '"c99-typedef-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-typedef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-typespec-1_1164:
  bin: '"c99-typespec-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-typespec-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:322:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:362:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:428:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:435:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:436:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:440:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:441:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:455:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex float _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:467:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:468:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:472:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:481:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:491:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:499:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:505:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:506:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:509:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:512:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:517:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:522:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:523:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:525:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:526:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:527:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:528:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:529:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:530:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:531:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:532:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:533:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:534:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:535:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:536:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:537:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:538:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:539:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:540:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:541:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:542:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:543:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:547:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:548:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:549:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:550:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:551:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:552:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:554:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:555:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:556:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:557:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:558:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:559:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:560:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:561:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:562:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:563:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:565:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:566:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:567:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:568:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:569:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:570:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:571:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:572:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:573:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:574:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:575:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:576:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:577:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:579:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:580:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:582:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:583:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:584:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:585:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:587:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:588:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:590:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:591:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:592:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:593:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:594:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:595:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:596:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:597:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:598:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:599:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:600:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:601:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:603:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:604:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:605:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:606:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:607:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:609:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:611:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:613:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:614:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:615:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:616:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:617:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:618:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:619:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:621:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:624:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:625:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:626:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:627:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:629:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:631:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:632:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:634:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:635:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:636:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:637:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:638:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:639:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:640:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:642:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:643:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:644:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:645:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:646:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:647:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:648:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:649:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:650:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:651:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:652:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:653:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:657:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:658:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:659:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:660:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:661:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:663:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:664:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:665:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:666:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:667:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:668:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:669:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:671:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:672:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:674:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:675:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:676:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:677:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:678:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:679:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:680:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:681:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:682:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:683:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:684:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:685:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:686:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:687:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:688:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:689:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:690:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:691:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:692:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:693:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:694:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:695:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:697:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:698:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:699:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:700:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:701:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:702:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:703:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:704:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:705:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:707:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:708:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:709:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:710:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:711:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:713:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:714:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:715:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:716:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:717:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:719:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:720:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:721:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:722:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:723:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:724:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:725:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:726:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:727:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:729:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:730:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:731:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:732:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:733:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:734:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:735:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:736:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:737:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:738:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:739:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:740:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:741:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:742:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:743:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:744:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:745:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Complex double _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:747:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:748:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:750:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:752:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:753:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:754:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:755:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:756:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:757:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Complex _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:758:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:760:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:761:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:762:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:763:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:765:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:766:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:767:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:768:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Complex long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:769:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:770:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:771:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:772:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:773:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:774:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:775:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:776:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:777:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:778:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:779:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:780:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:781:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:782:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:783:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:784:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:785:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:786:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:787:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:788:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:789:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:790:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:791:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:792:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:793:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:794:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:796:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:797:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:799:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:800:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:802:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:803:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:804:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:805:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:807:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:808:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:810:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:812:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:813:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:814:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:815:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:817:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:818:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:820:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:821:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:823:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:824:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:825:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:826:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:827:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:828:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:829:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:830:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:831:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:832:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:833:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:834:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:835:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:836:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:837:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:838:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:839:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:840:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:841:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:842:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:843:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:844:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:845:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:846:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:847:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:848:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:849:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:851:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:852:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:853:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:854:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:855:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:856:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:857:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:858:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:859:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:860:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:862:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:863:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:864:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:865:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:866:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:867:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:868:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:869:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:870:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:872:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:873:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:874:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:875:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:876:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:877:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:878:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:879:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:880:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:881:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:882:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:883:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:884:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:885:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:886:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:887:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:888:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:889:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex long double _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:890:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:891:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:892:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:893:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:894:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:895:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:896:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:897:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:898:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:899:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:900:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Complex double long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:901:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:902:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:903:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:904:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:905:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:906:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:907:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:908:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:909:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:910:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:911:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:912:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:913:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:914:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:915:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:916:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:917:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:918:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:919:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:920:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:921:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:922:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:923:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:924:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:925:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:926:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:927:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:928:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:929:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:930:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:931:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:932:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:933:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:934:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:935:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:936:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:937:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:938:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:939:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:940:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:941:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:942:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:943:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:944:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:945:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:946:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:947:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:948:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:949:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:950:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:951:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:952:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:953:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:954:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:955:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:956:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:957:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:958:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:959:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:960:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:961:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:962:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:963:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:964:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:965:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:966:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:967:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:968:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:969:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:970:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:971:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:972:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:973:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:974:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:975:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:976:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:977:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:978:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:979:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:980:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:981:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:982:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:983:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:984:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:985:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:986:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:987:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:988:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:989:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:990:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:991:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:992:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:993:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:994:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:995:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:996:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:997:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:998:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:999:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1000:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1001:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1002:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1003:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1004:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1005:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1006:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1007:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1008:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1009:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1010:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1011:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1012:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1013:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1014:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1015:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1016:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1017:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1018:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1019:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1020:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1021:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1022:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1023:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1024:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1025:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1026:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1027:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1028:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1029:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1030:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1031:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1032:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1033:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1034:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1035:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1036:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1037:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1038:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1039:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1040:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1041:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1042:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1043:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1044:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1045:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1046:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1047:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1048:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1049:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1050:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1051:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1052:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1053:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1054:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1055:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1056:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1057:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1058:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1059:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1060:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1061:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1062:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1063:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1064:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1065:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1066:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1067:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1068:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1069:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1070:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1071:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1072:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1073:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1074:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1075:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1076:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1077:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1078:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1079:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1080:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1081:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1082:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1083:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1084:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1085:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1086:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1087:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1088:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1089:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1090:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1091:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1092:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1093:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1094:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1095:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1096:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1097:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1098:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1099:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Complex))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-version-1_9:
  bin: '"c99-version-1.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-version-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-1_13:
  bin: '"c99-vla-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-2_107:
  bin: '"c99-vla-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-1_309:
  bin: '"c99-vla-jump-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-2_309:
  bin: '"c99-vla-jump-2.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-3_309:
  bin: '"c99-vla-jump-3.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-4_309:
  bin: '"c99-vla-jump-4.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_c99-vla-jump-5_34:
  bin: '"c99-vla-jump-5.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/c99-vla-jump-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into scope of identifier with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into scope of identifier with variably modified type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(statement will never be executed))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_call-diag-1_9:
  bin: '"call-diag-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/call-diag-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_call-diag-2_15:
  bin: '"call-diag-2.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/call-diag-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualified void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(qualified void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type" "cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type" "cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-bogus-1_8:
  bin: '"case-bogus-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-bogus-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:case label does not reduce to an integer constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-const-1_15:
  bin: '"case-const-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-const-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-const-2_15:
  bin: '"case-const-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-const-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(case label is not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_case-const-3_15:
  bin: '"case-const-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/case-const-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label is not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-1_41:
  bin: '"cast-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used struct type value where scalar is required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used union type value where scalar is required))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-2_41:
  bin: '"cast-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used struct type value where scalar is required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used union type value where scalar is required))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids casts to union type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-3_41:
  bin: '"cast-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies array type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast specifies function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids casting nonscalar to the same type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conversion to non-scalar type requested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids casts to union type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cast to union type from type not present in union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where an integer was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a complex was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot convert to a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used struct type value where scalar is required))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used union type value where scalar is required))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-4_13:
  bin: '"cast-4.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(cast from pointer to integer of different size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-function-1_49:
  bin: '"cast-function-1.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-function-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(8:non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(non-compatible|abort))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(non-compatible|abort))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-lvalue-1_13:
  bin: '"cast-lvalue-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-lvalue-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cast as lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-lvalue-2_13:
  bin: '"cast-lvalue-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-lvalue-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "cast as lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-pretty-print-1_12:
  bin: '"cast-pretty-print-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-pretty-print-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object '\\(unsigned int\\)i' is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object '\\(char\\)i' is not a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-qual-1_30:
  bin: '"cast-qual-1.s"'
  cargs: ' -Wcast-qual -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-qual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wcast-qual"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(cast discards" "discarding `const' warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards" "discarding `const' warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-qual-2_34:
  bin: '"cast-qual-2.s"'
  cargs: ' -Wcast-qual -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-qual-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wcast-qual"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(makes '__attribute__..const..' qualified function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(adds '__attribute__..const..' qualifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(makes '__attribute__..noreturn..' qualified function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(adds '__attribute__..noreturn..' qualifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cast-qual-3_11:
  bin: '"cast-qual-3.s"'
  cargs: ' -Wcast-qual -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cast-qual-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wcast-qual"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(cast discards .volatile. qualifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cdce1_80:
  bin: '"./cdce1.exe"'
  cargs: ' -O2 -fmath-errno -fdump-tree-cdce-details  -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cdce1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmath-errno -fdump-tree-cdce-details  -lm"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cdce2_54:
  bin: '"./cdce2.exe"'
  cargs: ' -O2 -fmath-errno -fdump-tree-cdce-details  -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cdce2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmath-errno -fdump-tree-cdce-details  -lm"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_char-compare_23:
  bin: '"./char-compare.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/char-compare.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-10_116:
  bin: '"./cleanup-10.exe"'
  cargs: ' -fexceptions -fnon-call-exceptions -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-11_116:
  bin: '"./cleanup-11.exe"'
  cargs: ' -fexceptions -fnon-call-exceptions -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-12_70:
  bin: '"./cleanup-12.exe"'
  cargs: ' -O2 -fexceptions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-13_333:
  bin: '"./cleanup-13.exe"'
  cargs: ' -fexceptions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-1_36:
  bin: '"cleanup-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an identifier))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-2_22:
  bin: '"./cleanup-2.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-3_45:
  bin: '"./cleanup-3.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-4_39:
  bin: '"./cleanup-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-5_54:
  bin: '"./cleanup-5.exe"'
  cargs: ' -fexceptions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-6_14:
  bin: '"cleanup-6.s"'
  cargs: -O -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-7_22:
  bin: '"./cleanup-7.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-8_99:
  bin: '"./cleanup-8.exe"'
  cargs: ' -fexceptions -fnon-call-exceptions -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cleanup-9_103:
  bin: '"./cleanup-9.exe"'
  cargs: ' -fexceptions -fnon-call-exceptions -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cleanup-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions -fnon-call-exceptions -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine-clobber_21:
  bin: '"combine-clobber.s"'
  cargs: -O2 -fdump-rtl-combine-all -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine-clobber.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine-subregs_36:
  bin: '"./combine-subregs.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine-subregs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_combine_ashiftrt_1_20:
  bin: '"combine_ashiftrt_1.s"'
  cargs: -O2 -fdump-rtl-combine-all -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/combine_ashiftrt_1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-combine-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-1_15:
  bin: '"comp-goto-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-2_15:
  bin: '"comp-goto-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(taking the address of a label is non-standard))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids 'goto \\*expr;'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-3_13:
  bin: '"comp-goto-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking the address of a label is non-standard))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids 'goto \\*expr;'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-goto-4_21:
  bin: '"comp-goto-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-goto-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_comp-return-1_31:
  bin: '"comp-return-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/comp-return-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible" "f4))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare10_16:
  bin: '"compare10.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare1_41:
  bin: '"compare1.s"'
  cargs: ' -fno-short-enums -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-short-enums -Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 4))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare2_58:
  bin: '"compare2.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 6))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 14))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "case 16))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conditional expression" "case 20))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(conditional expression" "case 24))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare3_59:
  bin: '"compare3.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare4_49:
  bin: '"compare4.s"'
  cargs: ' -fshow-column -Wsign-compare -fstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -Wsign-compare -fstrict-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(9:signed and unsigned" "COMPOUND_EXPR))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(9:signed and unsigned" "MODIFY_EXPR))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare5_41:
  bin: '"compare5.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "DIV_EXPR))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(signed and unsigned" "MOD_EXPR))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare6_13:
  bin: '"compare6.s"'
  cargs: ' -Wtype-limits -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(always false" "signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(always false" "unsigned))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare7_10:
  bin: '"compare7.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare8_21:
  bin: '"compare8.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compare9_41:
  bin: '"compare9.s"'
  cargs: ' -fshort-enums -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compare9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums -Wsign-compare"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complete-port_96:
  bin: '"complete-port.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complete-port.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-1_31:
  bin: '"./complex-1.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-2_7:
  bin: '"complex-2.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-3_25:
  bin: '"./complex-3.exe"'
  cargs: ' -O -fno-tree-sra'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-sra"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-4_7:
  bin: '"complex-4.s"'
  cargs: ' -O -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_complex-5_55:
  bin: '"./complex-5.exe"'
  cargs: ' -std=c99 -O -ffloat-store -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/complex-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O -ffloat-store -lm"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compound-literal-1_9:
  bin: '"compound-literal-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compound-literal-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_compound-lvalue-1_13:
  bin: '"compound-lvalue-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/compound-lvalue-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "compound expression as lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_concat2_16:
  bin: '"concat2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/concat2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_concat_17:
  bin: '"concat.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/concat.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid|array)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid|array)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((parse|syntax|expected|invalid)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cond-constqual-1_15:
  bin: '"cond-constqual-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cond-constqual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only variable" "conditional expression with const variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cond-lvalue-1_13:
  bin: '"cond-lvalue-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cond-lvalue-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue" "conditional expression as lvalue))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-1_57:
  bin: '"const-1.s"'
  cargs: ' -O2 -Wsuggest-attribute=const -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wsuggest-attribute=const"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(const" "detect const candidate" { target *-*-* } "8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(const" "detect const candidate" { target *-*-* } "16))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(const\[^\n\]* normally" "detect const candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(const\[^\n\]* normally" "detect const candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(const" "detect const candidate" { target *-*-* } "54))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-elim-1_48:
  bin: '"const-elim-1.s"'
  cargs: -O2 -std=c99 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-elim-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-elim-2_10:
  bin: '"const-elim-2.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-elim-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float128-ped_7:
  bin: '"const-float128-ped.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float128-ped.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(non-standard suffix on floating constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float128_8:
  bin: '"const-float128.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float128.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float80-ped_5:
  bin: '"const-float80-ped.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float80-ped.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(non-standard suffix on floating constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-float80_6:
  bin: '"const-float80.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-float80.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_const-uniq-1_23:
  bin: '"const-uniq-1.s"'
  cargs: ' -Os -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/const-uniq-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_constructor-1_38:
  bin: '"./constructor-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/constructor-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_conv-1_11:
  bin: '"conv-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/conv-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_conv-2_26:
  bin: '"conv-2.s"'
  cargs: ' -Wpointer-sign -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/conv-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-sign"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*( differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*( differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*( pointer targets in assignment differ in signedness))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_conv-3_18:
  bin: '"./conv-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/conv-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cr-decimal-dig-1_14:
  bin: '"cr-decimal-dig-1.s"'
  cargs: ' -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cr-decimal-dig-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ctor1_10:
  bin: '"ctor1.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ctor1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cwsc0_16:
  bin: '"cwsc0.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cwsc0.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a call))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_cwsc1_46:
  bin: '"./cwsc1.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/cwsc1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-10_13:
  bin: '"decl-10.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-10.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(4:unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:unknown type name))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-1_29:
  bin: '"decl-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-2_16:
  bin: '"decl-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-3_5:
  bin: '"decl-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types|redeclaration of enumerator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-4_10:
  bin: '"decl-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of parameter" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of parameter" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-5_20:
  bin: '"decl-5.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-6_15:
  bin: '"decl-6.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-6.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-7_6:
  bin: '"decl-7.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(array 'a' assumed to have one element))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-8_10:
  bin: '"decl-8.s"'
  cargs: ' -std=gnu89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of typedef 'I'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'I1'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-9_32:
  bin: '"decl-9.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'w'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'y'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'g'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'g'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a label can only be part of a statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'd'" "unknown type name))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-global-ext_13:
  bin: '"decl-global-ext.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-global-ext.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-nospec-1_8:
  bin: '"decl-nospec-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-nospec-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(data definition has no type or storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-nospec-2_8:
  bin: '"decl-nospec-2.s"'
  cargs: ' -std=gnu89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-nospec-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(data definition has no type or storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_decl-nospec-3_8:
  bin: '"decl-nospec-3.s"'
  cargs: ' -std=gnu89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/decl-nospec-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(data definition has no type or storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declare-simd_14:
  bin: '"declare-simd.s"'
  cargs: ' -O3 -fopenmp-simd -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declare-simd.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fopenmp-simd"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-10_47:
  bin: '"declspec-10.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'x' specifies 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'x' declared 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'a' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'b' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'c' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r1' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class for function 'f8'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(function definition declared 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(file-scope declaration of 'y' specifies 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids nested functions" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(file-scope declaration of 'f8' specifies 'register'" "register function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids nested functions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(function definition declared 'auto'" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-11_47:
  bin: '"declspec-11.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'x' specifies 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'y' specifies 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'x' declared 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids nested functions" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'a' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'b' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'c' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r1' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class for function 'f8'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'f8' specifies 'register'" "register function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids nested functions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'auto'" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-12_6:
  bin: '"declspec-12.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type qualifier in empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-13_96:
  bin: '"declspec-13.s"'
  cargs: ' -std=gnu89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long long' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'unsigned' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'unsigned' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and 'void' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'complex' and '_Bool' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'char' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'float' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long long' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'short' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'double' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'unsigned' and 'double' in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support complex integer types" "ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support 'long long'" "C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-14_11:
  bin: '"declspec-14.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-15_12:
  bin: '"declspec-15.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-16_12:
  bin: '"declspec-16.s"'
  cargs: ' -std=gnu89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-17_12:
  bin: '"declspec-17.s"'
  cargs: ' -std=gnu89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-18_100:
  bin: '"declspec-18.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('z' redeclared " "redeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't3'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't4'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't5'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't6'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't7'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't8'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't10'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't11'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't12'" "t12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't13'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't14'" "t14))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't15'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't16'" "t16))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't17'" "t17))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't18'" "t18))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't19'" "t19))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't20'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't21'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't22'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 't23'" "t23))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-1_29:
  bin: '"declspec-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x0' isn't known" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x1' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x4' isn't known" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x5' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(long long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-2_14:
  bin: '"declspec-2.s"'
  cargs: ' -std=gnu89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(duplicate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-3-Wextra_32:
  bin: '"declspec-3-Wextra.s"'
  cargs: ' -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-3-Wextra.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-3-no_32:
  bin: '"declspec-3-no.s"'
  cargs: ' -Wextra -Wno-old-style-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-3-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-old-style-declaration"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-3_34:
  bin: '"declspec-3.s"'
  cargs: ' -Wold-style-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wold-style-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(not at beginning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-4_43:
  bin: '"declspec-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration" "static const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "char union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "double enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "T struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-5_45:
  bin: '"declspec-5.s"'
  cargs: ' -std=gnu89 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids forward references))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration" "static const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "char union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "double enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "T struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "ISO C))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-6_45:
  bin: '"declspec-6.s"'
  cargs: ' -std=gnu89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward references))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "static const))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unnamed struct/union that defines no instances))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "char union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "double enum))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "T struct))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(useless type name in empty declaration" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 does not support complex types" "C90))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not support plain 'complex' meaning 'double complex'" "ISO C))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-7_39:
  bin: '"declspec-7.s"'
  cargs: ' -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'static'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple storage classes in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple storage classes in declaration specifiers))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-8_32:
  bin: '"declspec-8.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate 'static'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple storage classes in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('inline' in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('auto' in file-scope empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('register' in file-scope empty declaration))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration" "static static))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration" "static extern))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(useless storage class specifier in empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_declspec-9_43:
  bin: '"declspec-9.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/declspec-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'register'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function definition declared 'typedef'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for unnamed parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(file-scope declaration of 'x' specifies 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified for 'y'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'x' declared 'extern'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'a' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'b' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'c' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable or field 'r1' declared void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class for function 'f8'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(function definition declared 'auto'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_delay-slot-1_59:
  bin: '"delay-slot-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/delay-slot-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mabi=64" { target { mips*-*-linux* && mips64 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_delay-slot-2_117:
  bin: '"delay-slot-2.s"'
  cargs: -g -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/delay-slot-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-2_7:
  bin: '"deprecated-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-3_11:
  bin: '"deprecated-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('func' is deprecated))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-4_88:
  bin: '"deprecated-4.s"'
  cargs: ' -Wdeprecated-declarations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wdeprecated-declarations"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated: Please avoid INT2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated: Please avoid INT2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated: Please avoid INT2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*('Color' is deprecated: Please avoid Color" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated: Please avoid f1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is deprecated: Avoid x" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*('y' is deprecated: Bad y" "y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*('g2' is deprecated: Please avoid g2" "g2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*('g3' is deprecated: Please avoid g3" "g3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated: Please avoid f1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*('field2' is deprecated: Please avoid field2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*('field4' is deprecated: Please avoid field4" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*('u2' is deprecated: Please avoid u2" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*('field6' is deprecated: Please avoid field6" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*('field8' is deprecated: Please avoid field8" "field8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*('SS1' is deprecated: Please avoid SS1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated: Please avoid INT1" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*('SS2' is deprecated: Please avoid SS2" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-5_7:
  bin: '"deprecated-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(type is deprecated: Do not use))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated-6_11:
  bin: '"deprecated-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('func' is deprecated: Do not use))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_deprecated_117:
  bin: '"deprecated.s"'
  cargs: ' -Wdeprecated-declarations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/deprecated.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wdeprecated-declarations"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*('INT2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*('Color' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*('y' is deprecated" "y))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*('g2' is deprecated" "g2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*('g3' is deprecated" "g3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*('f1' is deprecated" "f1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*('field2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*('field4' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*('u2' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*('field6' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*('field8' is deprecated" "field8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*('SS1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*('INT1' is deprecated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*('SS2' is deprecated" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dg-test-1_42:
  bin: '"dg-test-1.s"'
  cargs: ' -Wunused-parameter -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dg-test-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-parameter"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('a' undeclared" "err1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('b' undeclared" "err2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('c' undeclared" "err3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('d' undeclared" "err4))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'e'" "warn1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'f'" "warn2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'g'" "warn3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'h'" "warn4))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'i'" "warn5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter 'j'" "warn6))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_di-longlong64-sync-1_166:
  bin: '"./di-longlong64-sync-1.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/di-longlong64-sync-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_di-sync-multithread_213:
  bin: '"./di-sync-multithread.exe"'
  cargs: ' -pthread -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/di-sync-multithread.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pthread -std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diag-aka-1_29:
  bin: '"diag-aka-1.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diag-aka-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of .sizeof. to incomplete type .int \\(\\*\\\[\\\]\\)\\\[\\\].))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion from .void \\*. to .T \\* {aka struct T \\*}. not))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-range-bad-called-object_24:
  bin: '"diagnostic-range-bad-called-object.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-range-bad-called-object.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object is not a function or function pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object 'argP' is not a function or function pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-range-bad-return_52:
  bin: '"diagnostic-range-bad-return.s"'
  cargs: ' -fdiagnostics-show-caret -Wreturn-local-addr -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-range-bad-return.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -Wreturn-local-addr"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(function returns address of local variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with a value, in function returning void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with a value, in function returning void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with no value, in function returning non-void))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-range-static-assert_24:
  bin: '"diagnostic-range-static-assert.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-range-static-assert.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression in static assertion is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression in static assertion is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression in static assertion is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-ranges-1_11:
  bin: '"diagnostic-ranges-1.s"'
  cargs: ' -fdiagnostics-show-caret -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-ranges-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(unused variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-token-ranges_123:
  bin: '"diagnostic-token-ranges.s"'
  cargs: ' -fdiagnostics-show-caret -Wc++-compat -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-token-ranges.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -Wc++-compat -std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('name' undeclared .first use in this function.; did you mean .nanl.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'foo'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'qux'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C requires a named argument before '...'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'unknown_type'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(wide string literal in 'asm'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement not within loop or switch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement not within a loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('long long long' is too long for GCC))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'long' and 'short' in declaration specifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(both 'signed' and 'unsigned' in declaration specifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(identifier 'new' conflicts with))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_diagnostic-tree-expr-ranges-2_23:
  bin: '"diagnostic-tree-expr-ranges-2.s"'
  cargs: ' -Wuninitialized -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/diagnostic-tree-expr-ranges-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_div-compare-1_21:
  bin: '"./div-compare-1.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/div-compare-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_div-double-1_18:
  bin: '"./div-double-1.exe"'
  cargs: ' -O2 -ffinite-math-only'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/div-double-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffinite-math-only"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divbyzero_21:
  bin: '"divbyzero.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divbyzero.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-1-simode_25:
  bin: '"divmod-1-simode.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-1-simode.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-1_32:
  bin: '"divmod-1.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-2-simode_25:
  bin: '"divmod-2-simode.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-2-simode.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-2_32:
  bin: '"divmod-2.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-3-simode_23:
  bin: '"divmod-3-simode.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-3-simode.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-3_30:
  bin: '"divmod-3.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-4-simode_23:
  bin: '"divmod-4-simode.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-4-simode.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-4_30:
  bin: '"divmod-4.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-5_19:
  bin: '"divmod-5.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-6-simode_26:
  bin: '"divmod-6-simode.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-6-simode.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-6_33:
  bin: '"divmod-6.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_divmod-7_21:
  bin: '"divmod-7.s"'
  cargs: ' -O2 -fdump-tree-widening_mul-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/divmod-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-10a_21:
  bin: '"dll-10a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-10a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-11a_21:
  bin: '"dll-11a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-11a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-12a_21:
  bin: '"dll-12a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-12a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-6a_21:
  bin: '"dll-6a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-6a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-7a_21:
  bin: '"dll-7a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-7a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dll-9a_21:
  bin: '"dll-9a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dll-9a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_do-empty_15:
  bin: '"do-empty.s"'
  cargs: ' -Wempty-body -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/do-empty.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wempty-body"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty body in))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dollar_9:
  bin: '"dollar.s"'
  cargs: ' -fno-dollars-in-identifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dollar.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - -fno-dollars-in-identifiers
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:stray '\\$'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_doloop-2_19:
  bin: '"./doloop-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/doloop-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-1_16:
  bin: '"dremf-type-compat-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-2_18:
  bin: '"dremf-type-compat-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-3_18:
  bin: '"dremf-type-compat-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dremf-type-compat-4_13:
  bin: '"dremf-type-compat-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dremf-type-compat-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(conflicting types for built-in function 'dremf'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dse_31:
  bin: '"dse.s"'
  cargs: ' -O2 -fdump-tree-dse1-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dse.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-dse1-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-1_50:
  bin: '"./duff-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-2_60:
  bin: '"./duff-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-3_47:
  bin: '"./duff-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_duff-4_60:
  bin: '"./duff-4.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/duff-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dump-pass_14:
  bin: '"dump-pass.s"'
  cargs: ' -O2 -fdump-passes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dump-pass.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-passes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_dx-test_5:
  bin: '"dx-test.s"'
  cargs: ' -dx -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/dx-test.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-dx"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-source-1_5:
  bin: '"empty-source-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty-source-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-source-2_6:
  bin: '"empty-source-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty-source-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids an empty translation unit" "empty))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty-source-3_7:
  bin: '"empty-source-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty-source-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids an empty translation unit" "empty))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty1_11:
  bin: '"./empty1.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_empty2_15:
  bin: '"empty2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/empty2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-compat-1_32:
  bin: '"enum-compat-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-compat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype" "error at decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types" "error at second decl))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible" "incompatible pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-const-1_8:
  bin: '"enum-const-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-const-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-const-2_8:
  bin: '"enum-const-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-const-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-const-3_8:
  bin: '"enum-const-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-const-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-1_86:
  bin: '"enum-incomplete-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-2_41:
  bin: '"enum-incomplete-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-3_20:
  bin: '"enum-incomplete-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of unnamed array has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of unnamed array has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array .a1. has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array .a2. has incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array .a3. has incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-incomplete-4_11:
  bin: '"enum-incomplete-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-incomplete-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-mode-1_10:
  bin: '"enum-mode-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-mode-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(specified mode too small for enumeral values" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum-mode-2_22:
  bin: '"enum-mode-2.s"'
  cargs: ' -ansi -pedantic-errors -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum-mode-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum1_23:
  bin: '"./enum1.exe"'
  cargs: ' -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum2_8:
  bin: '"enum2.s"'
  cargs: ' -fshort-enums -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_enum3_11:
  bin: '"enum3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/enum3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E1' is not an integer constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_errno-1_21:
  bin: '"errno-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/errno-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ext-elim-1_39:
  bin: '"./ext-elim-1.exe"'
  cargs: ' -O -free -fno-rename-registers -ftree-vectorize -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ext-elim-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -free -fno-rename-registers -ftree-vectorize -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extra-semi-1_7:
  bin: '"extra-semi-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/extra-semi-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extra-semi-2_7:
  bin: '"extra-semi-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/extra-semi-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C does not allow extra ';' outside of a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_extra-semi-3_7:
  bin: '"extra-semi-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/extra-semi-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C does not allow extra ';' outside of a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fail_always_inline2_19:
  bin: '"fail_always_inline2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fail_always_inline2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fail_always_inline_12:
  bin: '"fail_always_inline.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fail_always_inline.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(function might not be inlinable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_falign-labels-1_39:
  bin: '"./falign-labels-1.exe"'
  cargs: ' -falign-labels=8'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/falign-labels-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-falign-labels=8"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fastmath-1_27:
  bin: '"./fastmath-1.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fastmath-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fdata-sections-1_9:
  bin: '"fdata-sections-1.s"'
  cargs: -fdata-sections -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fdata-sections-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdata-sections"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fdata-sections-2_18:
  bin: '"fdata-sections-2.s"'
  cargs: -O -ffunction-sections -fdata-sections -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fdata-sections-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffunction-sections -fdata-sections"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fixits_41:
  bin: '"fixits.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fixits.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('ptr' is a pointer; did you mean to use '->'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('ptr' is a pointer; did you mean to use '->'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(request for member 'x' in something not a structure or union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fixuns-trunc-1_31:
  bin: '"./fixuns-trunc-1.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fixuns-trunc-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-exact-1_3178:
  bin: '"./float-exact-1.exe"'
  cargs: ' -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-exact-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-1_15:
  bin: '"float-range-1.s"'
  cargs: ' -ansi -pedantic-errors -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -pedantic-errors -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range of 'float'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range of 'double'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range of 'long double'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-3_43:
  bin: '"float-range-3.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-4_43:
  bin: '"float-range-4.s"'
  cargs: ' -Wno-overflow -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-overflow -std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float-range-5_44:
  bin: '"float-range-5.s"'
  cargs: ' -pedantic-errors -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float-range-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant exceeds range))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(floating constant truncated to zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float128-align_9:
  bin: '"float128-align.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float128-align.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float128-typeof_9:
  bin: '"float128-typeof.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float128-typeof.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32-align_9:
  bin: '"float32-align.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32-align.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32-typeof_9:
  bin: '"float32-typeof.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32-typeof.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32x-align_9:
  bin: '"float32x-align.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32x-align.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float32x-typeof_9:
  bin: '"float32x-typeof.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float32x-typeof.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64-align_9:
  bin: '"float64-align.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64-align.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64-typeof_9:
  bin: '"float64-typeof.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64-typeof.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64x-align_9:
  bin: '"float64x-align.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64x-align.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_float64x-typeof_9:
  bin: '"float64x-typeof.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/float64x-typeof.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn-arithconv_50:
  bin: '"floatn-arithconv.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/floatn-arithconv.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_floatn-errs_44:
  bin: '"floatn-errs.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/floatn-errs.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-1_16:
  bin: '"fltconst-1.s"'
  cargs: ' -std=gnu99 -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fshow-column"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-2_40:
  bin: '"fltconst-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-double-pedantic-1_13:
  bin: '"fltconst-double-pedantic-1.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-double-pedantic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(double constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-double-pedantic-2_13:
  bin: '"fltconst-double-pedantic-2.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-double-pedantic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary constants))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(double constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fltconst-pedantic-dfp_6:
  bin: '"fltconst-pedantic-dfp.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fltconst-pedantic-dfp.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(decimal float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(decimal float))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fnegate-1_113:
  bin: '"./fnegate-1.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fnegate-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-1_7:
  bin: '"fold-abs-1.s"'
  cargs: ' -O1 -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fwrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-2_17:
  bin: '"./fold-abs-2.exe"'
  cargs: ' -O1 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-3_8:
  bin: '"fold-abs-3.s"'
  cargs: ' -fdump-tree-gimple -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fwrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-4_14:
  bin: '"fold-abs-4.s"'
  cargs: ' -fdump-tree-gimple -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fwrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-abs-5_10:
  bin: '"fold-abs-5.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-abs-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-addr-1_9:
  bin: '"fold-addr-1.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-addr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-alloca-1_14:
  bin: '"fold-alloca-1.s"'
  cargs: ' -fdump-tree-cfg -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-alloca-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-cfg"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-1_70:
  bin: '"fold-and-1.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-2_70:
  bin: '"fold-and-2.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-lshift_35:
  bin: '"fold-and-lshift.s"'
  cargs: -O -fdump-tree-original -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-lshift.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-rshift-1_35:
  bin: '"fold-and-rshift-1.s"'
  cargs: -O -fdump-tree-original -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-rshift-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-and-rshift-2_29:
  bin: '"fold-and-rshift-2.s"'
  cargs: -O -fdump-tree-original -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-and-rshift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-andxor-1_28:
  bin: '"fold-andxor-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-andxor-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-1_32:
  bin: '"fold-bitand-1.s"'
  cargs: ' -w -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-2_41:
  bin: '"fold-bitand-2.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-3_24:
  bin: '"fold-bitand-3.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bitand-4_15:
  bin: '"fold-bitand-4.s"'
  cargs: ' -O -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bitand-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bopcond-1_48:
  bin: '"fold-bopcond-1.s"'
  cargs: ' -O3 -fdump-tree-ifcvt -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bopcond-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-bopcond-2_48:
  bin: '"fold-bopcond-2.s"'
  cargs: ' -O3 -fdump-tree-ifcvt -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-bopcond-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-1_52:
  bin: '"fold-compare-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-2_19:
  bin: '"fold-compare-2.s"'
  cargs: ' -O2 -fdump-tree-fre1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fre1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-3_158:
  bin: '"fold-compare-3.s"'
  cargs: ' -O2 -fdump-tree-cfg -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cfg"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-4_22:
  bin: '"fold-compare-4.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-5_19:
  bin: '"fold-compare-5.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-6_11:
  bin: '"fold-compare-6.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-7_8:
  bin: '"fold-compare-7.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-compare-8_10:
  bin: '"fold-compare-8.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-compare-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-complex-1_10:
  bin: '"fold-complex-1.s"'
  cargs: ' -O -ffast-math -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-complex-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cond-1_28:
  bin: '"fold-cond-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cond-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cond_expr-1_47:
  bin: '"fold-cond_expr-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cond_expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-condcmpconv-1_14:
  bin: '"fold-condcmpconv-1.s"'
  cargs: ' -O3 -fdump-tree-ifcvt -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-condcmpconv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-condcmpconv-2_15:
  bin: '"fold-condcmpconv-2.s"'
  cargs: ' -O3 -fdump-tree-ifcvt -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-condcmpconv-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ifcvt"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convmaxconv-1_15:
  bin: '"fold-convmaxconv-1.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convmaxconv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convminconv-1_15:
  bin: '"fold-convminconv-1.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convminconv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convnotconv-1_16:
  bin: '"fold-convnotconv-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convnotconv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-convround-1_29:
  bin: '"fold-convround-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-convround-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-copysign-1_16:
  bin: '"fold-copysign-1.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-copysign-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cstring_44:
  bin: '"./fold-cstring.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cstring.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cstvecshift_12:
  bin: '"fold-cstvecshift.s"'
  cargs: ' -O -fdump-tree-ccp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cstvecshift.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-ccp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-cvect_38:
  bin: '"./fold-cvect.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-cvect.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-div-1_29:
  bin: '"fold-div-1.s"'
  cargs: ' -funsafe-math-optimizations -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-div-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-div-2_12:
  bin: '"fold-div-2.s"'
  cargs: ' -ffinite-math-only -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-div-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-div-3_14:
  bin: '"fold-div-3.s"'
  cargs: ' -O -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-div-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqand-1_16:
  bin: '"fold-eqand-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqand-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandnot-1_32:
  bin: '"fold-eqandnot-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandnot-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandshift-1_55:
  bin: '"fold-eqandshift-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandshift-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandshift-2_21:
  bin: '"fold-eqandshift-2.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandshift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqandshift-3_28:
  bin: '"fold-eqandshift-3.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqandshift-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqcmplx-1_9:
  bin: '"fold-eqcmplx-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqcmplx-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-1_27:
  bin: '"fold-eqxor-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-2_27:
  bin: '"fold-eqxor-2.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-3_27:
  bin: '"fold-eqxor-3.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-eqxor-4_21:
  bin: '"fold-eqxor-4.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-eqxor-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-even-1_32:
  bin: '"fold-even-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-even-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-ior-1_69:
  bin: '"fold-ior-1.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-ior-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-ior-2_47:
  bin: '"fold-ior-2.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-ior-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-ior-3_35:
  bin: '"fold-ior-3.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-ior-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-1_19:
  bin: '"fold-minus-1.s"'
  cargs: ' -O -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-2_37:
  bin: '"fold-minus-2.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-3_37:
  bin: '"fold-minus-3.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-4_37:
  bin: '"fold-minus-4.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-5_37:
  bin: '"fold-minus-5.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-6_42:
  bin: '"fold-minus-6.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-minus-7_36:
  bin: '"fold-minus-7.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-minus-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-mod-1_25:
  bin: '"fold-mod-1.s"'
  cargs: ' -fdump-tree-gimple -fstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-mod-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-modpow2_11:
  bin: '"fold-modpow2.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-modpow2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-mulconj-1_15:
  bin: '"fold-mulconj-1.s"'
  cargs: ' -O2 -ffast-math -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-mulconj-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-narrowbopcst-1_14:
  bin: '"fold-narrowbopcst-1.s"'
  cargs: ' -O1 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-narrowbopcst-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-nonneg-1_10:
  bin: '"fold-nonneg-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-nonneg-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decimal points))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notrotate-1_54:
  bin: '"fold-notrotate-1.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notrotate-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notshift-1_77:
  bin: '"fold-notshift-1.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notshift-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notshift-2_33:
  bin: '"fold-notshift-2.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notshift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-notunord_9:
  bin: '"fold-notunord.s"'
  cargs: ' -O -ftrapping-math -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-notunord.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftrapping-math -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-overflow-1_23:
  bin: '"fold-overflow-1.s"'
  cargs: -O -ftrapping-math -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftrapping-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-perm_19:
  bin: '"fold-perm.s"'
  cargs: ' -O -fdump-tree-fre1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-perm.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-fre1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plus-1_70:
  bin: '"fold-plus-1.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plus-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plus-2_69:
  bin: '"fold-plus-2.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plus-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plusmult-2_19:
  bin: '"fold-plusmult-2.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plusmult-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plusmult_14:
  bin: '"fold-plusmult.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plusmult.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-plusnot-1_29:
  bin: '"fold-plusnot-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-plusnot-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-reassoc-1_9:
  bin: '"fold-reassoc-1.s"'
  cargs: ' -O -ffast-math -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-reassoc-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-reassoc-2_13:
  bin: '"fold-reassoc-2.s"'
  cargs: ' -O -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-reassoc-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-reassoc-3_16:
  bin: '"fold-reassoc-3.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-reassoc-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-rotate-1_73:
  bin: '"fold-rotate-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-rotate-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-sub_11:
  bin: '"fold-sub.s"'
  cargs: ' -ffinite-math-only -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-sub.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-1_11:
  bin: '"fold-xor-1.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-2_15:
  bin: '"fold-xor-2.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-3_37:
  bin: '"fold-xor-3.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-4_69:
  bin: '"fold-xor-4.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xor-5_69:
  bin: '"fold-xor-5.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xor-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xorand-1_28:
  bin: '"fold-xorand-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xorand-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fold-xornot-1_15:
  bin: '"fold-xornot-1.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fold-xornot-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_for-1_7:
  bin: '"for-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/for-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at end of input" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fork-instrumentation_11:
  bin: '"fork-instrumentation.s"'
  cargs: -O0 -fprofile-generate -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fork-instrumentation.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_1_19:
  bin: '"./fpermitted-flt-eval-methods_1.exe"'
  cargs: ' -std=c11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_2_19:
  bin: '"./fpermitted-flt-eval-methods_2.exe"'
  cargs: ' -fpermitted-flt-eval-methods=c11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpermitted-flt-eval-methods=c11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_3_21:
  bin: '"./fpermitted-flt-eval-methods_3.exe"'
  cargs: ' -std=c11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fpermitted-flt-eval-methods_4_25:
  bin: '"./fpermitted-flt-eval-methods_4.exe"'
  cargs: ' -std=c11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fpermitted-flt-eval-methods_4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_free-1_26:
  bin: '"free-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/free-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_free-2_26:
  bin: '"free-2.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/free-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(attempt to free a non-heap object))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fshort-wchar_21:
  bin: '"./fshort-wchar.exe"'
  cargs: ' -fshort-wchar'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fshort-wchar.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshort-wchar"'
      - '"-fshort-wchar -Wl,--no-wchar-size-warning" { target arm_eabi }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fstack-protector-strong_157:
  bin: '"fstack-protector-strong.s"'
  cargs: -O2 -fstack-protector-strong -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fstack-protector-strong.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-strong"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: warning:[^
        ]*(writing 105 bytes into a region of size 100))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ftrapv-1_26:
  bin: '"./ftrapv-1.exe"'
  cargs: ' -ftrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ftrapv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ftrapv-2_110:
  bin: '"./ftrapv-2.exe"'
  cargs: ' -ftrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ftrapv-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ftrapv-3_16:
  bin: '"./ftrapv-3.exe"'
  cargs: ' -ftrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ftrapv-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-args-1_53:
  bin: '"func-args-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-args-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f1v'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f1v'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many arguments to function 'x.f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'f2v'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'x.f2v'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-args-2_6:
  bin: '"func-args-2.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-args-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-outside-1_9:
  bin: '"func-outside-1.s"'
  cargs: ' -fshow-column -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-outside-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(17:'__func__' is not defined outside of function scope" "undef))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-outside-2_9:
  bin: '"func-outside-2.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-outside-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('__func__' is not defined outside of function scope" "undef))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_func-ptr-conv-1_56:
  bin: '"func-ptr-conv-1.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/func-ptr-conv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(12:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(6:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(8:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(10:pointer" "bad conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(11:pointer" "bad conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-attr-1_14:
  bin: '"funcdef-attr-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-attr-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-storage-1_9:
  bin: '"funcdef-storage-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-storage-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-var-1_10:
  bin: '"funcdef-var-1.s"'
  cargs: ' -Wmissing-prototypes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-var-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype" "no previous prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcdef-var-2_11:
  bin: '"funcdef-var-2.s"'
  cargs: ' -Wmissing-prototypes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcdef-var-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype" "no previous prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funcorder_39:
  bin: '"funcorder.s"'
  cargs: -O2 -funit-at-a-time -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funcorder.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_funroll-loops-all_4:
  bin: '"funroll-loops-all.s"'
  cargs: ' -funroll-loops-all -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/funroll-loops-all.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funroll-loops-all"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-funroll-loops-all'" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fuse-caller-save_21:
  bin: '"./fuse-caller-save.exe"'
  cargs: ' -fipa-ra'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fuse-caller-save.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fipa-ra"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fwrapv-1_29:
  bin: '"./fwrapv-1.exe"'
  cargs: ' -O2 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fwrapv-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_fwrapv-2_29:
  bin: '"./fwrapv-2.exe"'
  cargs: ' -O2 -fno-wrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/fwrapv-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-wrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gcc-have-sync-compare-and-swap_62:
  bin: '"gcc-have-sync-compare-and-swap.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gcc-have-sync-compare-and-swap.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-10_18:
  bin: '"gimplefe-10.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-11_18:
  bin: '"gimplefe-11.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-12_10:
  bin: '"gimplefe-12.s"'
  cargs: ' -O -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-13_26:
  bin: '"gimplefe-13.s"'
  cargs: ' -O -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-14_31:
  bin: '"./gimplefe-14.exe"'
  cargs: ' -O -fgimple'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-15_18:
  bin: '"gimplefe-15.s"'
  cargs: ' -O -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-16_18:
  bin: '"gimplefe-16.s"'
  cargs: ' -O -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-17_26:
  bin: '"gimplefe-17.s"'
  cargs: ' -fgimple -fdump-tree-ssa -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple -fdump-tree-ssa"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-18_24:
  bin: '"gimplefe-18.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-19_7:
  bin: '"gimplefe-19.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-1_8:
  bin: '"gimplefe-1.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-20_20:
  bin: '"gimplefe-20.s"'
  cargs: ' -O -fgimple -fdump-tree-ssa-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple -fdump-tree-ssa-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-21_19:
  bin: '"gimplefe-21.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-22_9:
  bin: '"gimplefe-22.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-23_33:
  bin: '"gimplefe-23.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-24_9:
  bin: '"gimplefe-24.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-25_11:
  bin: '"gimplefe-25.s"'
  cargs: ' -O -fgimple -fdump-tree-ssa-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-25.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple -fdump-tree-ssa-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-26_16:
  bin: '"gimplefe-26.s"'
  cargs: ' -O -fgimple -fdump-tree-ssa-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-26.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgimple -fdump-tree-ssa-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-2_11:
  bin: '"gimplefe-2.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-3_8:
  bin: '"gimplefe-3.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-4_10:
  bin: '"gimplefe-4.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-5_28:
  bin: '"gimplefe-5.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-6_19:
  bin: '"gimplefe-6.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-7_27:
  bin: '"gimplefe-7.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-8_13:
  bin: '"gimplefe-8.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-9_15:
  bin: '"gimplefe-9.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-error-1_11:
  bin: '"gimplefe-error-1.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-error-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-error-2_21:
  bin: '"gimplefe-error-2.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-error-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gimplefe-error-3_17:
  bin: '"gimplefe-error-3.s"'
  cargs: ' -fgimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gimplefe-error-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_globalalias-2_21:
  bin: '"globalalias-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/globalalias-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_globalalias_42:
  bin: '"./globalalias.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/globalalias.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-cond-expr-1_13:
  bin: '"gnu-cond-expr-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-cond-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-cond-expr-2_13:
  bin: '"gnu-cond-expr-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-cond-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids omitting the middle term of a \\?: expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-cond-expr-3_13:
  bin: '"gnu-cond-expr-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-cond-expr-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting the middle term of a \\?: expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu-predef-1_14:
  bin: '"gnu-predef-1.s"'
  cargs: ' -std=gnu11 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu-predef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*( ISO C does not support .__FUNCTION__. predefined identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*( ISO C does not support .__PRETTY_FUNCTION__. predefined identifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu11-version-1_9:
  bin: '"gnu11-version-1.s"'
  cargs: ' -std=gnu11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu11-version-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-const-expr-1_56:
  bin: '"gnu89-const-expr-1.s"'
  cargs: ' -std=gnu89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-const-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced" "ISO))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-const-expr-2_26:
  bin: '"gnu89-const-expr-2.s"'
  cargs: ' -std=gnu89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-const-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a constant" "error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-dupqual-1_12:
  bin: '"gnu89-dupqual-1.s"'
  cargs: ' -std=gnu89 -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-dupqual-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-1_69:
  bin: '"./gnu89-init-1.exe"'
  cargs: ' -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-2_25:
  bin: '"gnu89-init-2.s"'
  cargs: -std=gnu89 -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-3_18:
  bin: '"gnu89-init-3.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu89-init-4_12:
  bin: '"gnu89-init-4.s"'
  cargs: ' -std=gnu89 -W -Wall -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu89-init-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -W -Wall -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu90-const-expr-1_56:
  bin: '"gnu90-const-expr-1.s"'
  cargs: ' -std=gnu90 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu90-const-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C90 forbids variable length array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced" "ISO))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-1_56:
  bin: '"gnu99-const-expr-1.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids omitting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(complex" "complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(imaginary" "ISO))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(braced" "ISO))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-2_26:
  bin: '"gnu99-const-expr-2.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not a constant" "error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-3_32:
  bin: '"gnu99-const-expr-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-const-expr-4_29:
  bin: '"gnu99-const-expr-4.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-const-expr-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-init-1_80:
  bin: '"./gnu99-init-1.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-init-2_11:
  bin: '"gnu99-init-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer type|near init" "pointer designator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(integer type|near init" "pointer designator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_gnu99-static-1_30:
  bin: '"gnu99-static-1.s"'
  cargs: ' -O2 -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/gnu99-static-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used but never defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-bit-insn-ice2_15:
  bin: '"h8300-bit-insn-ice2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-bit-insn-ice2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-bit-insn-ice_39:
  bin: '"h8300-bit-insn-ice.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-bit-insn-ice.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-div-delay-slot_19:
  bin: '"h8300-div-delay-slot.s"'
  cargs: -Os -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-div-delay-slot.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_h8300-ice2_12:
  bin: '"h8300-ice2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/h8300-ice2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_header_9:
  bin: '"header.o"'
  cargs: ' -S -x c-header -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/header.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-S -x c-header"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hex-round-1_114:
  bin: '"hex-round-1.exe"'
  cargs: ' -O -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hex-round-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hex-round-2_115:
  bin: '"hex-round-2.exe"'
  cargs: ' -O -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hex-round-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hoist-register-pressure-1_35:
  bin: '"hoist-register-pressure-1.s"'
  cargs: -Os -fdump-rtl-hoist -fno-code-hoisting -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hoist-register-pressure-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-hoist -fno-code-hoisting"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hoist-register-pressure-2_36:
  bin: '"hoist-register-pressure-2.s"'
  cargs: -Os -fdump-rtl-hoist -fno-code-hoisting -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hoist-register-pressure-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-hoist -fno-code-hoisting"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_hoist-register-pressure-3_36:
  bin: '"hoist-register-pressure-3.s"'
  cargs: -Os -fdump-rtl-hoist -fno-code-hoisting -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/hoist-register-pressure-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-hoist -fno-code-hoisting"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-1_76:
  bin: '"./ia64-sync-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-2_132:
  bin: '"./ia64-sync-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-3_81:
  bin: '"./ia64-sync-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ia64-sync-4_23:
  bin: '"ia64-sync-4.s"'
  cargs: ' -O2 -finline-functions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ia64-sync-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finline-functions"'
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-1_16:
  bin: '"iec-559-macros-1.i"'
  cargs: '  -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-2_23:
  bin: '"iec-559-macros-2.i"'
  cargs: ' -funsafe-math-optimizations -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-3_23:
  bin: '"iec-559-macros-3.i"'
  cargs: ' -freciprocal-math -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-freciprocal-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-4_23:
  bin: '"iec-559-macros-4.i"'
  cargs: ' -ffinite-math-only -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-5_23:
  bin: '"iec-559-macros-5.i"'
  cargs: ' -fno-signed-zeros -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-signed-zeros"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-6_23:
  bin: '"iec-559-macros-6.i"'
  cargs: ' -fsingle-precision-constant -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsingle-precision-constant"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-7_20:
  bin: '"iec-559-macros-7.i"'
  cargs: ' -fcx-limited-range -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fcx-limited-range"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-8_20:
  bin: '"iec-559-macros-8.i"'
  cargs: ' -fcx-fortran-rules -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fcx-fortran-rules"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_iec-559-macros-9_23:
  bin: '"iec-559-macros-9.i"'
  cargs: ' -std=c11 -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/iec-559-macros-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_if-empty-1_23:
  bin: '"if-empty-1.s"'
  cargs: ' -Wempty-body -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/if-empty-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wempty-body"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest braces around empty body in an))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(suggest braces around empty body in an))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-1_10:
  bin: '"ifcvt-1.s"'
  cargs: -fdump-rtl-ce1 -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-2_16:
  bin: '"ifcvt-2.s"'
  cargs: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-3_19:
  bin: '"ifcvt-3.s"'
  cargs: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-unpredictable-cost=100"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-4_24:
  bin: '"ifcvt-4.s"'
  cargs: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=3 --param max-rtl-if-conversion-unpredictable-cost=100 -mtune-ctrl=^one_if_conv_insn -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=3 --param max-rtl-if-conversion-unpredictable-cost=100"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-5_21:
  bin: '"ifcvt-5.s"'
  cargs: -fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=1 --param max-rtl-if-conversion-unpredictable-cost=200 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 --param max-rtl-if-conversion-insns=1 --param max-rtl-if-conversion-unpredictable-cost=200"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifcvt-fabs-1_21:
  bin: '"./ifcvt-fabs-1.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifcvt-fabs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
      - '"-O -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifelse-1_21:
  bin: '"ifelse-1.s"'
  cargs: ' -W -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifelse-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-W -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ifelse-2_34:
  bin: '"./ifelse-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ifelse-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_imag-1_18:
  bin: '"./imag-1.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/imag-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_incomplete-typedef-1_12:
  bin: '"incomplete-typedef-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/incomplete-typedef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of incomplete typedef))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of incomplete typedef))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-1_45:
  bin: '"init-bad-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function 'g' is initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'a' is initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'x' has initializer but incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size" "size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index range in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty index range in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index range in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init" "excess))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in scalar initializer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-2_33:
  bin: '"init-bad-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function 'g' is initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'a' is initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'x' has initializer but incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size" "size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in scalar initializer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-3_33:
  bin: '"init-bad-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(function 'g' is initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'a' is initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'x' has initializer but incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size" "size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer-string for array of chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(excess elements in scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array index in initializer exceeds array bounds))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-4_5:
  bin: '"init-bad-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no members|extra brace|near|undeclared|constant|compound|excess))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-5_5:
  bin: '"init-bad-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete|empty|initialization))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-6_12:
  bin: '"init-bad-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in array initializer|near initialization))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-7_11:
  bin: '"init-bad-7.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type|near initialization for))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-8_10:
  bin: '"init-bad-8.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(35: .struct S. has no member named .l.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-bad-9_12:
  bin: '"init-bad-9.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-bad-9.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-desig-obs-1_19:
  bin: '"init-desig-obs-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-desig-obs-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(syntax error|parse error|expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(syntax error|parse error|expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-desig-obs-2_11:
  bin: '"init-desig-obs-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-desig-obs-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(obsolete use of designated initializer with ':'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(obsolete use of designated initializer without '='))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-desig-obs-3_11:
  bin: '"init-desig-obs-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-desig-obs-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(obsolete use of designated initializer with ':'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(obsolete use of designated initializer without '='))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-empty-1_9:
  bin: '"init-empty-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-empty-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-empty-2_9:
  bin: '"init-empty-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-empty-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-empty-3_9:
  bin: '"init-empty-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-empty-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-excess-1_48:
  bin: '"init-excess-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-excess-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-excess-2_48:
  bin: '"init-excess-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-excess-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(positional initialization|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements|near init))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-string-1_59:
  bin: '"init-string-1.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-string-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parenthesized|near init" "paren array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-string-2_57:
  bin: '"init-string-2.s"'
  cargs: ' -std=c99 -pedantic-errors -fshort-enums -fshort-wchar -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-string-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -fshort-enums -fshort-wchar"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a9))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "a11))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string" "a12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-wide string" "a13))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b7))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b8))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b9))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(string constant" "b11))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string" "b12))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-wide string" "b13))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_init-undef-1_8:
  bin: '"init-undef-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/init-undef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_initpri1_62:
  bin: '"./initpri1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/initpri1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_initpri2_39:
  bin: '"initpri2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/initpri2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(priorities))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(reserved))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(reserved))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_initpri3_64:
  bin: '"./initpri3.exe"'
  cargs: ' -flto -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/initpri3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-10_6:
  bin: '"inline-10.s"'
  cargs: ' -std=gnu99 -ffreestanding -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -ffreestanding -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-11_14:
  bin: '"inline-11.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(variable 'a' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(variable 'b' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(typedef 'c' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(typedef 'd' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter 'f' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter '\\({anonymous}\\)' declared 'inline'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-12_14:
  bin: '"inline-12.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'a' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable 'b' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(typedef 'c' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(typedef 'd' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'f' declared 'inline'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter '\\({anonymous}\\)' declared 'inline'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-13_56:
  bin: '"inline-13.s"'
  cargs: -std=c99 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-14_23:
  bin: '"inline-14.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-15_7:
  bin: '"inline-15.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(never defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-16_22:
  bin: '"inline-16.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-17_24:
  bin: '"inline-17.s"'
  cargs: -std=c99 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-18_28:
  bin: '"inline-18.s"'
  cargs: -std=c99 -fgnu89-inline -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fgnu89-inline"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-19_28:
  bin: '"inline-19.s"'
  cargs: -fgnu89-inline -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgnu89-inline"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-1_28:
  bin: '"inline-1.s"'
  cargs: ' -O1 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fgnu89-inline"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-20_64:
  bin: '"inline-20.s"'
  cargs: -std=c99 -fno-gnu89-inline -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fno-gnu89-inline"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-21_4:
  bin: '"inline-21.s"'
  cargs: ' -std=gnu89 -fno-gnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -fno-gnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(only supported in GNU99 or C99 mode" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-22_8:
  bin: '"inline-22.s"'
  cargs: ' -funit-at-a-time -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funit-at-a-time -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-23_21:
  bin: '"inline-23.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-24_28:
  bin: '"inline-24.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-25_145:
  bin: '"inline-25.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-25.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declared in inline))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-26_145:
  bin: '"inline-26.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-26.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(declared in inline))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-27_145:
  bin: '"inline-27.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-27.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(used in inline))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(declared in inline))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-28_28:
  bin: '"./inline-28.exe"'
  cargs: ' -O0 -std=gnu89'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-28.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -std=gnu89"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-29_28:
  bin: '"./inline-29.exe"'
  cargs: ' -O0 -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-29.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-2_18:
  bin: '"inline-2.s"'
  cargs: -O3 -finline-limit=0 -fpic -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -finline-limit=0 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-30_28:
  bin: '"./inline-30.exe"'
  cargs: ' -O0 -std=gnu99 -fgnu89-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-30.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -std=gnu99 -fgnu89-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-31_9:
  bin: '"inline-31.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-31.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-32_11:
  bin: '"inline-32.exe"'
  cargs: ' -std=c99 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-32.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-32a_3:
  bin: '"inline-32a.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-32a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-33_22:
  bin: '"inline-33.s"'
  cargs: ' -O3 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-33.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-34_19:
  bin: '"inline-34.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-34.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-35_19:
  bin: '"inline-35.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-35.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-36_21:
  bin: '"inline-36.s"'
  cargs: ' -O2 -fdump-tree-optimized -fdisable-tree-einline -fdisable-ipa-inline -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-36.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline -fdisable-ipa-inline -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-37_21:
  bin: '"inline-37.s"'
  cargs: ' -O2 -fdump-tree-optimized -fdisable-tree-einline=0:100 -fdisable-ipa-inline -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-37.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline=0:100 -fdisable-ipa-inline -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-38_21:
  bin: '"inline-38.s"'
  cargs: ' -O2 -fdump-tree-optimized -fdisable-tree-einline=foo,foo2 -fdisable-ipa-inline -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-38.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline=foo,foo2 -fdisable-ipa-inline -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-39_22:
  bin: '"inline-39.s"'
  cargs: ' -O2 -fdump-tree-optimized -fdisable-tree-einline=foo2 -fdisable-ipa-inline -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-39.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fdisable-tree-einline=foo2 -fdisable-ipa-inline -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-3_49:
  bin: '"inline-3.s"'
  cargs: -O2 -funit-at-a-time -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-4_18:
  bin: '"inline-4.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-5_13:
  bin: '"inline-5.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-6_6:
  bin: '"inline-6.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-7_6:
  bin: '"inline-7.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-8_6:
  bin: '"inline-8.s"'
  cargs: ' -std=gnu99 -fhosted -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fhosted"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline-9_6:
  bin: '"inline-9.s"'
  cargs: ' -std=gnu99 -fhosted -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fhosted -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot inline function 'main'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline1_8:
  bin: '"inline1.s"'
  cargs: ' -Wall -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline2_5:
  bin: '"inline2.s"'
  cargs: ' -Wall -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline3_7:
  bin: '"inline3.s"'
  cargs: ' -Wall -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline4_6:
  bin: '"inline4.s"'
  cargs: ' -Wall -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline5_6:
  bin: '"inline5.s"'
  cargs: ' -Wall -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline6_14:
  bin: '"inline6.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(static))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_inline7_9:
  bin: '"inline7.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/inline7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(static))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_instrument-1_7:
  bin: '"instrument-1.s"'
  cargs: -finstrument-functions -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/instrument-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_instrument-2_7:
  bin: '"instrument-2.s"'
  cargs: -finstrument-functions -finstrument-functions-exclude-function-list=fn -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/instrument-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions -finstrument-functions-exclude-function-list=fn"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_instrument-3_7:
  bin: '"instrument-3.s"'
  cargs: -finstrument-functions -finstrument-functions-exclude-file-list=instrument-3 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/instrument-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions -finstrument-functions-exclude-file-list=instrument-3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_intermod-1_23:
  bin: '"intermod-1.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/intermod-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_intmax_t-1_25:
  bin: '"intmax_t-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/intmax_t-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_invalid-call-1_17:
  bin: '"invalid-call-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/invalid-call-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -march=i586" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type" "non-compatible type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ira-loop-pressure_31:
  bin: '"ira-loop-pressure.s"'
  cargs: -O2 -fira-loop-pressure -fdump-rtl-loop2_invariant -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ira-loop-pressure.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fira-loop-pressure -fdump-rtl-loop2_invariant "'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ira-shrinkwrap-prep-1_29:
  bin: '"ira-shrinkwrap-prep-1.s"'
  cargs: -O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ira-shrinkwrap-prep-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ira-shrinkwrap-prep-2_35:
  bin: '"ira-shrinkwrap-prep-2.s"'
  cargs: -O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ira-shrinkwrap-prep-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-ira -fdump-rtl-pro_and_epilogue -fno-ipa-ra" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ivdep_11:
  bin: '"ivdep.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ivdep.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing loop condition in loop with 'GCC ivdep' pragma before ';' token))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-compound-stmt-1_7:
  bin: '"label-compound-stmt-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-compound-stmt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label|parse|syntax" "label at end of compound statement))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-1_17:
  bin: '"label-decl-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'd' used but not defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'c' used but not defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-2_16:
  bin: '"label-decl-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'd' used but not defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'c' used but not defined))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids label declarations" "label decls))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-3_18:
  bin: '"label-decl-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'd' used but not defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids label declarations" "label decls))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'c' used but not defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_label-decl-4_14:
  bin: '"label-decl-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/label-decl-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate label declaration 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate label declaration 'c'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-2_7:
  bin: '"large-size-array-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-3_21:
  bin: '"large-size-array-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array 'a' is too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-4_7:
  bin: '"large-size-array-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-5_9:
  bin: '"large-size-array-5.s"'
  cargs: ' -Wno-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-overflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array-6_6:
  bin: '"large-size-array-6.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_large-size-array_21:
  bin: '"large-size-array.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/large-size-array.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(size of array 'a' is too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_limits-width-1_55:
  bin: '"limits-width-1.s"'
  cargs: ' -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/limits-width-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_local1_23:
  bin: '"local1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/local1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_localalias-2_20:
  bin: '"localalias-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/localalias-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_localalias_42:
  bin: '"./localalias.exe"'
  cargs: ' -Wstrict-aliasing=2 -fstrict-aliasing'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/localalias.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-aliasing=2 -fstrict-aliasing"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long-long-compare-1_124:
  bin: '"./long-long-compare-1.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long-long-compare-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long-long-cst1_18:
  bin: '"./long-long-cst1.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long-long-cst1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long-long-typespec-1_828:
  bin: '"long-long-typespec-1.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long-long-typespec-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors -Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:109:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:166:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:181:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:235:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:261:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:262:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:312:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:321:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:322:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:350:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:362:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:409:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:435:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:436:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:445:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:492:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:505:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:506:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:512:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:522:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:523:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:525:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:526:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:527:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:528:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:529:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:530:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:531:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:532:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:533:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:534:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:535:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:536:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:537:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:538:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:539:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:540:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:541:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:542:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:543:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:546:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:547:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:548:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:549:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:550:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:551:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:552:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:553:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:555:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:556:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:557:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:558:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:559:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:560:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:561:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:563:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:564:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:565:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:566:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:567:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:568:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:569:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:570:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:571:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:572:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:573:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:574:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:575:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:576:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:577:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:579:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:580:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:582:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:583:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:584:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:585:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:586:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:587:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:588:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:591:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:592:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:593:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:594:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:595:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:596:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:597:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:598:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:600:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:601:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:603:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:604:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:605:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:606:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:608:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:609:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:611:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:613:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:614:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:615:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:616:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:617:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:618:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:619:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:621:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:622:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:623:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:624:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:625:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:626:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:627:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:629:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:630:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:631:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:632:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:634:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:635:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:636:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:637:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:638:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:639:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:640:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:641:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:642:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:643:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:644:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:645:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:646:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:647:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:648:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:649:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:650:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:651:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:652:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:653:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:655:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:656:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:657:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:658:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:659:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:660:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:661:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:662:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:663:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:664:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:665:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:666:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:667:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:668:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:669:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:671:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:672:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:673:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:674:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:675:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:676:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:677:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:678:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:679:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:680:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:681:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:682:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:683:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:684:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:685:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:686:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:687:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:688:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:689:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:690:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:691:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:692:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:693:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:694:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:695:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:696:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:697:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:698:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:699:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:700:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:701:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:702:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:703:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:704:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:705:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:706:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:707:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:708:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:709:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:710:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:711:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:713:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:714:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:715:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:716:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:717:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:718:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:719:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:720:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:721:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:722:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:723:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:724:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:725:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:726:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:727:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:728:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:729:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:730:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:731:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:732:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:733:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:734:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:735:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:736:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:737:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:738:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:739:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:740:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:741:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:742:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:743:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:744:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:745:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:747:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:748:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:750:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:752:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:753:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:754:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:755:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:756:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:757:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:758:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:760:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:761:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:762:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:763:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:765:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:766:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:767:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:768:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:769:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:770:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:771:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:772:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:773:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:774:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:775:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:776:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:777:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:778:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:779:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:780:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:781:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:782:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:783:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:784:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:785:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:786:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:787:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:788:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:789:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:790:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:791:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:792:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:793:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:794:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:795:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:796:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:797:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:799:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:800:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:802:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:803:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:804:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:805:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:806:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:807:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:808:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:810:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:812:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:813:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:814:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:815:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:816:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:817:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:818:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:820:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:821:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:823:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:824:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:825:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:826:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:827:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:828:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int unsigned))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_long_branch_198:
  bin: '"./long_branch.exe"'
  cargs: ' -O2 -fno-reorder-blocks'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/long_branch.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-reorder-blocks"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-1_20:
  bin: '"loop-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-2_23:
  bin: '"./loop-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-3_45:
  bin: '"loop-3.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -mtune=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-4_25:
  bin: '"./loop-4.exe"'
  cargs: ' -O2 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-5_16:
  bin: '"loop-5.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-6_25:
  bin: '"./loop-6.exe"'
  cargs: ' -O2 -funroll-all-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-all-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-8_24:
  bin: '"loop-8.s"'
  cargs: -O1 -fdump-rtl-loop2_invariant -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-loop2_invariant"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-9_15:
  bin: '"loop-9.s"'
  cargs: -O1 -fdump-rtl-loop2_invariant -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-loop2_invariant"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-invariant_42:
  bin: '"loop-invariant.s"'
  cargs: -O2 -fdump-rtl-loop2_invariant -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-invariant.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-loop2_invariant"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-split_148:
  bin: '"./loop-split.exe"'
  cargs: ' -O2 -fsplit-loops -fdump-tree-lsplit-details'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-split.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsplit-loops -fdump-tree-lsplit-details"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-1_36:
  bin: '"loop-unswitch-1.s"'
  cargs: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-2_16:
  bin: '"loop-unswitch-2.s"'
  cargs: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-3_27:
  bin: '"loop-unswitch-3.s"'
  cargs: ' -O2 -funswitch-loops -fdump-tree-unswitch-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -fdump-tree-unswitch-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-4_52:
  bin: '"./loop-unswitch-4.exe"'
  cargs: ' -O2 -funswitch-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_loop-unswitch-5_51:
  bin: '"./loop-unswitch-5.exe"'
  cargs: ' -fno-tree-vrp -O2 -funswitch-loops -fdump-tree-unswitch-details'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/loop-unswitch-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-tree-vrp -O2 -funswitch-loops -fdump-tree-unswitch-details"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-2_48:
  bin: '"lvalue-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as increment operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as increment operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as decrement operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as decrement operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as unary '&' operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only variable 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of member 'x' in read-only object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only member 'x'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-3_14:
  bin: '"lvalue-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only member 'a'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only variable 'b'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-4_8:
  bin: '"lvalue-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-5_14:
  bin: '"lvalue-5.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(increment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(decrement of read-only location))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-6_17:
  bin: '"lvalue-6.s"'
  cargs: ' -std=iso9899:1990 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1990 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking address of expression of type 'void'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking address of expression of type 'void'" "C90 only error))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-7_16:
  bin: '"lvalue-7.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(taking address of expression of type 'void'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue-8_19:
  bin: '"lvalue-8.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue-8.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_lvalue1_9:
  bin: '"lvalue1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/lvalue1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as left operand of assignment))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_m-un-1_37:
  bin: '"m-un-1.s"'
  cargs: ' -O -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/m-un-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_m-un-2_32:
  bin: '"m-un-2.s"'
  cargs: ' -W -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/m-un-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-W -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(missing initializer" "warning regression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-1_3:
  bin: '"macro-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/macro-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-fusion-1_14:
  bin: '"macro-fusion-1.s"'
  cargs: -O2 -mtune=corei7 -fdump-rtl-sched2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/macro-fusion-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -mtune=corei7 -fdump-rtl-sched2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_macro-fusion-2_17:
  bin: '"macro-fusion-2.s"'
  cargs: -O2 -mtune=corei7-avx -fdump-rtl-sched2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/macro-fusion-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -mtune=corei7-avx -fdump-rtl-sched2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mallign_15:
  bin: '"./mallign.exe"'
  cargs: ' -fno-builtin-malloc'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/mallign.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-builtin-malloc"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_march-generic_6:
  bin: '"march-generic.s"'
  cargs: ' -march=generic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/march-generic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-march=generic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('generic' CPU can be used only for '-mtune=' switch" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_march_7:
  bin: '"march.s"'
  cargs: ' -march=foo -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/march.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-march=foo"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(march" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_max-1_42:
  bin: '"./max-1.exe"'
  cargs: ' -O1 '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/max-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 "'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_max_22:
  bin: '"max.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/max.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcmp-1_667:
  bin: '"./memcmp-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcmp-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-1_11:
  bin: '"memcpy-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-2_25:
  bin: '"memcpy-2.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(writing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-3_13:
  bin: '"memcpy-3.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-4_13:
  bin: '"memcpy-4.s"'
  cargs: -O2 -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memcpy-5_27:
  bin: '"memcpy-5.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memcpy-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-1_18:
  bin: '"memmove-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-2_15:
  bin: '"memmove-2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-3_15:
  bin: '"memmove-3.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memmove-4_11:
  bin: '"memmove-4.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memmove-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memset-1_28:
  bin: '"memset-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memset-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(memset used with constant zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_memset-2_11:
  bin: '"memset-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/memset-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_merge-all-constants-1_8:
  bin: '"merge-all-constants-1.s"'
  cargs: -w -O2 -fmerge-all-constants -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/merge-all-constants-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -fmerge-all-constants"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_min_22:
  bin: '"min.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/min.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_minmax-1_82:
  bin: '"./minmax-1.exe"'
  cargs: ' -fdump-tree-original'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/minmax-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misaligned-expand-1_41:
  bin: '"./misaligned-expand-1.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misaligned-expand-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misaligned-expand-2_40:
  bin: '"./misaligned-expand-2.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misaligned-expand-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misaligned-expand-3_43:
  bin: '"./misaligned-expand-3.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misaligned-expand-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_misc-column_40:
  bin: '"misc-column.s"'
  cargs: ' -fshow-column -Wall -Wfloat-equal -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/misc-column.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshow-column -Wall -Wfloat-equal -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:wrong type argument to unary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:wrong type argument to bit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:wrong type argument to increment))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparing floating point with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison of distinct pointer types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(10:comparison will always evaluate as 'false'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison between pointer and integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(9:ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(9:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(5:division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mismatch-decl-1_22:
  bin: '"mismatch-decl-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/mismatch-decl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared as different kind of symbol))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(built-in function 'memchr' declared as non-function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-field-init-1_10:
  bin: '"missing-field-init-1.s"'
  cargs: ' -Wextra -Wno-missing-field-initializers -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/missing-field-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wno-missing-field-initializers -std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_missing-field-init-2_14:
  bin: '"missing-field-init-2.s"'
  cargs: ' -Wmissing-field-initializers -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/missing-field-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-field-initializers -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*((missing initializer)|(near initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_modmod_12:
  bin: '"modmod.s"'
  cargs: ' -O -fdump-tree-optimized-raw -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/modmod.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized-raw"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_mtune_8:
  bin: '"mtune.s"'
  cargs: ' -mtune=foo -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/mtune.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-mtune=foo"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(mtune" "mtune))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiple-overflow-warn-1_13:
  bin: '"multiple-overflow-warn-1.s"'
  cargs: ' -std=c99 -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiple-overflow-warn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiple-overflow-warn-2_12:
  bin: '"multiple-overflow-warn-2.s"'
  cargs: ' -std=c99 -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiple-overflow-warn-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_multiple-overflow-warn-3_13:
  bin: '"multiple-overflow-warn-3.s"'
  cargs: ' -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/multiple-overflow-warn-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nand_11:
  bin: '"nand.s"'
  cargs: ' -O -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nand.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nest_28:
  bin: '"./nest.exe"'
  cargs: ' -O2 -pg'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nest.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pg"'
      - '"-O2 -pg -static" { target hppa*-*-hpux* }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(profiler" "No profiler support))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-calls-1_42:
  bin: '"./nested-calls-1.exe"'
  cargs: ' -std=c99 -O -fno-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-calls-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O -fno-inline"'
      - '"-std=c99 -O -fno-inline -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-10_57:
  bin: '"nested-func-10.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-1_35:
  bin: '"nested-func-1.s"'
  cargs: ' -Wno-switch-unreachable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-switch-unreachable"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break switch 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break switch 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break while))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break do))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement" "break for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement" "continue while))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement" "continue do))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement" "continue for))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-2_28:
  bin: '"nested-func-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((is not constant)|(near initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-3_20:
  bin: '"nested-func-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'fn' declared but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'fn2' declared but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested function 'hn' declared but never defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-4_25:
  bin: '"./nested-func-4.exe"'
  cargs: ' -pg'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pg"'
      - '"-pg -static" { target hppa*-*-hpux* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-5_14:
  bin: '"nested-func-5.s"'
  cargs: ' -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-6_14:
  bin: '"nested-func-6.s"'
  cargs: ' -O -Winline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Winline"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-7_14:
  bin: '"nested-func-7.s"'
  cargs: ' -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-8_57:
  bin: '"./nested-func-8.exe"'
  cargs: ' -O -fno-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-func-9_48:
  bin: '"./nested-func-9.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-func-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nested-redef-1_44:
  bin: '"nested-redef-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nested-redef-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'struct s3'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'union u0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(nested redefinition of 'enum e0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration of enumerator 'E2'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-1_10:
  bin: '"no-asm-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .asm.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .typeof.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-2_9:
  bin: '"no-asm-2.s"'
  cargs: ' -std=gnu89 -fno-asm -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -fno-asm"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-3_10:
  bin: '"no-asm-3.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .asm.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(before .typeof.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-asm-4_11:
  bin: '"no-asm-4.s"'
  cargs: ' -std=gnu99 -fno-asm -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-asm-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fno-asm"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty declaration" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-1_7:
  bin: '"no-math-errno-1.s"'
  cargs: ' -fno-math-errno -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-math-errno"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-2_7:
  bin: '"no-math-errno-2.s"'
  cargs: ' -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-3_7:
  bin: '"no-math-errno-3.s"'
  cargs: ' -fmath-errno -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fmath-errno"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-math-errno-4_17:
  bin: '"no-math-errno-4.s"'
  cargs: ' -fmath-errno -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-math-errno-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fmath-errno"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-1_15:
  bin: '"no-strict-overflow-1.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-2_15:
  bin: '"no-strict-overflow-2.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-3_15:
  bin: '"no-strict-overflow-3.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-4_15:
  bin: '"no-strict-overflow-4.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-5_19:
  bin: '"no-strict-overflow-5.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-6_20:
  bin: '"no-strict-overflow-6.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-7_15:
  bin: '"no-strict-overflow-7.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no-strict-overflow-8_24:
  bin: '"no-strict-overflow-8.s"'
  cargs: ' -fno-strict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no-strict-overflow-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_no_profile_instrument_function-attr-1_24:
  bin: '"no_profile_instrument_function-attr-1.s"'
  cargs: ' -O2 -fprofile-generate -fprofile-update=single -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/no_profile_instrument_function-attr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-generate -fprofile-update=single -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nofixed-point-1_7:
  bin: '"nofixed-point-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nofixed-point-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nofixed-point-2_29:
  bin: '"nofixed-point-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nofixed-point-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not supported" "reject fixed-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is used without" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_non-local-goto-1_57:
  bin: '"./non-local-goto-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/non-local-goto-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_non-local-goto-2_58:
  bin: '"./non-local-goto-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/non-local-goto-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-1_39:
  bin: '"nonnull-1.s"'
  cargs: ' -Wnonnull -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with argless nonnull 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with argless nonnull 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with single explicit nonnull))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with explicit nonnull 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with explicit nonnull 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with cond expr rhs))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with cond expr lhs))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with nested cond expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with multiple attributes 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null with multiple attributes 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-2_16:
  bin: '"nonnull-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(without arguments))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(out-of-range operand))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operand number|undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(references non-pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-3_82:
  bin: '"nonnull-3.s"'
  cargs: ' -Wnonnull -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(null" "null pointer check))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-4_79:
  bin: '"nonnull-4.s"'
  cargs: ' -O2 -Wnonnull -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null" "argument 2))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null" "argument 3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 2 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 3 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 4 null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 13 null))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nonnull-5_11:
  bin: '"nonnull-5.s"'
  cargs: ' -O2 -Wnonnull -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nonnull-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wnonnull"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 null where non-null expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder2_11:
  bin: '"noreorder2.s"'
  cargs: -O2 -fno-toplevel-reorder -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-toplevel-reorder"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder3_10:
  bin: '"noreorder3.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder4_5:
  bin: '"noreorder4.s"'
  cargs: -O2 -fno-toplevel-reorder -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-toplevel-reorder"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreorder_38:
  bin: '"noreorder.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreorder.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-1_59:
  bin: '"noreturn-1.s"'
  cargs: ' -O2 -Wmissing-noreturn -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('noreturn' function does return" "detect falling off end of noreturn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(candidate for attribute 'noreturn'" "detect noreturn candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*('noreturn' has a 'return' statement" "detect invalid return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(function does return" "detect return from noreturn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*('noreturn' function does return" "detect return from tail call))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-2_12:
  bin: '"noreturn-2.s"'
  cargs: ' -O3 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-3_10:
  bin: '"noreturn-3.s"'
  cargs: ' -O2 -Wmissing-noreturn -fhosted -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn -fhosted"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-4_10:
  bin: '"noreturn-4.s"'
  cargs: ' -O2 -Wmissing-noreturn -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wmissing-noreturn -ffreestanding"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(function might be candidate for attribute 'noreturn'" "warn for main))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-5_8:
  bin: '"noreturn-5.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-6_4:
  bin: '"noreturn-6.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-6.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not compatible))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-7_42:
  bin: '"noreturn-7.s"'
  cargs: ' -O2 -Wreturn-type -Wmissing-noreturn -fno-ipa-icf -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type -Wmissing-noreturn -fno-ipa-icf"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(might be candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(might be candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(might be candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_noreturn-8_16:
  bin: '"./noreturn-8.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/noreturn-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv1_28:
  bin: '"./nrv1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv2_25:
  bin: '"nrv2.s"'
  cargs: -O -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv3_34:
  bin: '"nrv3.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv4_32:
  bin: '"nrv4.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_nrv5_27:
  bin: '"nrv5.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/nrv5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_null-pointer-1_20:
  bin: '"null-pointer-1.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/null-pointer-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-asm-1_23:
  bin: '"old-style-asm-1.s"'
  cargs: -O2 -dP -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-asm-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -dP"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-param-1_4:
  bin: '"old-style-param-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-param-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of functions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-prom-1_13:
  bin: '"old-style-prom-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-prom-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-prom-2_14:
  bin: '"old-style-prom-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-prom-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-prom-3_14:
  bin: '"old-style-prom-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-prom-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'x' doesn't match prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(promoted argument 'y' doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_old-style-then-proto-1_44:
  bin: '"old-style-then-proto-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/old-style-then-proto-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f2' declares more arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f3' declares fewer arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f5' declares more arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f6'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f7' declares fewer arguments than previous old-style definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f8'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f10' declares argument 2 with incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f11' declares argument 1 with incompatible type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype for 'f13' declares argument 1 with incompatible type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f1' follows non-prototype definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f4' follows non-prototype definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f9' follows non-prototype definition))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(prototype for 'f12' follows non-prototype definition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapdi-1_61:
  bin: '"optimize-bswapdi-1.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapdi-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapdi-2_26:
  bin: '"optimize-bswapdi-2.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapdi-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapdi-3_64:
  bin: '"optimize-bswapdi-3.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapdi-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-1_92:
  bin: '"optimize-bswapsi-1.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-2_48:
  bin: '"optimize-bswapsi-2.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-3_23:
  bin: '"optimize-bswapsi-3.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-4_28:
  bin: '"optimize-bswapsi-4.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_optimize-bswapsi-5_31:
  bin: '"optimize-bswapsi-5.s"'
  cargs: ' -O2 -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/optimize-bswapsi-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-1_9:
  bin: '"opts-1.s"'
  cargs: ' -Wno-strict-aliasing=1 -Wno-strict-overflow=1 -fno-abi-version=1 -fno-lto-compression-level=1 -fno-tree-parallelize-loops=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-strict-aliasing=1 -Wno-strict-overflow=1 -fno-abi-version=1 -fno-lto-compression-level=1 -fno-tree-parallelize-loops=1"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fno-abi-version" "-fno-abi-version))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fno-lto-compression-level" "-fno-lto-compression-level))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-fno-tree-parallelize-loops" "-fno-tree-parallelize-loops))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wno-strict-overflow" "-Wno-strict-overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(-Wno-strict-aliasing" "-Wno-strict-aliasing))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-2_8:
  bin: '"opts-2.s"'
  cargs: ' -I -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-I -O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-3_7:
  bin: '"opts-3.s"'
  cargs: ' -Xassembler -dumpmachine -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Xassembler -dumpmachine"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more data types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-4_8:
  bin: '"opts-4.s"'
  cargs: ' --dump=a -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--dump=a"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-5_5:
  bin: '"opts-5.s"'
  cargs: ' -fstack-limit -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-limit"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-6_6:
  bin: '"opts-6.s"'
  cargs: ' -ftemplate-depth= -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftemplate-depth="'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing argument" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-7_6:
  bin: '"opts-7.s"'
  cargs: ' --help=^ -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--help=^"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(missing argument to" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_opts-8_6:
  bin: '"opts-8.s"'
  cargs: ' --help=target --help=optimizers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/opts-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--help=target --help=optimizers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-1_21:
  bin: '"ordered-comparison-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-2_21:
  bin: '"ordered-comparison-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-3_21:
  bin: '"ordered-comparison-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ordered-comparison-4_21:
  bin: '"ordered-comparison-4.s"'
  cargs: ' -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ordered-comparison-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with null pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ordered comparison of pointer with null pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(distinct pointer types lacks a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_out-of-bounds-1_13:
  bin: '"out-of-bounds-1.s"'
  cargs: ' -O -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/out-of-bounds-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
      - '"-O -g -mstrict-align" { target { powerpc*-*-linux* powerpc*-*-elf* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-1_25:
  bin: '"overflow-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-2_13:
  bin: '"overflow-2.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-1_124:
  bin: '"overflow-warn-1.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "22:integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(10:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(15:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(16:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(21:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(16:division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(19:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(25:integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-2_135:
  bin: '"overflow-warn-2.s"'
  cargs: ' -std=c99 -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wtraditional-conversion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fuc' with different width due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fsi' as signed due to prototype))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fui' as unsigned due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'fui' as unsigned due to prototype" "-Wtraditional-conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-3_131:
  bin: '"overflow-warn-3.s"'
  cargs: ' -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-4_131:
  bin: '"overflow-warn-4.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E3' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(enumerator value for 'E4' is not an integer constant" "enum error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not an integer constant" "integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization makes pointer from integer without a cast" "null))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant" "constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in constant expression" "constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-5_7:
  bin: '"overflow-warn-5.s"'
  cargs: ' -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-6_18:
  bin: '"overflow-warn-6.s"'
  cargs: ' -std=c99 -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Woverflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow in expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-7_8:
  bin: '"overflow-warn-7.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_overflow-warn-8_23:
  bin: '"overflow-warn-8.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/overflow-warn-8.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow in implicit constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(integer overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-1_154:
  bin: '"pack-test-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-2_25:
  bin: '"pack-test-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(without matching))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(without matching))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(without matching))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(small power of two))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-3_44:
  bin: '"pack-test-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-3.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-4_36:
  bin: '"./pack-test-4.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pack-test-5_22:
  bin: '"./pack-test-5.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pack-test-5.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_packed-array_40:
  bin: '"./packed-array.exe"'
  cargs: ' -O2 -fno-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/packed-array.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_packed-vla_32:
  bin: '"./packed-vla.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/packed-vla.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-1_26:
  bin: '"parm-forwdecl-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration" "no parms))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(just a forward declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types|previous definition|just a forward declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-2_8:
  bin: '"parm-forwdecl-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-3_8:
  bin: '"parm-forwdecl-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward parameter declarations))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-forwdecl-4_10:
  bin: '"parm-forwdecl-4.s"'
  cargs: ' -Wredundant-decls -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-forwdecl-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wredundant-decls"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-impl-decl-1_33:
  bin: '"parm-impl-decl-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-impl-decl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('__mode__' attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-impl-decl-2_7:
  bin: '"parm-impl-decl-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-impl-decl-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(label 'z' referenced outside of any function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-impl-decl-3_28:
  bin: '"parm-impl-decl-3.s"'
  cargs: ' -g -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-impl-decl-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*('__mode__' attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-incomplete-1_27:
  bin: '"parm-incomplete-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-incomplete-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 1 \\('x'\\) has incomplete type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('struct t2' declared inside parameter list))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter 1 \\('x'\\) has void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(parameter 1 \\('x'\\) has void type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parm-mismatch-1_18:
  bin: '"parm-mismatch-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parm-mismatch-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f3'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-decl-after-if_11:
  bin: '"parse-decl-after-if.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-decl-after-if.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before 'int'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-decl-after-label_17:
  bin: '"parse-decl-after-label.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-decl-after-label.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a label can only be part of a statement and a declaration is not a statement))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error-2_13:
  bin: '"parse-else-error-2.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected .\}. before 'else'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier or '\\(' before .\}. token))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error-3_11:
  bin: '"parse-else-error-3.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('else' without a previous 'if'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error-4_14:
  bin: '"parse-else-error-4.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('else' without a previous 'if'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-else-error_12:
  bin: '"parse-else-error.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-else-error.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected .\}. before 'else'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-error-1_10:
  bin: '"parse-error-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-error-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-error-2_14:
  bin: '"parse-error-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-error-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parse-error-3_14:
  bin: '"parse-error-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parse-error-3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is initialized|non-standard|outside of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized|undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized|undeclared|no such parameter))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parser-pr28152-2_11:
  bin: '"parser-pr28152-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parser-pr28152-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__complex__))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(__complex__" "Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at end of input" "end of input))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_parser-pr28152_11:
  bin: '"parser-pr28152.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/parser-pr28152.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(_Complex" "_Complex))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(at end of input" "end of input))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pedwarn-init_20:
  bin: '"pedwarn-init.s"'
  cargs: ' -std=gnu99 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pedwarn-init.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(17:excess elements in vector initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(15:excess elements in scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(21:excess elements in array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(15:array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(15:array index in initializer is not an integer constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids" "ISO C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(13:array initialized from parenthesized string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(13:array initialized from parenthesized string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(12:array initialized from parenthesized string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(18:excess elements in union initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(14:initialization of a flexible array member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pg-override_18:
  bin: '"pg-override.s"'
  cargs: -fprofile -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pg-override.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile" { target i?86-*-linux* x86_64-*-linux* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pg_18:
  bin: '"pg.s"'
  cargs: -fprofile -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pg.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile" { target i?86-*-linux* x86_64-*-linux* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-1_11:
  bin: '"pic-1.s"'
  cargs: ' -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-2_12:
  bin: '"pic-2.s"'
  cargs: ' -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-3_10:
  bin: '"pic-3.s"'
  cargs: ' -fno-pic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-pic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pic-4_10:
  bin: '"pic-4.s"'
  cargs: ' -fno-PIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pic-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-PIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-1_11:
  bin: '"pie-1.s"'
  cargs: ' -fpie -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpie"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-2_12:
  bin: '"pie-2.s"'
  cargs: ' -fPIE -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fPIE"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-3_10:
  bin: '"pie-3.s"'
  cargs: ' -fno-pie -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-pie"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-4_10:
  bin: '"pie-4.s"'
  cargs: ' -fno-PIE -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-PIE"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-6_6:
  bin: '"pie-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pie-link_7:
  bin: '"pie-link.exe"'
  cargs: ' -fpie -pie'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pie-link.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpie -pie"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-10_14:
  bin: '"pointer-arith-10.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-1_39:
  bin: '"pointer-arith-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-2_41:
  bin: '"pointer-arith-2.s"'
  cargs: ' -Wpointer-arith -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-arith"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in subtraction))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in subtraction))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-3_41:
  bin: '"pointer-arith-3.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer of type 'void \\*' used in subtraction))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to a function used in subtraction))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-4_41:
  bin: '"pointer-arith-4.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in arithmetic))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in arithmetic" "array 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(subscripted value is pointer to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer of type 'void \\*' used in subtraction))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer to a function used in subtraction))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing 'void \\*' pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-5_17:
  bin: '"pointer-arith-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-6_17:
  bin: '"pointer-arith-6.s"'
  cargs: ' -Wpointer-arith -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpointer-arith"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-7_17:
  bin: '"pointer-arith-7.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-8_17:
  bin: '"pointer-arith-8.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a void type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to a function type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-arith-9_7:
  bin: '"pointer-arith-9.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-arith-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-array-atomic_60:
  bin: '"pointer-array-atomic.s"'
  cargs: ' -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-array-atomic.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(return from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose0' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 2 of 'transpose2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison of distinct pointer types lacks a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-array-quals-1_106:
  bin: '"pointer-array-quals-1.s"'
  cargs: ' -Wdiscarded-array-qualifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-array-quals-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wdiscarded-array-qualifiers"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(return discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'transpose0' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'transpose1' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'transpose2' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pointer-array-quals-2_102:
  bin: '"pointer-array-quals-2.s"'
  cargs: ' -Wdiscarded-array-qualifiers -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pointer-array-quals-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wdiscarded-array-qualifiers -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|return discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'transpose0' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'transpose1' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'transpose2' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose1' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose2' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 2 of 'transpose2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointer type mismatch in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location|pointers to arrays))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location|pointers to arrays))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'tvoid' discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment discards 'const' qualifier from pointer target type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer to array loses qualifier in conditional expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_postincr-1_21:
  bin: '"./postincr-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/postincr-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-1_6:
  bin: '"./pow-sqrt-1.exe"'
  cargs: ' -O2 -ffast-math --param max-pow-sqrt-depth=5'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math --param max-pow-sqrt-depth=5"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-2_5:
  bin: '"./pow-sqrt-2.exe"'
  cargs: ' -O2 -ffast-math --param max-pow-sqrt-depth=5'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math --param max-pow-sqrt-depth=5"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-3_5:
  bin: '"./pow-sqrt-3.exe"'
  cargs: ' -O2 -ffast-math --param max-pow-sqrt-depth=3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math --param max-pow-sqrt-depth=3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pow-sqrt-synth-1_37:
  bin: '"pow-sqrt-synth-1.s"'
  cargs: ' -fdump-tree-sincos -Ofast --param max-pow-sqrt-depth=8 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pow-sqrt-synth-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-sincos -Ofast --param max-pow-sqrt-depth=8"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr10392-1_63:
  bin: '"./pr10392-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr10392-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -m4" { target sh4-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr10474_16:
  bin: '"pr10474.s"'
  cargs: -O3 -fdump-rtl-pro_and_epilogue -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr10474.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-pro_and_epilogue" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr11459-1_6:
  bin: '"pr11459-1.s"'
  cargs: ' -ansi -std=c99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr11459-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi -std=c99 -pedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr11492_12:
  bin: '"pr11492.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr11492.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr11864-1_42:
  bin: '"./pr11864-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr11864-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr12603_8:
  bin: '"pr12603.s"'
  cargs: ' -O3 -Wall -Wextra -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr12603.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall -Wextra -Wreturn-type"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr12625-1_13:
  bin: '"pr12625-1.s"'
  cargs: ' -Wparentheses -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr12625-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wparentheses"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(parentheses" "warning for bit-field))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr13519-1_47:
  bin: '"pr13519-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr13519-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only" "correct error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr13804-1_28:
  bin: '"pr13804-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr13804-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s0' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('S0 {aka struct s0}' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u0' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('U0 {aka union u0}' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s0' has no member named 'c'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u0' has no member named 'c'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14092-1_20:
  bin: '"pr14092-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14092-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14475_10:
  bin: '"pr14475.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14475.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids forward references to" "forward ref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of bit-field .code. is a GCC extension" "extension))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "incomplete))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(narrower than values of its type" "narrower))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14649-1_16:
  bin: '"pr14649-1.s"'
  cargs: ' -O2 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14649-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(not a constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14765-1_11:
  bin: '"pr14765-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14765-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not ignored" "void stmt expr))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14796-1_23:
  bin: '"pr14796-1.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14796-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14796-2_22:
  bin: '"pr14796-2.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14796-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr14963_1:
  bin: '"pr14963.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr14963.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "error before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15236_9:
  bin: '"pr15236.s"'
  cargs: ' -Wall -Wextra -pedantic-errors -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15236.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -pedantic-errors -Wconversion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C restricts enumerator values to range of .int.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15347_11:
  bin: '"pr15347.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15347.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15360-1_24:
  bin: '"pr15360-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15360-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-static" "correct error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-static" "correct error))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both" "extern init in function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initialized and declared" "extern init warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15443-1_10:
  bin: '"pr15443-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15443-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15443-2_15:
  bin: '"pr15443-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15443-2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15649-1_7:
  bin: '"pr15649-1.s"'
  cargs: ' -ffast-math -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15649-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-1_23:
  bin: '"pr15698-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 'a' doesn't match built-in prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-2_9:
  bin: '"pr15698-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-3_11:
  bin: '"pr15698-3.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 'a' doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-4_9:
  bin: '"pr15698-4.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-5_10:
  bin: '"pr15698-5.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-6_9:
  bin: '"pr15698-6.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(number of arguments doesn't match built-in prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-7_10:
  bin: '"pr15698-7.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(number of arguments doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15698-8_11:
  bin: '"pr15698-8.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15698-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(prototype declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 'a' doesn't match prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15749-1_8:
  bin: '"pr15749-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15749-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-1_42:
  bin: '"pr15784-1.s"'
  cargs: ' -fstrict-overflow -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-2_11:
  bin: '"pr15784-2.s"'
  cargs: ' -fdump-tree-gimple -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-3_13:
  bin: '"pr15784-3.s"'
  cargs: ' -fdump-tree-gimple -fno-finite-math-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -fno-finite-math-only"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15784-4_12:
  bin: '"pr15784-4.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15784-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15785-1_42:
  bin: '"pr15785-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15785-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr15825-1_18:
  bin: '"pr15825-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr15825-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16107_16:
  bin: '"pr16107.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16107.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16194_78:
  bin: '"pr16194.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16194.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16302_76:
  bin: '"pr16302.s"'
  cargs: ' -Wlogical-op -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16302.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*('or' of collectively exhaustive tests is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*('and' of mutually exclusive tests is always false))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr16973_13:
  bin: '"pr16973.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr16973.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17024-1_15:
  bin: '"pr17024-1.s"'
  cargs: ' -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17024-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17036-1_11:
  bin: '"pr17036-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17036-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17055-1_25:
  bin: '"pr17055-1.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17055-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17112-1_33:
  bin: '"./pr17112-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17112-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17188-1_31:
  bin: '"pr17188-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17188-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s0'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s1'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s2'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s3'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of 'struct s4'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17301-1_11:
  bin: '"pr17301-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17301-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function 'va_start'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17301-2_9:
  bin: '"pr17301-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17301-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too few arguments to function '__builtin_va_start'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17319_12:
  bin: '"pr17319.s"'
  cargs: ' -O2 -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17319.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17322_5:
  bin: '"pr17322.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17322.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17424-1_5:
  bin: '"pr17424-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17424-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('tni' undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17581-1_30:
  bin: '"./pr17581-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17581-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17635_11:
  bin: '"pr17635.s"'
  cargs: ' -O2 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17635.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17730-1_5:
  bin: '"pr17730-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17730-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue required as unary '&' operand))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17844-1_20:
  bin: '"pr17844-1.s"'
  cargs: ' -fshort-enums -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17844-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr17957_19:
  bin: '"pr17957.s"'
  cargs: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr17957.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18079_33:
  bin: '"pr18079.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18079.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored due to conflict))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18164_8:
  bin: '"pr18164.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18164.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output operand constraint lacks))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-1_111:
  bin: '"./pr18241-1.exe"'
  cargs: ' -std=gnu99 -Wall -Wextra -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Wextra -O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-2_65:
  bin: '"./pr18241-2.exe"'
  cargs: ' -std=gnu99 -Wall -Wextra -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Wextra -O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-3_31:
  bin: '"./pr18241-3.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-4_22:
  bin: '"./pr18241-4.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18241-5_14:
  bin: '"./pr18241-5.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18241-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18479_3:
  bin: '"pr18479.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18479.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored on types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18501_20:
  bin: '"pr18501.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18501.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "conditional in loop))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18502-1_7:
  bin: '"pr18502-1.s"'
  cargs: ' -std=gnu99 -trigraphs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18502-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -trigraphs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18520-1_11:
  bin: '"pr18520-1.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18520-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18596-1_39:
  bin: '"pr18596-1.s"'
  cargs: ' -fno-unit-at-a-time -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18596-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-unit-at-a-time -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18596-2_39:
  bin: '"pr18596-2.s"'
  cargs: ' -funit-at-a-time -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18596-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funit-at-a-time -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18596-3_13:
  bin: '"pr18596-3.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18596-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized like a variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declared but never defined" "nested))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18628_31:
  bin: '"pr18628.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18628.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18725_9:
  bin: '"pr18725.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18725.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(output operand constraint lacks))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18809-1_9:
  bin: '"pr18809-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18809-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forward ref" "forward))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete" "incomplete))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(declared" "declared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18921-1_20:
  bin: '"./pr18921-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18921-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18928-1_20:
  bin: '"pr18928-1.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18928-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr18963-1_29:
  bin: '"./pr18963-1.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr18963-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19105_21:
  bin: '"pr19105.s"'
  cargs: ' -O2 -fdump-tree-reassoc1-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19105.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-reassoc1-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19340_27:
  bin: '"pr19340.s"'
  cargs: ' -O1 -fschedule-insns2 -fsched2-use-superblocks -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19340.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fschedule-insns2 -fsched2-use-superblocks"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19345_12:
  bin: '"pr19345.s"'
  cargs: ' -O1 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19345.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19402-1_29:
  bin: '"pr19402-1.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19402-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19402-2_82:
  bin: '"./pr19402-2.exe"'
  cargs: ' -fno-inline -Os'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19402-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-inline -Os"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19633-1_67:
  bin: '"./pr19633-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19633-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19633_52:
  bin: '"pr19633.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19633.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19967_26:
  bin: '"pr19967.s"'
  cargs: ' -pedantic -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19967.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19984_17:
  bin: '"pr19984.s"'
  cargs: ' -O2 -std=c99 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19984.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*((not a constant)|(near initialization)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr19988_12:
  bin: '"pr19988.s"'
  cargs: ' -O -fdump-tree-optimized -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr19988.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20017_41:
  bin: '"pr20017.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20017.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
      - '"-O1 -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20054_23:
  bin: '"pr20054.s"'
  cargs: ' -O2 -fno-strict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20054.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20100_32:
  bin: '"./pr20100.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20100.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20115-1_14:
  bin: '"pr20115-1.s"'
  cargs: ' -O2 -fdump-tree-dom2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20115-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-dom2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20115_28:
  bin: '"./pr20115.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20115.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20126_50:
  bin: '"pr20126.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20126.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20130-1_14:
  bin: '"pr20130-1.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20130-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20216_14:
  bin: '"pr20216.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20216.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20245-1_5:
  bin: '"pr20245-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20245-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20368-1_12:
  bin: '"pr20368-1.s"'
  cargs: ' -Wstrict-prototypes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20368-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('f' undeclared here \\(not in a function\\)))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(function declaration isn't a prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20368-2_12:
  bin: '"pr20368-2.s"'
  cargs: ' -Wmissing-prototypes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20368-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('f' undeclared here \\(not in a function\\)))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype for 'f'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20368-3_12:
  bin: '"pr20368-3.s"'
  cargs: ' -Wmissing-declarations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20368-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-declarations"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('f' undeclared here \\(not in a function\\)))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous declaration for 'f'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20672-1_7:
  bin: '"pr20672-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20672-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-1_37:
  bin: '"pr20922-1.s"'
  cargs: ' -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-2_17:
  bin: '"pr20922-2.s"'
  cargs: ' -fwrapv -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fwrapv -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-3_32:
  bin: '"pr20922-3.s"'
  cargs: ' -ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-4_37:
  bin: '"pr20922-4.s"'
  cargs: ' -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-5_22:
  bin: '"pr20922-5.s"'
  cargs: ' -fsignaling-nans -fwrapv -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsignaling-nans -fwrapv -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr20922-6_32:
  bin: '"pr20922-6.s"'
  cargs: ' -ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr20922-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math -fno-wrapv -fstrict-overflow -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21032_10:
  bin: '"pr21032.s"'
  cargs: ' -O -fdump-tree-optimized -frounding-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21032.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized -frounding-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21041_42:
  bin: '"pr21041.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21041.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21085_9:
  bin: '"pr21085.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21085.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21282_9:
  bin: '"pr21282.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21282.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21419_15:
  bin: '"pr21419.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21419.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(read-only parameter))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21643_89:
  bin: '"pr21643.s"'
  cargs: ' -O2 -fdump-tree-reassoc1-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21643.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-reassoc1-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21709-1_6:
  bin: '"pr21709-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21709-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21858_15:
  bin: '"pr21858.s"'
  cargs: ' -Os -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21858.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr21921_14:
  bin: '"pr21921.s"'
  cargs: ' -O1 -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr21921.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22231_7:
  bin: '"pr22231.s"'
  cargs: ' -MG -MD -c -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22231.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-MG -MD -c"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(may only be used with -M" "-MG incompatible with -c))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22308-1_13:
  bin: '"pr22308-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22308-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only variable 't'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22311-1_6:
  bin: '"pr22311-1.s"'
  cargs: ' -fshort-enums -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22311-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshort-enums"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22329_9:
  bin: '"pr22329.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22329.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22335-1_10:
  bin: '"pr22335-1.s"'
  cargs: ' -O1 -fdelete-null-pointer-checks -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22335-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdelete-null-pointer-checks" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22335-2_39:
  bin: '"pr22335-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22335-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22356-1_11:
  bin: '"pr22356-1.s"'
  cargs: ' -O2 -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22356-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr22458-1_6:
  bin: '"pr22458-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr22458-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected declaration or statement" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23049_27:
  bin: '"pr23049.s"'
  cargs: ' -O3 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23049.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23075_14:
  bin: '"pr23075.s"'
  cargs: ' -O2 -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23075.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(with no value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches end))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23165_9:
  bin: '"pr23165.s"'
  cargs: ' -Wempty-body -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23165.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wempty-body"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(empty body in an))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23200_22:
  bin: '"pr23200.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23200.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23295_9:
  bin: '"pr23295.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23295.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23408_6:
  bin: '"pr23408.s"'
  cargs: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23408.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23470-1_13:
  bin: '"pr23470-1.s"'
  cargs: ' -O2 -ffast-math -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23470-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23518_21:
  bin: '"./pr23518.exe"'
  cargs: ' -O2 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23518.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23547_14:
  bin: '"pr23547.s"'
  cargs: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23547.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23584_20:
  bin: '"pr23584.s"'
  cargs: ' -O1 -fdump-ipa-pure-const -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23584.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-ipa-pure-const"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23623_47:
  bin: '"pr23623.s"'
  cargs: -fstrict-volatile-bitfields -fdump-rtl-final -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23623.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields -fdump-rtl-final"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23818_33:
  bin: '"./pr23818.exe"'
  cargs: ' -O2 -fno-tree-dominator-opts'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23818.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dominator-opts"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr23911_20:
  bin: '"pr23911.s"'
  cargs: ' -O -fdump-tree-dce3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr23911.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-dce3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24101-1_4:
  bin: '"pr24101-1.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24101-1.i'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24101-2_4:
  bin: '"pr24101-2.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24101-2.i'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24225_16:
  bin: '"pr24225.s"'
  cargs: ' -O1 -fprofile-arcs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24225.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fprofile-arcs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24293_12:
  bin: '"pr24293.s"'
  cargs: ' -fsyntax-only -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24293.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsyntax-only"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'x' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'y' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'p_obj' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'e_var' isn't known))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24367_17:
  bin: '"pr24367.s"'
  cargs: ' -O2 -fPIC -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24367.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24445_9:
  bin: '"pr24445.s"'
  cargs: ' -O1 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24445.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24561_6:
  bin: '"pr24561.s"'
  cargs: -O0 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24561.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24574_36:
  bin: '"pr24574.s"'
  cargs: ' -O -fdump-tree-phiopt1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24574.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-phiopt1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24600_16:
  bin: '"pr24600.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24600.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24615_27:
  bin: '"pr24615.s"'
  cargs: ' -Os -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24615.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24620_27:
  bin: '"pr24620.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24620.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24683_11:
  bin: '"pr24683.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24683.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr24820_12:
  bin: '"pr24820.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr24820.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25023_12:
  bin: '"pr25023.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25023.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25376_9:
  bin: '"pr25376.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25376.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25529_11:
  bin: '"pr25529.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25529.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25530_11:
  bin: '"pr25530.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25530.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25559_10:
  bin: '"pr25559.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25559.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero vector size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple of component size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple of component size))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25682_29:
  bin: '"pr25682.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25682.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(variably modified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(variably modified))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25795-1_11:
  bin: '"pr25795-1.s"'
  cargs: -O3 -fwhole-program -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25795-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fwhole-program"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25795_11:
  bin: '"pr25795.s"'
  cargs: -O3 -fwhole-program -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25795.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fwhole-program"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25801_44:
  bin: '"pr25801.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25801.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of array with unspecified bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of array with unspecified bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(increment of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(decrement of pointer to an incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(arithmetic on pointer to an incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr25805_21:
  bin: '"./pr25805.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr25805.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26004_11:
  bin: '"pr26004.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26004.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26570_8:
  bin: '"pr26570.s"'
  cargs: ' -O2 -fprofile-generate -fprofile-use -fopt-info -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26570.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-generate -fprofile-use -fopt-info"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26632_14:
  bin: '"pr26632.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26632.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26717_7:
  bin: '"pr26717.s"'
  cargs: ' -O -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26717.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26719_21:
  bin: '"./pr26719.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26719.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26729-1_16:
  bin: '"./pr26729-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26729-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26865_8:
  bin: '"pr26865.s"'
  cargs: ' -O2 -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26865.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration|initialization makes))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26961-1_8:
  bin: '"pr26961-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26961-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr26983_20:
  bin: '"pr26983.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr26983.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27003_30:
  bin: '"./pr27003.exe"'
  cargs: ' -Os'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27003.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27095_33:
  bin: '"pr27095.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27095.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mno-relax-pic-calls" { target mips*-*-* }'
      - '"-O2 -mshort-calls" { target epiphany-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27132_9:
  bin: '"pr27132.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27132.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27150-1_14:
  bin: '"pr27150-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27150-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27301_16:
  bin: '"pr27301.s"'
  cargs: ' -O2 -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27301.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27314_14:
  bin: '"pr27314.s"'
  cargs: ' -O1 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27314.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27331_56:
  bin: '"pr27331.s"'
  cargs: ' -O2 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27331.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27335_27:
  bin: '"pr27335.s"'
  cargs: ' -O2 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27335.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27363_39:
  bin: '"./pr27363.exe"'
  cargs: ' -Os'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27363.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27382-1_8:
  bin: '"pr27382-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27382-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27382-2_8:
  bin: '"pr27382-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27382-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27428-1_9:
  bin: '"pr27428-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27428-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(too many decimal points))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27528_18:
  bin: '"pr27528.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27528.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(probably doesn't match))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27531-1_116:
  bin: '"pr27531-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27531-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27639_14:
  bin: '"pr27639.s"'
  cargs: ' -O2 -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27639.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27671-2_24:
  bin: '"./pr27671-2.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27671-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
      - '"-O1 -march=pentium4" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27758_24:
  bin: '"./pr27758.exe"'
  cargs: ' -O0 -fpic'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27758.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fpic"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27802-1_16:
  bin: '"pr27802-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27802-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27861-1_69:
  bin: '"pr27861-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27861-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27953_7:
  bin: '"pr27953.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27953.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition" "redef))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(declared inside parameter list" "inside))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27959-2_94:
  bin: '"./pr27959-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27959-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=z990" { target s390*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr27959_93:
  bin: '"./pr27959.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr27959.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=z990" { target s390*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28121_30:
  bin: '"pr28121.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28121.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28162_17:
  bin: '"pr28162.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28162.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28187_22:
  bin: '"pr28187.s"'
  cargs: ' -O -ftree-vrp -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28187.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vrp -fwrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28243_55:
  bin: '"pr28243.s"'
  cargs: ' -O2 -ftracer -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28243.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28322-2_12:
  bin: '"pr28322-2.s"'
  cargs: ' -Wall -Wextra -Wno-foobar -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28322-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -Wno-foobar"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(unrecognized command line option .-Wno-foobar." "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28322-3_10:
  bin: '"pr28322-3.s"'
  cargs: '  -fno-foobar -mno-foobar -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28322-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -fno-foobar -mno-foobar"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28322_8:
  bin: '"pr28322.s"'
  cargs: '  -Wno-foobar -Wno-div-by-zero -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28322.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -Wno-foobar -Wno-div-by-zero"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28402_22:
  bin: '"pr28402.s"'
  cargs: -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28402.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28419_3:
  bin: '"pr28419.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28419.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28574_75:
  bin: '"pr28574.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28574.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28685-1_49:
  bin: '"pr28685-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -fno-ipa-icf -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28685-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -fno-ipa-icf"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28726_29:
  bin: '"./pr28726.exe"'
  cargs: ' -O2 -fsched2-use-superblocks'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28726.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28755_24:
  bin: '"pr28755.s"'
  cargs: -Os -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28755.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28796-1_62:
  bin: '"pr28796-1.exe"'
  cargs: ' -ffinite-math-only'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28796-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffinite-math-only"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28796-2_11:
  bin: '"./pr28796-2.exe"'
  cargs: ' -O2 -funsafe-math-optimizations -fno-finite-math-only -DUNSAFE'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28796-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funsafe-math-optimizations -fno-finite-math-only -DUNSAFE"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28888_23:
  bin: '"pr28888.s"'
  cargs: ' -O2 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28888.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28911_13:
  bin: '"pr28911.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28911.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -m68000" { target m68k-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr28935_15:
  bin: '"pr28935.s"'
  cargs: ' -O3 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr28935.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29091_44:
  bin: '"./pr29091.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29091.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29215_32:
  bin: '"pr29215.s"'
  cargs: ' -O2 -fdump-tree-ccp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29215.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29254_26:
  bin: '"pr29254.s"'
  cargs: ' -O3 -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29254.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29299_10:
  bin: '"pr29299.s"'
  cargs: -O -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29299.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29467_13:
  bin: '"pr29467.s"'
  cargs: ' -std=c89 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29467.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C90 does not support boolean types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29521-2_15:
  bin: '"pr29521-2.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29521-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids 'return' with expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('return' with a value))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29521_15:
  bin: '"pr29521.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29521.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*('return' with a value))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29637_23:
  bin: '"pr29637.s"'
  cargs: ' -O2 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29637.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29683_43:
  bin: '"./pr29683.exe"'
  cargs: ' -Os -fno-inline-functions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29683.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-inline-functions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29736_13:
  bin: '"pr29736.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29736.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid vector type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29801_23:
  bin: '"pr29801.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29801.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29921-2_27:
  bin: '"pr29921-2.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29921-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr29921_20:
  bin: '"pr29921.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr29921.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30045_15:
  bin: '"pr30045.s"'
  cargs: ' -O2 -fno-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30045.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-inline"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30137-1_22:
  bin: '"pr30137-1.s"'
  cargs: ' -w -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30137-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30137-2_19:
  bin: '"pr30137-2.s"'
  cargs: ' -w -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30137-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30172-1_14:
  bin: '"pr30172-1.s"'
  cargs: ' -fno-signed-zeros -ffinite-math-only -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30172-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-signed-zeros -ffinite-math-only -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30189_18:
  bin: '"pr30189.s"'
  cargs: ' -g -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30189.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30260_34:
  bin: '"pr30260.exe"'
  cargs: ' -pedantic -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30260.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in enumeration values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow in enumeration values))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30286_38:
  bin: '"./pr30286.exe"'
  cargs: ' -O2 -ftrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30286.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30360_25:
  bin: '"./pr30360.exe"'
  cargs: ' -O2 -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30360.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30457_26:
  bin: '"pr30457.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30457.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined behavior when second parameter of 'va_start' is declared with 'register' storage))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*('char' is promoted to 'int' when passed through '...'" "promoted))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30473_13:
  bin: '"pr30473.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30473.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-2_8:
  bin: '"pr30551-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-3_7:
  bin: '"pr30551-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(first argument of .main. should be .int." "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.main. takes only zero or two arguments" "zero or two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(return type of .main. is not .int." "return type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-4_8:
  bin: '"pr30551-4.s"'
  cargs: ' -pedantic-errors -Wno-main -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -Wno-main"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-5_7:
  bin: '"pr30551-5.s"'
  cargs: ' -pedantic -Wno-main -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wno-main"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551-6_7:
  bin: '"pr30551-6.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(first argument of .main. should be .int." "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(.main. takes only zero or two arguments" "zero or two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(return type of .main. is not .int." "return type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30551_7:
  bin: '"pr30551.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30551.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(first argument of .main. should be .int." "int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(.main. takes only zero or two arguments" "zero or two))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(return type of .main. is not .int." "return type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30643_26:
  bin: '"pr30643.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30643.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr3074-1_9:
  bin: '"pr3074-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr3074-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect" "no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30744-1_18:
  bin: '"pr30744-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30744-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30762-1_18:
  bin: '"pr30762-1.exe"'
  cargs: ' -flto -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30762-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30762-2_9:
  bin: '"pr30762-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30762-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30904_17:
  bin: '"pr30904.exe"'
  cargs: ' -O2 -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30904.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30949_11:
  bin: '"pr30949.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30949.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of 'recv' from incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30951_36:
  bin: '"pr30951.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30951.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr30957-1_36:
  bin: '"./pr30957-1.exe"'
  cargs: -O2 -funroll-loops -fassociative-math -fno-trapping-math -fno-signed-zeros -fvariable-expansion-in-unroller -fdump-rtl-loop2_unroll -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr30957-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -fassociative-math -fno-trapping-math -fno-signed-zeros -fvariable-expansion-in-unroller -fdump-rtl-loop2_unroll"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31096-1_59:
  bin: '"pr31096-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31096-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31096_36:
  bin: '"pr31096.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31096.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31127_15:
  bin: '"pr31127.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31127.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490-2_7:
  bin: '"pr31490-2.s"'
  cargs: ' -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490-3_7:
  bin: '"pr31490-3.s"'
  cargs: ' -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490-4_10:
  bin: '"pr31490-4.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31490_10:
  bin: '"pr31490.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31490.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31507-1_42:
  bin: '"./pr31507-1.exe"'
  cargs: ' -Os -fno-omit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31507-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31507-2_14:
  bin: '"pr31507-2.s"'
  cargs: ' -Os -fno-omit-frame-pointer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31507-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31529-1_11:
  bin: '"pr31529-1.exe"'
  cargs: ' -flto -fgnu89-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31529-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -fgnu89-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31529-2_7:
  bin: '"pr31529-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31529-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31847_14:
  bin: '"pr31847.s"'
  cargs: ' -O2 -fdump-tree-pre-all -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31847.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-pre-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31866_28:
  bin: '"pr31866.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31866.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr31959_20:
  bin: '"pr31959.s"'
  cargs: ' -O0 -fguess-branch-probability -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr31959.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fguess-branch-probability"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32041_12:
  bin: '"pr32041.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32041.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32061_10:
  bin: '"pr32061.s"'
  cargs: ' -Wlogical-op -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32061.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op -Wall -Wextra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32069_7:
  bin: '"pr32069.s"'
  cargs: ' -O0 -fsplit-wide-types -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32069.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fsplit-wide-types"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32135_11:
  bin: '"pr32135.s"'
  cargs: ' -Warray-bounds -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32135.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Warray-bounds -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32176_30:
  bin: '"pr32176.s"'
  cargs: ' -O2 -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32176.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32207_9:
  bin: '"pr32207.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32207.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(always evaluate as))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32293_61:
  bin: '"pr32293.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32293.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32328_16:
  bin: '"pr32328.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32328.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32338-1_47:
  bin: '"pr32338-1.exe"'
  cargs: ' -O2 -fno-omit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32338-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-omit-frame-pointer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32338-2_47:
  bin: '"pr32338-2.exe"'
  cargs: ' -O2 -fno-omit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32338-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-omit-frame-pointer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32370_30:
  bin: '"pr32370.s"'
  cargs: ' -ffixed-esi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32370.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"" { target ia64-*-* }'
      - '"-ffixed-esi" { target i?86-*-* x86_64-*-* }'
      - '"-mabi=sysv -ffixed-esi" { target x86_64-*-mingw* }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(while reloading\|has impossible\|inconsistent operand constraints))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32374_20:
  bin: '"pr32374.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32374.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32450_36:
  bin: '"./pr32450.exe"'
  cargs: ' -O2 -pg -mtune=core2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32450.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pg"'
      - '"-O2 -pg -mtune=core2" { target { i?86-*-* x86_64-*-* } }'
      - '"-O2 -pg -static" { target hppa*-*-hpux* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32559_9:
  bin: '"pr32559.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32559.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32573_32:
  bin: '"pr32573.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32573.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32721_18:
  bin: '"pr32721.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32721.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32773_9:
  bin: '"pr32773.s"'
  cargs: ' -O -fprofile-use -fopt-info -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32773.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-use -fopt-info"'
      - '"-O -m4 -fprofile-use -fopt-info" { target sh-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32912-1_47:
  bin: '"./pr32912-1.exe"'
  cargs: ' -O2 -w -msse'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32912-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32912-2_58:
  bin: '"./pr32912-2.exe"'
  cargs: ' -O2 -w'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32912-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32912-3_13:
  bin: '"pr32912-3.s"'
  cargs: ' -w -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32912-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr32975_23:
  bin: '"pr32975.s"'
  cargs: ' -O1 -finline-functions -fipa-cp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr32975.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -finline-functions -fipa-cp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33007_11:
  bin: '"pr33007.s"'
  cargs: ' -O -ffast-math -ftrapping-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33007.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -ftrapping-math"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(-fassociative-math disabled" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33017_30:
  bin: '"./pr33017.exe"'
  cargs: ' -O2 -ftree-vectorize'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33017.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33092_6:
  bin: '"pr33092.s"'
  cargs: ' -O1 -fno-tree-salias -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33092.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-salias"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33136-1_54:
  bin: '"./pr33136-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33136-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33136-2_60:
  bin: '"./pr33136-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33136-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33136-3_60:
  bin: '"./pr33136-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33136-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33238_13:
  bin: '"pr33238.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33238.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-1_25:
  bin: '"./pr33434-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-2_26:
  bin: '"./pr33434-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-3_31:
  bin: '"./pr33434-3.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33434-4_18:
  bin: '"pr33434-4.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33434-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33619_45:
  bin: '"./pr33619.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33619.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33644_19:
  bin: '"pr33644.s"'
  cargs: ' -O2 -ftrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33644.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33645-1_18:
  bin: '"pr33645-1.exe"'
  cargs: ' -O2 -fno-unit-at-a-time'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33645-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-unit-at-a-time"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33645-2_20:
  bin: '"pr33645-2.s"'
  cargs: -O2 -funit-at-a-time -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33645-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funit-at-a-time"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33648_14:
  bin: '"pr33648.s"'
  cargs: ' -O2 -fmodulo-sched -freorder-blocks-and-partition -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33648.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -freorder-blocks-and-partition"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33653_9:
  bin: '"pr33653.s"'
  cargs: -O2 -fdump-rtl-shorten -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33653.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-shorten"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33666_11:
  bin: '"pr33666.s"'
  cargs: '  -std=c99  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33666.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '{ -std=c99 }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33667_21:
  bin: '"pr33667.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33667.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33670_19:
  bin: '"pr33670.s"'
  cargs: ' -O2 -fsched-stalled-insns=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33670.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched-stalled-insns=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33673_43:
  bin: '"pr33673.s"'
  cargs: ' -Os -fno-forward-propagate -fno-guess-branch-probability -fno-move-loop-invariants -fno-tree-dominator-opts -fno-tree-loop-optimize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33673.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-forward-propagate -fno-guess-branch-probability -fno-move-loop-invariants -fno-tree-dominator-opts -fno-tree-loop-optimize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33676_52:
  bin: '"./pr33676.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33676.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
      - '"-O0 -mtune=i386 -fomit-frame-pointer" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33691_8:
  bin: '"pr33691.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33691.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33692_12:
  bin: '"pr33692.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33692.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33693_8:
  bin: '"pr33693.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33693.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33694_9:
  bin: '"pr33694.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33694.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33695_8:
  bin: '"pr33695.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33695.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33696_13:
  bin: '"pr33696.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33696.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33697_10:
  bin: '"pr33697.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33697.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33724_20:
  bin: '"pr33724.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33724.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33726_17:
  bin: '"pr33726.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33726.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33742_16:
  bin: '"pr33742.s"'
  cargs: ' -O2 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33742.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33826_50:
  bin: '"pr33826.s"'
  cargs: ' -O1 -fdump-tree-local-pure-const1 -fdump-ipa-pure-const -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33826.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-tree-local-pure-const1 -fdump-ipa-pure-const"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33919_26:
  bin: '"./pr33919.exe"'
  cargs: ' -I . -include ./gcc.dg/pr33919-0.h'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33919.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-I . -include ${srcdir}/gcc.dg/pr33919-0.h"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33923_77:
  bin: '"pr33923.s"'
  cargs: ' -O3 --param max-partial-antic-length=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33923.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 --param max-partial-antic-length=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr33961_23:
  bin: '"./pr33961.exe"'
  cargs: ' -O2 -ftree-cselim'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr33961.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-cselim"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34003-1_8:
  bin: '"pr34003-1.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34003-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34003-2_20:
  bin: '"pr34003-2.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34003-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34027-1_15:
  bin: '"pr34027-1.s"'
  cargs: ' -Os -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34027-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34027-2_9:
  bin: '"pr34027-2.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34027-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34088_24:
  bin: '"pr34088.s"'
  cargs: ' -O -Wall -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34088.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -Werror"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34171_27:
  bin: '"pr34171.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34171.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34225_61:
  bin: '"pr34225.s"'
  cargs: ' -O2 -fno-strict-aliasing -fstack-protector -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34225.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing -fstack-protector"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34233_8:
  bin: '"pr34233.s"'
  cargs: ' -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34233.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34263_59:
  bin: '"./pr34263.exe"'
  cargs: ' -O2 -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34263.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34351_4:
  bin: '"pr34351.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34351.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(optimization may eliminate reads and/or writes to register variables))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34457-1_25:
  bin: '"pr34457-1.exe"'
  cargs: ' -flto -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34457-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34457-2_3:
  bin: '"pr34457-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34457-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34668-1_22:
  bin: '"pr34668-1.exe"'
  cargs: ' -flto -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34668-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34668-2_5:
  bin: '"pr34668-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34668-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34825_8:
  bin: '"pr34825.s"'
  cargs: ' -O -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34825.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34856_32:
  bin: '"pr34856.s"'
  cargs: ' -O2 -msse2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34856.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -msse2" { target { i?86-*-* x86_64-*-* } }'
      - '"-O2 -maltivec" { target { powerpc*-*-linux* && powerpc_altivec_ok } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34965_13:
  bin: '"pr34965.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34965.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\\(i != 0 \\&\\& j != 0\\)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\\(i == 0 \\|\\| j == 0\\)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(\\(i != 0 \\^ j == 0\\)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34969_15:
  bin: '"pr34969.s"'
  cargs: ' -O -fipa-cp -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34969.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fipa-cp -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr34985_9:
  bin: '"pr34985.s"'
  cargs: -Wall -Wextra -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr34985.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35045_38:
  bin: '"./pr35045.exe"'
  cargs: ' -O2 -fgcse-after-reload'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35045.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgcse-after-reload"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35065_230:
  bin: '"pr35065.s"'
  cargs: ' -O2 -g -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35065.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35258_32:
  bin: '"./pr35258.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35258.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35264_24:
  bin: '"./pr35264.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35264.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35334_22:
  bin: '"pr35334.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35334.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35430_10:
  bin: '"pr35430.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35430.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between signed and unsigned integer expressions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35440_12:
  bin: '"pr35440.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35440.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(called object))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35442_15:
  bin: '"pr35442.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35442.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-mabi=altivec" { target { { powerpc*-*-linux* } && ilp32 } }'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35443_9:
  bin: '"pr35443.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35443.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35445_6:
  bin: '"pr35445.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35445.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35468_10:
  bin: '"pr35468.s"'
  cargs: ' -O2 -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35468.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35616_43:
  bin: '"./pr35616.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35616.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35635_90:
  bin: '"pr35635.s"'
  cargs: ' -Wconversion -Wsign-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35635.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35691-1_12:
  bin: '"pr35691-1.s"'
  cargs: ' -O2 -fdump-tree-forwprop-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35691-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35691-2_12:
  bin: '"pr35691-2.s"'
  cargs: ' -O2 -fdump-tree-forwprop-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35691-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35701_31:
  bin: '"pr35701.s"'
  cargs: ' -Wconversion -Wsign-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35701.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35729_17:
  bin: '"pr35729.s"'
  cargs: -Os -fdump-rtl-loop2_invariant -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35729.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-rtl-loop2_invariant"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35736_9:
  bin: '"pr35736.s"'
  cargs: ' -O -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35736.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35742_13:
  bin: '"pr35742.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35742.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is not a function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35746_12:
  bin: '"pr35746.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35746.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr35899_17:
  bin: '"pr35899.s"'
  cargs: ' -std=gnu89 -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr35899.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(conflicting types for))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36015_22:
  bin: '"./pr36015.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36015.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
      - '"-O0 -mregparm=3" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36017_29:
  bin: '"./pr36017.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36017.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36111_16:
  bin: '"pr36111.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36111.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36194_30:
  bin: '"./pr36194.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36194.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36224_249:
  bin: '"./pr36224.exe"'
  cargs: ' -O2 -ftree-vectorize'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36224.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36227_22:
  bin: '"pr36227.s"'
  cargs: ' -O2 -Wstrict-overflow=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36227.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow=3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36300-1_27:
  bin: '"./pr36300-1.exe"'
  cargs: ' -O2 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36300-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36300-2_28:
  bin: '"./pr36300-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36300-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36489_22:
  bin: '"pr36489.s"'
  cargs: ' -Woverride-init -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36489.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverride-init"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(initializ))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36504_26:
  bin: '"pr36504.s"'
  cargs: ' -O3 -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36504.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fprefetch-loop-arrays -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36508_29:
  bin: '"pr36508.s"'
  cargs: ' -O -ftree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36508.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36584_267:
  bin: '"./pr36584.exe"'
  cargs: ' -O2 -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36584.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -lm"'
      - '"-O2 -msse2 -mfpmath=sse" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36774-1_9:
  bin: '"pr36774-1.s"'
  cargs: ' -Wmissing-prototypes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36774-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36774-2_9:
  bin: '"pr36774-2.s"'
  cargs: ' -Wmissing-declarations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36774-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-declarations"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no previous declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-1_7:
  bin: '"pr36901-1.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-2_7:
  bin: '"pr36901-2.s"'
  cargs: ' -pedantic-errors -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-3_9:
  bin: '"pr36901-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with integer zero" "pedantic error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36901-4_9:
  bin: '"pr36901-4.s"'
  cargs: ' -pedantic-errors -Wsystem-headers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36901-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -Wsystem-headers"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ordered comparison of pointer with integer zero" "pedantic error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36902_61:
  bin: '"pr36902.s"'
  cargs: ' -O2 -Warray-bounds -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36902.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds -Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(array subscript is above array bounds" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36991_12:
  bin: '"pr36991.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36991.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36997_9:
  bin: '"pr36997.s"'
  cargs: ' -std=c99 -msse2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36997.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -msse2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr36998_24:
  bin: '"pr36998.s"'
  cargs: ' -Os -fasynchronous-unwind-tables -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr36998.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fasynchronous-unwind-tables"'
      - '"-Os -mpreferred-stack-boundary=2 -fasynchronous-unwind-tables" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-fno-omit-frame-pointer" { target { avr-*-* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37106-1_27:
  bin: '"pr37106-1.s"'
  cargs: ' -O1 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37106-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
      - '"-O1 -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37106-2_27:
  bin: '"pr37106-2.s"'
  cargs: ' -O3 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37106-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37156_21:
  bin: '"pr37156.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37156.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(is experimental))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37171_18:
  bin: '"pr37171.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37171.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37186_9:
  bin: '"pr37186.s"'
  cargs: ' -Wall -Werror -Wno-error=pointer-sign -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37186.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Werror -Wno-error=pointer-sign"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(pointer targets in passing argument 1 of 'foo' differ in signedness))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37217_10:
  bin: '"pr37217.s"'
  cargs: ' -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37217.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37261_14:
  bin: '"pr37261.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37261.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37289_13:
  bin: '"pr37289.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37289.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37303_5:
  bin: '"pr37303.s"'
  cargs: -std=c99 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37303.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37353_15:
  bin: '"pr37353.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37353.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37360_21:
  bin: '"pr37360.s"'
  cargs: ' -O3 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37360.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37438_21:
  bin: '"pr37438.s"'
  cargs: ' -Os -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37438.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
      - '"-Os -march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37529_9:
  bin: '"pr37529.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37529.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37544_25:
  bin: '"./pr37544.exe"'
  cargs: ' -O2 -msse2 -mtune=core2 -mfpmath=387'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37544.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -msse2 -mtune=core2 -mfpmath=387" { target { i?86-*-* x86_64-*-* } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37561_23:
  bin: '"pr37561.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37561.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(lvalue))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(cast to pointer from integer of different size" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37645_5:
  bin: '"pr37645.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37645.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37663_16:
  bin: '"pr37663.s"'
  cargs: ' -O2 -fwrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37663.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37772_20:
  bin: '"pr37772.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37772.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected string literal before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37858_11:
  bin: '"pr37858.s"'
  cargs: ' -O2 -fdump-ipa-build_ssa_passes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37858.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-ipa-build_ssa_passes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37879_28:
  bin: '"pr37879.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37879.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(does return))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37908_25:
  bin: '"./pr37908.exe"'
  cargs: ' -Wsync-nand'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37908.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsync-nand"'
      - '"-Wsync-nand -march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-Wsync-nand -mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr37985_8:
  bin: '"pr37985.s"'
  cargs: '  -Wall -Wextra  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr37985.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -Wall -Wextra "'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38140_10:
  bin: '"pr38140.s"'
  cargs: ' -O2 -fno-strict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38140.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38200_16:
  bin: '"pr38200.s"'
  cargs: ' -O2 -fno-strict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38200.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-1_35:
  bin: '"pr38245-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-2_109:
  bin: '"pr38245-2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-3_112:
  bin: '"./pr38245-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38245-4_107:
  bin: '"pr38245-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38245-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38338_19:
  bin: '"pr38338.s"'
  cargs: ' -O0 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38338.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
      - '"-O0 -fPIC" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38364_80:
  bin: '"./pr38364.exe"'
  cargs: ' -O2 -ftrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38364.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38615_19:
  bin: '"./pr38615.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38615.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38616_16:
  bin: '"./pr38616.exe"'
  cargs: ' -O2 -fstack-protector'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38616.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38645_16:
  bin: '"pr38645.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38645.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38700_11:
  bin: '"pr38700.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38700.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38902_131:
  bin: '"./pr38902.exe"'
  cargs: ' -O2 -fstack-protector'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38902.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38932_19:
  bin: '"pr38932.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38932.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38934_19:
  bin: '"pr38934.s"'
  cargs: ' -O2 -std=gnu99 -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38934.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99 -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38957_16:
  bin: '"pr38957.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38957.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(returns address of local variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(returns address of local variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr38984_16:
  bin: '"pr38984.s"'
  cargs: ' -O2 -fno-delete-null-pointer-checks -fdump-tree-optimized -fno-isolate-erroneous-paths-dereference -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr38984.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-delete-null-pointer-checks -fdump-tree-optimized -fno-isolate-erroneous-paths-dereference"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39084_11:
  bin: '"pr39084.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39084.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redefinition of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39226_34:
  bin: '"pr39226.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39226.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mtune=cell -mminimal-toc" { target { powerpc*-*-* && lp64 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39323-1_5:
  bin: '"pr39323-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39323-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requested alignment is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requested alignment is too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39323-2_6:
  bin: '"pr39323-2.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39323-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39323-3_7:
  bin: '"pr39323-3.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39323-3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39343_29:
  bin: '"./pr39343.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39343.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39443_18:
  bin: '"pr39443.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39443.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39453_18:
  bin: '"pr39453.s"'
  cargs: ' -O2 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39453.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39455_14:
  bin: '"pr39455.s"'
  cargs: ' -O2 -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39455.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39464_19:
  bin: '"pr39464.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39464.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39565_48:
  bin: '"./pr39565.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39565.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39666-1_22:
  bin: '"pr39666-1.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39666-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39666-2_22:
  bin: '"pr39666-2.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39666-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39712_9:
  bin: '"pr39712.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39712.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39794_33:
  bin: '"./pr39794.exe"'
  cargs: ' -O2 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39794.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39867_14:
  bin: '"pr39867.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39867.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr39874_28:
  bin: '"pr39874.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr39874.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40031_9:
  bin: '"pr40031.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40031.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40172-1_31:
  bin: '"pr40172-1.s"'
  cargs: ' -Wall -W -Werror -Wlogical-op -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40172-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -W -Werror -Wlogical-op"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40172-2_16:
  bin: '"pr40172-2.s"'
  cargs: ' -Wall -W -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40172-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -W -Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40172-3_17:
  bin: '"pr40172-3.s"'
  cargs: ' -Wall -W -Werror -Wlogical-op -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40172-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -W -Werror -Wlogical-op"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40209_22:
  bin: '"pr40209.s"'
  cargs: ' -O2 -fprofile-use -fopt-info -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40209.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-use -fopt-info"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-1_24:
  bin: '"pr40340-1.s"'
  cargs: ' -O2 -Wall -Wno-system-headers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-2_16:
  bin: '"pr40340-2.s"'
  cargs: ' -O2 -Wall -Wno-system-headers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-3_15:
  bin: '"pr40340-3.s"'
  cargs: ' -O2 -Wall -Wno-system-headers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-4_16:
  bin: '"pr40340-4.s"'
  cargs: ' -O2 -Wall -Wno-system-headers -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-system-headers -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40340-5_17:
  bin: '"pr40340-5.s"'
  cargs: ' -O2 -Wall -Wsystem-headers -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40340-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wsystem-headers -g"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(writing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40501_24:
  bin: '"pr40501.s"'
  cargs: ' -O2 -Wno-shift-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40501.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-shift-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40550_20:
  bin: '"./pr40550.exe"'
  cargs: ' -msse'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40550.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40669_26:
  bin: '"pr40669.s"'
  cargs: ' -O2 -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40669.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40792_21:
  bin: '"pr40792.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40792.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40861_7:
  bin: '"pr40861.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40861.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40946_33:
  bin: '"pr40946.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40946.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40971_23:
  bin: '"pr40971.s"'
  cargs: ' -O -fstack-protector -fno-strict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40971.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstack-protector -fno-strict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr40989_6:
  bin: '"pr40989.s"'
  cargs: ' -Werror=implicit -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr40989.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror=implicit"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41033_24:
  bin: '"pr41033.s"'
  cargs: ' -O1 -fno-strict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41033.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-strict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41123_46:
  bin: '"pr41123.s"'
  cargs: ' -O2 -fno-strict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41123.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41232_14:
  bin: '"pr41232.s"'
  cargs: ' -O1 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41232.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41241_35:
  bin: '"pr41241.s"'
  cargs: ' -O2 -fcompare-debug -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41241.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -g"'
      - '"-O2 -fcompare-debug -g -march=i586 -mtune=i586 -fomit-frame-pointer" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41248_27:
  bin: '"pr41248.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41248.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41295_91:
  bin: '"pr41295.s"'
  cargs: ' -O1 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41295.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41340_71:
  bin: '"pr41340.s"'
  cargs: ' -O3 -g -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41340.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g -fcompare-debug"'
      - '"-O3 -g -fcompare-debug -march=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41345_15:
  bin: '"pr41345.s"'
  cargs: ' -O2 -g -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41345.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41454_22:
  bin: '"./pr41454.exe"'
  cargs: ' -O2 -fno-tree-vrp'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41454.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-vrp"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41470_22:
  bin: '"pr41470.s"'
  cargs: ' -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41470.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41488_17:
  bin: '"pr41488.s"'
  cargs: ' -O2 -fdump-tree-sccp-scev -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41488.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-sccp-scev"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41551_12:
  bin: '"pr41551.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41551.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41573_15:
  bin: '"pr41573.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41573.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41574_14:
  bin: '"pr41574.s"'
  cargs: -O2 -fno-unsafe-math-optimizations -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41574.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -march=armv7-a -mfloat-abi=softfp -mfpu=neon -fno-unsafe-math-optimizations -fdump-rtl-combine" { target { arm*-*-* } }'
      - '"-O2 -fno-unsafe-math-optimizations -fdump-rtl-combine" { target { ! arm*-*-* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41619_14:
  bin: '"pr41619.s"'
  cargs: ' -O2 -fno-ira-share-save-slots -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41619.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-ira-share-save-slots"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41643_15:
  bin: '"pr41643.s"'
  cargs: ' -O2 -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41643.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41762_31:
  bin: '"pr41762.s"'
  cargs: ' -O2 -ftracer -fsched2-use-superblocks -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41762.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fsched2-use-superblocks"'
      - '"-O2 -ftracer -fsched2-use-superblocks -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41783_19:
  bin: '"pr41783.s"'
  cargs: ' -O3 -fdump-tree-pre -fno-tree-loop-im -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41783.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-pre -fno-tree-loop-im"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41837_42:
  bin: '"pr41837.s"'
  cargs: ' -fipa-struct-reorg -O -fwhole-program -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41837.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fipa-struct-reorg -O -fwhole-program -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41841_22:
  bin: '"pr41841.s"'
  cargs: ' -O -fipa-struct-reorg -fwhole-program -fipa-cp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41841.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fipa-struct-reorg -fwhole-program -fipa-cp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41842_9:
  bin: '"pr41842.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41842.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41935_25:
  bin: '"./pr41935.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41935.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr41963_36:
  bin: '"./pr41963.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr41963.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42078_22:
  bin: '"pr42078.s"'
  cargs: ' -g -O -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42078.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42084_22:
  bin: '"./pr42084.exe"'
  cargs: ' -O1 -fno-delete-null-pointer-checks'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42084.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-delete-null-pointer-checks"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42215_13:
  bin: '"pr42215.s"'
  cargs: ' -O2 -ftree-loop-distribution -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42215.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-distribution"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42245-2_20:
  bin: '"pr42245-2.s"'
  cargs: ' -O2 -fselective-scheduling -fsel-sched-pipelining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42245-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42245_30:
  bin: '"pr42245.s"'
  cargs: ' -O2 -fselective-scheduling -fsel-sched-pipelining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42245.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42246_36:
  bin: '"pr42246.s"'
  cargs: ' -O2 -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42246.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42249_37:
  bin: '"pr42249.s"'
  cargs: ' -O2 -fselective-scheduling -fsel-sched-pipelining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42249.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42250_68:
  bin: '"pr42250.s"'
  cargs: ' -O2 -fipa-struct-reorg -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42250.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-struct-reorg"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42388_67:
  bin: '"pr42388.s"'
  cargs: ' -O2 -fselective-scheduling -fmodulo-sched -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42388.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fmodulo-sched"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42389_87:
  bin: '"pr42389.s"'
  cargs: ' -O2 -fselective-scheduling -fsel-sched-pipelining -fsched-pressure -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42389.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling -fsel-sched-pipelining -fsched-pressure"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42396_7:
  bin: '"pr42396.s"'
  cargs: ' -O2 -g -ftracer -fsched2-use-superblocks -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42396.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -ftracer -fsched2-use-superblocks"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42461_14:
  bin: '"pr42461.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42461.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42475_28:
  bin: '"pr42475.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42475.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42611_19:
  bin: '"pr42611.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42611.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type .struct S. is too large))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42629_30:
  bin: '"pr42629.s"'
  cargs: ' -O1 -fsched-pressure -fschedule-insns -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42629.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fsched-pressure -fschedule-insns -fcompare-debug" { target scheduling }'
      - '"-O1 -fcompare-debug" { target { ! scheduling } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42630_10:
  bin: '"pr42630.s"'
  cargs: ' -O1 -fvariable-expansion-in-unroller -funroll-loops -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42630.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fvariable-expansion-in-unroller -funroll-loops -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42631_24:
  bin: '"pr42631.s"'
  cargs: ' -g -O1 -funroll-loops -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42631.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O1 -funroll-loops -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42662_48:
  bin: '"pr42662.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42662.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42685_22:
  bin: '"pr42685.s"'
  cargs: ' -O -funroll-loops -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42685.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -funroll-loops -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42715_59:
  bin: '"pr42715.s"'
  cargs: ' -fPIC -g -O2 -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42715.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fPIC -g -O2 -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42719_15:
  bin: '"pr42719.s"'
  cargs: ' -O2 -ftracer -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42719.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42728_12:
  bin: '"pr42728.s"'
  cargs: ' -O1 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42728.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42889_14:
  bin: '"pr42889.s"'
  cargs: ' -O -fgcse -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42889.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgcse -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42916_21:
  bin: '"pr42916.s"'
  cargs: ' -O1 -funroll-loops -ftree-vectorize -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42916.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funroll-loops -ftree-vectorize -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42918_21:
  bin: '"pr42918.s"'
  cargs: ' -O2 -fcompare-debug -ftracer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42918.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -ftracer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr42963_27:
  bin: '"pr42963.s"'
  cargs: ' -O2 -fdump-tree-cfg -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr42963.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cfg"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43058_21:
  bin: '"pr43058.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43058.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43082_10:
  bin: '"pr43082.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43082.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(void value not ignored as it ought to be))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43084_17:
  bin: '"pr43084.s"'
  cargs: ' -O1 -fipa-struct-reorg -fwhole-program -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43084.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fipa-struct-reorg -fwhole-program -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43139_59:
  bin: '"pr43139.s"'
  cargs: ' -g -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43139.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43157_20:
  bin: '"pr43157.exe"'
  cargs: ' -O1 -flto -fuse-linker-plugin'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43157.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -flto -fuse-linker-plugin"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43211_15:
  bin: '"pr43211.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43211.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43213_12:
  bin: '"pr43213.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43213.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43245_18:
  bin: '"pr43245.s"'
  cargs: ' -Wno-discarded-qualifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43245.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-discarded-qualifiers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43280_30:
  bin: '"./pr43280.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43280.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43299_28:
  bin: '"pr43299.o"'
  cargs: ' -g -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43299.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43300_19:
  bin: '"pr43300.s"'
  cargs: ' -Os -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43300.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -w"'
      - '"-Os -w -Wno-psabi" { target { i?86-*-* x86_64-*-* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43305_16:
  bin: '"pr43305.s"'
  cargs: ' -Os -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43305.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43317_15:
  bin: '"pr43317.s"'
  cargs: ' -O -fipa-struct-reorg -fwhole-program -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43317.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fipa-struct-reorg -fwhole-program -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43379_13:
  bin: '"pr43379.s"'
  cargs: ' -O2 -ftracer -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43379.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43402_60:
  bin: '"./pr43402.exe"'
  cargs: ' -O1 -fno-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43402.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43419_19:
  bin: '"./pr43419.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43419.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43513_18:
  bin: '"pr43513.s"'
  cargs: ' -O2 -fdump-tree-ccp2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43513.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43557-1_19:
  bin: '"pr43557-1.exe"'
  cargs: ' -flto -g -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43557-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -g -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43557-2_10:
  bin: '"pr43557-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43557-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43562_20:
  bin: '"pr43562.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43562.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43564_16:
  bin: '"pr43564.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43564.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43643_25:
  bin: '"./pr43643.exe"'
  cargs: ' -O2 -pg'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43643.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -pg"'
      - '"-O2 -pg -static" { target hppa*-*-hpux* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43670_30:
  bin: '"pr43670.s"'
  cargs: ' -O -ftree-vrp -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43670.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vrp -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43730_19:
  bin: '"pr43730.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43730.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864-2_22:
  bin: '"pr43864-2.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864-3_23:
  bin: '"pr43864-3.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864-4_28:
  bin: '"pr43864-4.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43864_35:
  bin: '"pr43864.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43864.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr43971_14:
  bin: '"pr43971.s"'
  cargs: ' -Os -fno-delete-null-pointer-checks -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr43971.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-delete-null-pointer-checks"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44012_58:
  bin: '"pr44012.s"'
  cargs: ' -O -fgcse -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44012.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgcse"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44023_48:
  bin: '"pr44023.s"'
  cargs: ' -fcompare-debug -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44023.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug -O2"'
      - '"-fcompare-debug -O2 -mcpu=ev67" { target alpha*-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44024_15:
  bin: '"pr44024.exe"'
  cargs: ' -O1 -fdelete-null-pointer-checks -fdump-tree-ccp1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44024.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdelete-null-pointer-checks -fdump-tree-ccp1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44028_22:
  bin: '"pr44028.s"'
  cargs: ' -O3 -fsched-pressure -fschedule-insns -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44028.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
      - '"-O3 -fsched-pressure -fschedule-insns -fcompare-debug" { target i?86-*-* x86_64-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44061_16:
  bin: '"pr44061.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44061.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44136_27:
  bin: '"pr44136.s"'
  cargs: ' -w -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44136.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -g"'
      - '"-w -Wno-psabi -O2 -g -mno-sse" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44194-1_21:
  bin: '"pr44194-1.s"'
  cargs: -O2 -fdump-rtl-dse1 -fdump-rtl-final -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44194-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-dse1 -fdump-rtl-final"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44194-2_11:
  bin: '"pr44194-2.s"'
  cargs: -O2 -fdump-rtl-dse1 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44194-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-dse1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44214-1_17:
  bin: '"pr44214-1.s"'
  cargs: ' -O2 -freciprocal-math -fdump-tree-ccp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44214-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freciprocal-math -fdump-tree-ccp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44214-2_13:
  bin: '"pr44214-2.s"'
  cargs: ' -O2 -freciprocal-math -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44214-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freciprocal-math -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44214-3_18:
  bin: '"pr44214-3.s"'
  cargs: ' -O2 -fdump-tree-ccp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44214-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44337_10:
  bin: '"pr44337.s"'
  cargs: ' -O -fno-tree-dce -fno-tree-dse -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44337.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce -fno-tree-dse -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44393_15:
  bin: '"pr44393.s"'
  cargs: ' -Os -ftree-loop-distribution -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44393.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -ftree-loop-distribution"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44404_35:
  bin: '"./pr44404.exe"'
  cargs: ' -O2 -fno-unroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44404.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-unroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44485_31:
  bin: '"pr44485.s"'
  cargs: ' -O1 -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44485.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44509_9:
  bin: '"pr44509.s"'
  cargs: ' --param ggc-min-expand=0 --param ggc-min-heapsize=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44509.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--param ggc-min-expand=0 --param ggc-min-heapsize=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44539_29:
  bin: '"pr44539.s"'
  cargs: ' -ftracer -freorder-blocks -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44539.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftracer -freorder-blocks -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44545_13:
  bin: '"pr44545.s"'
  cargs: ' -O2 -fnon-call-exceptions -ftrapv -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44545.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fnon-call-exceptions -ftrapv -fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44606_53:
  bin: '"./pr44606.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44606.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44674_11:
  bin: '"pr44674.s"'
  cargs: ' -O -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44674.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44699_158:
  bin: '"pr44699.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44699.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44838_33:
  bin: '"./pr44838.exe"'
  cargs: ' -O2 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44838.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44964_21:
  bin: '"pr44964.s"'
  cargs: ' -fkeep-inline-functions -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44964.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fkeep-inline-functions -O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44971_28:
  bin: '"pr44971.s"'
  cargs: ' -O2 -fcompare-debug -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44971.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr44974_23:
  bin: '"pr44974.s"'
  cargs: -O -fno-optimize-sibling-calls -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr44974.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-optimize-sibling-calls"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45055_42:
  bin: '"pr45055.s"'
  cargs: ' -O2 -ftracer -fsched-pressure -funroll-loops -fschedule-insns -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45055.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -fsched-pressure -funroll-loops -fschedule-insns -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45071_34:
  bin: '"pr45071.s"'
  cargs: ' -O -ftree-vrp -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45071.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vrp -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45079_10:
  bin: '"pr45079.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45079.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45083_25:
  bin: '"pr45083.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45083.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(cs\[^\n\r\]*\\.b\[^\n\r\]*is used uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(cs\[^\n\r\]*\\.a\[^\n\r\]*may be used uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(cs\[^\n\r\]*\\.c\[^\n\r\]*may be used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45101_15:
  bin: '"pr45101.s"'
  cargs: ' -O2 -fgcse -fgcse-las -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45101.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgcse -fgcse-las"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45105_27:
  bin: '"pr45105.s"'
  cargs: ' -Os -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45105.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45107_13:
  bin: '"pr45107.s"'
  cargs: ' -Os -fgcse-las -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45107.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fgcse-las"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45259_45:
  bin: '"pr45259.s"'
  cargs: ' -g -O2 -w -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45259.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2 -w -fpic" { target fpic }'
      - '"-g -O2 -w" { target { ! fpic } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352-1_14:
  bin: '"pr45352-1.s"'
  cargs: ' -O3 -fschedule-insns -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-loops -fprefetch-loop-arrays -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fschedule-insns -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -funroll-loops -fprefetch-loop-arrays"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352-2_17:
  bin: '"pr45352-2.s"'
  cargs: ' -O1 -freorder-blocks -fschedule-insns2 -funswitch-loops -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -freorder-blocks -fschedule-insns2 -funswitch-loops -fselective-scheduling2 -fsel-sched-pipelining -funroll-all-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352-3_16:
  bin: '"pr45352-3.s"'
  cargs: ' -O -fprofile-generate -fgcse -fno-gcse-lm -fgcse-sm -fno-ivopts -fno-tree-loop-im -ftree-pre -funroll-loops -fno-web -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate -fgcse -fno-gcse-lm -fgcse-sm -fno-ivopts -fno-tree-loop-im -ftree-pre -funroll-loops -fno-web -fschedule-insns2 -fselective-scheduling2 -fsel-sched-pipelining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45352_24:
  bin: '"pr45352.s"'
  cargs: ' -Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45352.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45353_10:
  bin: '"pr45353.s"'
  cargs: ' -O2 -fschedule-insns -fselective-scheduling -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45353.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fschedule-insns -fselective-scheduling"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45415_69:
  bin: '"pr45415.s"'
  cargs: ' -O1 -fno-tree-dominator-opts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45415.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-dominator-opts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45416_15:
  bin: '"pr45416.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45416.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45449_23:
  bin: '"pr45449.s"'
  cargs: ' -O2 -fno-tree-pre -fno-tree-pta -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45449.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-pre -fno-tree-pta -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45461_18:
  bin: '"pr45461.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45461.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted" "promoted))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45472_21:
  bin: '"pr45472.s"'
  cargs: ' -O -fschedule-insns2 -fselective-scheduling2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45472.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns2 -fselective-scheduling2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45567_9:
  bin: '"pr45567.s"'
  cargs: ' -ftree-ter -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45567.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftree-ter"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45570_28:
  bin: '"pr45570.s"'
  cargs: ' -O3 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -ftracer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45570.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fselective-scheduling2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -ftracer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45652_39:
  bin: '"./pr45652.exe"'
  cargs: ' -O2 -fselective-scheduling2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45652.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45733_13:
  bin: '"pr45733.s"'
  cargs: ' -O -fstrict-overflow -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45733.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45750_16:
  bin: '"pr45750.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45750.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45819_19:
  bin: '"pr45819.s"'
  cargs: ' -O2 -fdump-tree-optimized -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45819.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45865_28:
  bin: '"pr45865.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45865.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr45991_20:
  bin: '"pr45991.s"'
  cargs: ' -O -fstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr45991.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46088_12:
  bin: '"pr46088.s"'
  cargs: ' -Os -fnon-call-exceptions -fpeel-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46088.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fnon-call-exceptions -fpeel-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46130-1_23:
  bin: '"pr46130-1.s"'
  cargs: ' -O2 -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46130-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46130-2_32:
  bin: '"pr46130-2.s"'
  cargs: ' -O2 -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46130-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46165_11:
  bin: '"pr46165.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46165.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46171_13:
  bin: '"pr46171.s"'
  cargs: ' -O -fno-tree-dce -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46171.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46177-2_18:
  bin: '"pr46177-2.s"'
  cargs: ' -O -fno-tree-copy-prop -ftree-loop-distribution -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46177-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-copy-prop -ftree-loop-distribution"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46177_18:
  bin: '"pr46177.s"'
  cargs: ' -O -fno-tree-copy-prop -ftree-loop-distribution -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46177.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-copy-prop -ftree-loop-distribution"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46184_18:
  bin: '"pr46184.s"'
  cargs: ' -O -ftree-vectorize -fno-tree-copy-prop -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46184.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize -fno-tree-copy-prop -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46212_24:
  bin: '"pr46212.s"'
  cargs: ' -O3 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46212.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
      - '"-O3 -funroll-loops -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46217_10:
  bin: '"pr46217.s"'
  cargs: ' -O3 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46217.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46233_11:
  bin: '"pr46233.s"'
  cargs: ' -O -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46233.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46251_7:
  bin: '"pr46251.s"'
  cargs: ' -ffast-math -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46251.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46252_17:
  bin: '"pr46252.s"'
  cargs: ' -O -frerun-cse-after-loop -fno-tree-loop-optimize -funroll-loops -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46252.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -frerun-cse-after-loop -fno-tree-loop-optimize -funroll-loops -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46255_13:
  bin: '"pr46255.s"'
  cargs: ' -fcompare-debug -fprofile-generate -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46255.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug -fprofile-generate -O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46288_8:
  bin: '"pr46288.s"'
  cargs: ' -O -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46288.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46307_14:
  bin: '"pr46307.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46307.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46309-2_145:
  bin: '"pr46309-2.s"'
  cargs: ' -O2 -fno-ipa-icf -fdump-tree-reassoc-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46309-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-ipa-icf -fdump-tree-reassoc-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46309_68:
  bin: '"pr46309.s"'
  cargs: ' -O2 -fdump-tree-reassoc-details -mbranch-cost=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46309.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-reassoc-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46315_37:
  bin: '"./pr46315.exe"'
  cargs: ' -O2 -fno-strict-overflow'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46315.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-overflow"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46355_14:
  bin: '"pr46355.s"'
  cargs: ' -O -ftree-loop-distribution -fstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46355.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-loop-distribution -fstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46375_16:
  bin: '"pr46375.s"'
  cargs: ' -fgcse -fno-tree-dominator-opts -fcompare-debug -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46375.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgcse -fno-tree-dominator-opts -fcompare-debug -O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46387_32:
  bin: '"pr46387.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46387.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46440_25:
  bin: '"pr46440.s"'
  cargs: ' -O -fstack-protector -fno-tree-dominator-opts -fno-tree-fre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46440.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstack-protector -fno-tree-dominator-opts -fno-tree-fre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46494_9:
  bin: '"pr46494.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-fre -ftree-vrp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46494.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-fre -ftree-vrp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46499-1_31:
  bin: '"./pr46499-1.exe"'
  cargs: ' -O -fno-omit-frame-pointer -fno-tree-ccp -fno-tree-dominator-opts -finline-small-functions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46499-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-omit-frame-pointer -fno-tree-ccp -fno-tree-dominator-opts -finline-small-functions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46499-2_19:
  bin: '"pr46499-2.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-dominator-opts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46499-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-dominator-opts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46521_20:
  bin: '"pr46521.s"'
  cargs: ' -Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -fno-early-inlining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46521.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 -fsel-sched-pipelining -fprofile-generate -fno-early-inlining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46522_33:
  bin: '"pr46522.s"'
  cargs: ' -O3 -fkeep-inline-functions -fsel-sched-pipelining -fselective-scheduling2 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46522.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fkeep-inline-functions -fsel-sched-pipelining -fselective-scheduling2 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46571_122:
  bin: '"pr46571.s"'
  cargs: ' -O2 -fcompare-debug -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46571.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46585_11:
  bin: '"pr46585.s"'
  cargs: ' -fno-dce -fschedule-insns -fselective-scheduling -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46585.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-dce -fschedule-insns -fselective-scheduling"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46614_57:
  bin: '"./pr46614.exe"'
  cargs: ' -O -fno-rename-registers -fsched2-use-superblocks -fschedule-insns2 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46614.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-rename-registers -fsched2-use-superblocks -fschedule-insns2 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46620_76:
  bin: '"./pr46620.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46620.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46647_29:
  bin: '"pr46647.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46647.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46674_15:
  bin: '"pr46674.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46674.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46675_29:
  bin: '"./pr46675.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46675.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46685_40:
  bin: '"pr46685.s"'
  cargs: ' -O2 -freorder-blocks-and-partition -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46685.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freorder-blocks-and-partition -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46728-12_28:
  bin: '"./pr46728-12.exe"'
  cargs: ' -O2 -ffast-math -fno-inline -fno-unroll-loops -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46728-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46728-6_21:
  bin: '"pr46728-6.s"'
  cargs: -O2 -ffast-math -lm -fno-ident -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46728-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -lm -fno-ident"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46728-9_29:
  bin: '"./pr46728-9.exe"'
  cargs: ' -O2 -ffast-math -fno-inline -fno-unroll-loops -lm'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46728-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fno-inline -fno-unroll-loops -lm"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46771_19:
  bin: '"pr46771.s"'
  cargs: ' -O -ftree-vectorize -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46771.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46777_49:
  bin: '"pr46777.s"'
  cargs: ' -fgcse -O -fno-tree-dominator-opts -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46777.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgcse -O -fno-tree-dominator-opts -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46867_32:
  bin: '"pr46867.s"'
  cargs: ' -O -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46867.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46875_27:
  bin: '"pr46875.s"'
  cargs: ' -Os -fselective-scheduling2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46875.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46878-1_33:
  bin: '"pr46878-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46878-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46893_13:
  bin: '"pr46893.s"'
  cargs: ' -O -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46893.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr46909_19:
  bin: '"pr46909.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr46909.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47028_19:
  bin: '"./pr47028.exe"'
  cargs: ' -O -foptimize-sibling-calls -fno-forward-propagate -fno-tree-copy-prop -fno-tree-dominator-opts'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47028.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -foptimize-sibling-calls -fno-forward-propagate -fno-tree-copy-prop -fno-tree-dominator-opts"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47086_14:
  bin: '"pr47086.s"'
  cargs: ' -O -fexceptions -fnon-call-exceptions -ftrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47086.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fnon-call-exceptions -ftrapv"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47201_18:
  bin: '"pr47201.s"'
  cargs: ' -O -fpic -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47201.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic -g" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47276_37:
  bin: '"pr47276.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47276.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47369-1_13:
  bin: '"pr47369-1.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47369-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47372-1_12:
  bin: '"pr47372-1.s"'
  cargs: ' -O2 -fPIC -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47372-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47372-2_17:
  bin: '"pr47372-2.s"'
  cargs: ' -O2 -fPIC -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47372-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47381-1_26:
  bin: '"pr47381-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47381-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47381-2_13:
  bin: '"pr47381-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47381-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47383_31:
  bin: '"./pr47383.exe"'
  cargs: ' -O2 -fPIC'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47383.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47391_21:
  bin: '"pr47391.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47391.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47443_14:
  bin: '"pr47443.s"'
  cargs: ' -O -fstack-check=generic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47443.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstack-check=generic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47446-1_40:
  bin: '"pr47446-1.o"'
  cargs: ' -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47446-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47446-2_41:
  bin: '"pr47446-2.o"'
  cargs: ' -O2 -fpic -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47446-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47555_36:
  bin: '"pr47555.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47555.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47610_8:
  bin: '"pr47610.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47610.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47684_21:
  bin: '"pr47684.s"'
  cargs: ' -O3 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47684.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47727_12:
  bin: '"pr47727.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47727.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47763_9:
  bin: '"pr47763.s"'
  cargs: -O2 -funroll-loops -fdump-rtl-web -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47763.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -fdump-rtl-web"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47766_13:
  bin: '"pr47766.s"'
  cargs: ' -O2 -fstack-protector -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47766.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47793_13:
  bin: '"./pr47793.exe"'
  cargs: ' -O -fprofile-generate=./'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47793.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate=./"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47881_25:
  bin: '"pr47881.s"'
  cargs: ' -O -fcompare-debug -fno-dce -funroll-loops -fno-web -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47881.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fcompare-debug -fno-dce -funroll-loops -fno-web"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47893_188:
  bin: '"./pr47893.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47893.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47899_26:
  bin: '"pr47899.s"'
  cargs: ' -O -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47899.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47917_37:
  bin: '"pr47917.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47917.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr47991_25:
  bin: '"pr47991.s"'
  cargs: ' -g -Os -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr47991.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -Os"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48022-1_14:
  bin: '"pr48022-1.s"'
  cargs: ' -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48022-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48022-2_11:
  bin: '"pr48022-2.s"'
  cargs: ' -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48022-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48062_13:
  bin: '"pr48062.s"'
  cargs: ' -Wshadow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48062.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshadow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48067_11:
  bin: '"pr48067.s"'
  cargs: ' -O2 -ffast-math -fno-tree-forwprop -fno-tree-reassoc -mfma4 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48067.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math -fno-tree-forwprop -fno-tree-reassoc"'
      - '"-O2 -ffast-math -fno-tree-forwprop -fno-tree-reassoc -mfma4" { target x86_64-*-* i?86-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48134_31:
  bin: '"pr48134.s"'
  cargs: ' -O2 -fstack-check=specific -fno-tree-dse -fno-tree-fre -fno-tree-loop-optimize -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48134.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-check=specific -fno-tree-dse -fno-tree-fre -fno-tree-loop-optimize -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48141_17:
  bin: '"pr48141.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48141.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48144_16:
  bin: '"pr48144.s"'
  cargs: ' -O -frerun-cse-after-loop -fschedule-insns2 -fselective-scheduling2 -fno-tree-ch -funroll-loops --param=max-sched-extend-regions-iters=2 --param=max-sched-region-blocks=15 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48144.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -frerun-cse-after-loop -fschedule-insns2 -fselective-scheduling2 -fno-tree-ch -funroll-loops --param=max-sched-extend-regions-iters=2 --param=max-sched-region-blocks=15"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48156_45:
  bin: '"./pr48156.exe"'
  cargs: ' -O -fcrossjumping --param min-crossjump-insns=1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48156.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fcrossjumping --param min-crossjump-insns=1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48159-1_10:
  bin: '"pr48159-1.s"'
  cargs: ' -O3 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48159-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48159-2_22:
  bin: '"pr48159-2.s"'
  cargs: ' -O2 -ftree-loop-distribution -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48159-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-distribution -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48186_5:
  bin: '"pr48186.s"'
  cargs: ' -O --param hot-bb-frequency-fraction=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48186.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O --param hot-bb-frequency-fraction=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48189_13:
  bin: '"pr48189.s"'
  cargs: ' -O --param max-predicted-iterations=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48189.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O --param max-predicted-iterations=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48203_51:
  bin: '"pr48203.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48203.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48213_14:
  bin: '"pr48213.s"'
  cargs: ' -g -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48213.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
      - '"-g -O2 -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48235_58:
  bin: '"pr48235.s"'
  cargs: ' -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48235.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-1_48:
  bin: '"pr48335-1.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-2_58:
  bin: '"pr48335-2.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-3_48:
  bin: '"pr48335-3.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-4_39:
  bin: '"pr48335-4.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-5_38:
  bin: '"pr48335-5.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-6_46:
  bin: '"pr48335-6.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-7_38:
  bin: '"pr48335-7.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48335-8_31:
  bin: '"pr48335-8.s"'
  cargs: ' -O2 -fno-tree-sra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48335-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48374_17:
  bin: '"pr48374.s"'
  cargs: ' -O -fschedule-insns2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -fselective-scheduling2 --param max-sched-extend-regions-iters=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48374.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns2 -fsel-sched-pipelining -fsel-sched-pipelining-outer-loops -fselective-scheduling2 --param max-sched-extend-regions-iters=2" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48442_27:
  bin: '"pr48442.s"'
  cargs: ' -Os -fselective-scheduling2 --param max-sched-extend-regions-iters=100 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48442.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 --param max-sched-extend-regions-iters=100"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48524_6:
  bin: '"pr48524.i"'
  cargs: ' -specs=./gcc.dg/pr48524.spec -D_TEST_D -E'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48524.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-specs=${srcdir}/gcc.dg/pr48524.spec -D_TEST_D"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(works))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48552-1_53:
  bin: '"pr48552-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48552-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48552-2_53:
  bin: '"pr48552-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48552-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of void expression" "void expr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0" "invalid lvalue))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid lvalue in asm output 0))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(dereferencing" "deref))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48616_135:
  bin: '"./pr48616.exe"'
  cargs: ' -O2 -ftree-vectorize'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48616.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48685_11:
  bin: '"pr48685.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48685.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48739-1_27:
  bin: '"pr48739-1.s"'
  cargs: ' -O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48739-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48739-2_27:
  bin: '"pr48739-2.s"'
  cargs: ' -O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48739-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-parallelize-loops=2 -fno-tree-dominator-opts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48768_39:
  bin: '"pr48768.s"'
  cargs: ' -O -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48768.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48770_25:
  bin: '"./pr48770.exe"'
  cargs: ' -O -fprofile-arcs -fPIC -fno-dce -fno-forward-propagate'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48770.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-arcs -fPIC -fno-dce -fno-forward-propagate"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48774_38:
  bin: '"./pr48774.exe"'
  cargs: ' -O2 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48774.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48784-1_19:
  bin: '"./pr48784-1.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48784-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48784-2_19:
  bin: '"./pr48784-2.exe"'
  cargs: ' -fno-strict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48784-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48826_10:
  bin: '"pr48826.s"'
  cargs: ' -O -g -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48826.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48837_30:
  bin: '"./pr48837.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48837.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr48975_18:
  bin: '"pr48975.s"'
  cargs: ' -O3 -ffast-math -fno-tree-slp-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr48975.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ffast-math -fno-tree-slp-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49000_29:
  bin: '"pr49000.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49000.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49069_15:
  bin: '"pr49069.s"'
  cargs: ' -Os -fno-tree-forwprop -Wno-div-by-zero -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49069.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-tree-forwprop -Wno-div-by-zero"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49120_12:
  bin: '"pr49120.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49120.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49235_25:
  bin: '"pr49235.s"'
  cargs: ' -O -fno-delete-null-pointer-checks -fno-tree-scev-cprop -ftree-vectorize -fno-vect-cost-model -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49235.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-delete-null-pointer-checks -fno-tree-scev-cprop -ftree-vectorize -fno-vect-cost-model -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49243_25:
  bin: '"pr49243.s"'
  cargs: ' -O2 -Winline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49243.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Winline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*((inlining failed|function 'wrapper' can never be inlined because it uses setjmp)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49307_21:
  bin: '"pr49307.s"'
  cargs: ' -O -fpic -fstack-protector -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49307.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fpic -fstack-protector"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49496_20:
  bin: '"pr49496.s"'
  cargs: ' -O3 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49496.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49544_22:
  bin: '"pr49544.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49544.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49551_8:
  bin: '"pr49551.s"'
  cargs: -O -fdata-sections -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49551.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdata-sections"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49602_17:
  bin: '"pr49602.s"'
  cargs: ' -g -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49602.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49619_13:
  bin: '"pr49619.s"'
  cargs: ' -O -fno-tree-fre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49619.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-fre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49696_29:
  bin: '"pr49696.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49696.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49705_19:
  bin: '"pr49705.s"'
  cargs: ' -O2 -Wstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49705.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49799_25:
  bin: '"pr49799.o"'
  cargs: ' -O2 -w -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49799.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49860_21:
  bin: '"pr49860.o"'
  cargs: ' -O3 -funroll-all-loops -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49860.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-all-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49899_3:
  bin: '"pr49899.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49899.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:1:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(weak declaration of 'foo' being applied to a already existing, static definition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49948_23:
  bin: '"pr49948.s"'
  cargs: ' -O3 -ftree-parallelize-loops=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49948.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftree-parallelize-loops=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49994-1_20:
  bin: '"pr49994-1.s"'
  cargs: ' -Os -fsched2-use-superblocks -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49994-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fsched2-use-superblocks -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49994-2_17:
  bin: '"pr49994-2.s"'
  cargs: ' -O -fno-omit-frame-pointer -fschedule-insns2 -fsched2-use-superblocks -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49994-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-omit-frame-pointer -fschedule-insns2 -fsched2-use-superblocks -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr49994-3_23:
  bin: '"pr49994-3.s"'
  cargs: ' -O2 -fsched2-use-superblocks -g -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr49994-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks -g -w"'
      - '"-O2 -fsched2-use-superblocks -g -mbackchain" { target s390*-*-* }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50017_21:
  bin: '"pr50017.s"'
  cargs: ' -O3 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50017.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50078_14:
  bin: '"pr50078.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50078.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50132_10:
  bin: '"pr50132.s"'
  cargs: ' -Os -fno-asynchronous-unwind-tables -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50132.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-asynchronous-unwind-tables -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50133_18:
  bin: '"pr50133.s"'
  cargs: ' -O -ftree-vectorize -fno-tree-loop-im -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50133.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize -fno-tree-loop-im"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50161_21:
  bin: '"./pr50161.exe"'
  cargs: ' -O2 -fno-tree-ter -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50161.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-ter -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50193-1_10:
  bin: '"pr50193-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50193-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift count is negative))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50205_13:
  bin: '"pr50205.s"'
  cargs: ' -O2 -fno-cprop-registers -fno-dce -fno-forward-propagate -fselective-scheduling2 -funroll-loops -fno-web -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50205.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-cprop-registers -fno-dce -fno-forward-propagate -fselective-scheduling2 -funroll-loops -fno-web"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50251_18:
  bin: '"pr50251.s"'
  cargs: ' -O2 -mpreferred-stack-boundary=12 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50251.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50290_27:
  bin: '"./pr50290.exe"'
  cargs: ' -O2 -fno-tree-loop-optimize -fno-tree-vrp -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50290.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-loop-optimize -fno-tree-vrp -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50310-1_18:
  bin: '"./pr50310-1.exe"'
  cargs: ' -O3 -mavx -mno-avx2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50310-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -mavx -mno-avx2" { target avx_runtime }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50310-2_47:
  bin: '"./pr50310-2.exe"'
  cargs: ' -O3 -mavx'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50310-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
      - '"-O3 -mavx" { target avx_runtime }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50340_46:
  bin: '"pr50340.s"'
  cargs: ' -O3 -fselective-scheduling2 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50340.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fselective-scheduling2 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50527_46:
  bin: '"./pr50527.exe"'
  cargs: ' -Os --param large-stack-frame=30 -Wno-pointer-to-int-cast'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50527.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os --param large-stack-frame=30 -Wno-pointer-to-int-cast"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50571_11:
  bin: '"pr50571.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50571.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50604_19:
  bin: '"pr50604.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50604.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50613_20:
  bin: '"pr50613.s"'
  cargs: ' -O2 -fno-tree-ccp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50613.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-ccp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50717-1_25:
  bin: '"pr50717-1.s"'
  cargs: ' -O2 -fdump-tree-widening_mul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50717-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50763-2_46:
  bin: '"pr50763-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50763-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50763-5_23:
  bin: '"pr50763-5.s"'
  cargs: ' -O2 -ftree-tail-merge -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50763-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50763_13:
  bin: '"pr50763.s"'
  cargs: ' -O2 -ftree-tail-merge -fno-tree-dominator-opts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50763.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fno-tree-dominator-opts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50764_18:
  bin: '"pr50764.s"'
  cargs: ' -O2 -fsched2-use-superblocks -ftree-tail-merge -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50764.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks -ftree-tail-merge"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50765_10:
  bin: '"pr50765.s"'
  cargs: ' -O3 -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50765.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50827_17:
  bin: '"pr50827.s"'
  cargs: ' -g -O2 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50827.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50908-2_80:
  bin: '"pr50908-2.s"'
  cargs: ' -O2 -ftree-tail-merge -fno-short-enums -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50908-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fno-short-enums"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50908-3_13:
  bin: '"pr50908-3.s"'
  cargs: ' -O2 -ftree-tail-merge -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50908-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr50908_179:
  bin: '"pr50908.s"'
  cargs: ' -O2 -ftree-tail-merge -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr50908.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51012-1_17:
  bin: '"pr51012-1.s"'
  cargs: ' -O2 -fno-early-inlining -fno-ipa-cp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51012-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-early-inlining -fno-ipa-cp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51012-2_17:
  bin: '"pr51012-2.s"'
  cargs: ' -O2 -fno-early-inlining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51012-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-early-inlining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51034_14:
  bin: '"pr51034.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51034.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51039_17:
  bin: '"pr51039.s"'
  cargs: ' -O -finline-small-functions -fno-ipa-pure-const -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51039.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -finline-small-functions -fno-ipa-pure-const"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51261_9:
  bin: '"pr51261.s"'
  cargs: ' -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51261.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51321_7:
  bin: '"pr51321.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51321.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51408_22:
  bin: '"./pr51408.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51408.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51481_33:
  bin: '"pr51481.s"'
  cargs: ' -O -fexceptions -fipa-cp -fipa-cp-clone -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51481.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fexceptions -fipa-cp -fipa-cp-clone"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51491-2_34:
  bin: '"pr51491-2.s"'
  cargs: ' -O2 -fdump-tree-ccp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51491-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ccp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51491_24:
  bin: '"pr51491.s"'
  cargs: -O2 -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51491.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51505_19:
  bin: '"pr51505.s"'
  cargs: ' -O --param max-cse-insns=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51505.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O --param max-cse-insns=1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51519_39:
  bin: '"pr51519.s"'
  cargs: ' -O -fno-guess-branch-probability -findirect-inlining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51519.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-guess-branch-probability -findirect-inlining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51557_17:
  bin: '"pr51557.s"'
  cargs: ' -Os -fno-asynchronous-unwind-tables -g -fsel-sched-pipelining -fselective-scheduling2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51557.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-asynchronous-unwind-tables -g -fsel-sched-pipelining -fselective-scheduling2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51644_33:
  bin: '"pr51644.s"'
  cargs: ' -Wall -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51644.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51683_17:
  bin: '"pr51683.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51683.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51695_52:
  bin: '"pr51695.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51695.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51721_31:
  bin: '"pr51721.s"'
  cargs: ' -O2 -Warray-bounds -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51721.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Warray-bounds"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51762_19:
  bin: '"pr51762.s"'
  cargs: ' -g -Os -fomit-frame-pointer -fno-asynchronous-unwind-tables -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51762.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -Os -fomit-frame-pointer -fno-asynchronous-unwind-tables"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51796_16:
  bin: '"pr51796.s"'
  cargs: ' -Os -fno-omit-frame-pointer -fno-tree-dominator-opts -fno-tree-fre -fno-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51796.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer -fno-tree-dominator-opts -fno-tree-fre -fno-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51821_25:
  bin: '"./pr51821.exe"'
  cargs: ' -std=c99 -O2 -msse'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51821.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51865_25:
  bin: '"pr51865.s"'
  cargs: ' -O2 -fipa-pta -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51865.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-pta"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51867_16:
  bin: '"pr51867.s"'
  cargs: -O0 -fno-math-errno -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51867.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fno-math-errno -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-12_28:
  bin: '"pr51879-12.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -fno-code-hoisting -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre -fno-code-hoisting"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-16_31:
  bin: '"pr51879-16.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-17_31:
  bin: '"pr51879-17.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-18_16:
  bin: '"pr51879-18.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -fno-tree-copy-prop -fno-tree-dominator-opts -fno-tree-copyrename -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre -fno-tree-copy-prop -fno-tree-dominator-opts -fno-tree-copyrename"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-2_18:
  bin: '"pr51879-2.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-3_18:
  bin: '"pr51879-3.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-4_15:
  bin: '"pr51879-4.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-6_26:
  bin: '"pr51879-6.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879-7_15:
  bin: '"pr51879-7.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51879_18:
  bin: '"pr51879.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51879.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51957-1_29:
  bin: '"pr51957-1.exe"'
  cargs: ' -O2 -g -fprofile-use'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51957-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fprofile-use"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51957-2_35:
  bin: '"pr51957-2.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51957-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51990-2_33:
  bin: '"pr51990-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51990-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr51990_24:
  bin: '"pr51990.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr51990.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52045_11:
  bin: '"pr52045.s"'
  cargs: ' -O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52045.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52046_14:
  bin: '"pr52046.s"'
  cargs: ' -O3 -fexceptions -fnon-call-exceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52046.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fexceptions -fnon-call-exceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52086_21:
  bin: '"pr52086.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52086.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52132_27:
  bin: '"pr52132.s"'
  cargs: ' -std=c99 -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52132.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52134_13:
  bin: '"pr52134.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52134.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52139_50:
  bin: '"pr52139.s"'
  cargs: ' -O -fno-tree-dominator-opts -fno-tree-fre -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52139.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-dominator-opts -fno-tree-fre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52171_12:
  bin: '"pr52171.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52171.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52210_12:
  bin: '"pr52210.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52210.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52267_23:
  bin: '"pr52267.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52267.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52283_17:
  bin: '"pr52283.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52283.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(case label is not an integer constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52318_17:
  bin: '"pr52318.s"'
  cargs: ' -O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52318.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ftracer -fno-tree-ccp -fno-tree-copy-prop -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52355_13:
  bin: '"pr52355.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52355.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52445_14:
  bin: '"pr52445.s"'
  cargs: ' -O2 -ftree-cselim -fdump-tree-cselim -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52445.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-cselim -fdump-tree-cselim"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52448_29:
  bin: '"pr52448.s"'
  cargs: ' -O2 -ftree-cselim -fdump-tree-cselim-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52448.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-cselim -fdump-tree-cselim-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52549_23:
  bin: '"pr52549.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52549.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52578_13:
  bin: '"pr52578.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52578.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52592_21:
  bin: '"pr52592.s"'
  cargs: -std=gnu99 -O2 -ffast-math -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52592.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52691_23:
  bin: '"pr52691.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52691.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52734_35:
  bin: '"./pr52734.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52734.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52769_24:
  bin: '"./pr52769.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52769.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52803_4:
  bin: '"pr52803.s"'
  cargs: ' -O -fno-move-loop-invariants -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52803.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-move-loop-invariants"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52808_12:
  bin: '"pr52808.s"'
  cargs: ' -O -ftracer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52808.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftracer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52862_9:
  bin: '"pr52862.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52862.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52880_10:
  bin: '"pr52880.s"'
  cargs: ' -Woverride-init -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52880.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverride-init"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr52904_20:
  bin: '"pr52904.s"'
  cargs: ' -Wstrict-overflow -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr52904.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstrict-overflow -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53060_28:
  bin: '"./pr53060.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53060.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53119_22:
  bin: '"pr53119.s"'
  cargs: ' -Wmissing-braces -Wmissing-field-initializers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53119.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-braces -Wmissing-field-initializers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(missing initializer for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(missing initializer for))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(missing braces))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53153_61:
  bin: '"pr53153.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53153.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53174_67:
  bin: '"pr53174.s"'
  cargs: ' -Ofast -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53174.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Ofast -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53196-1_14:
  bin: '"pr53196-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53196-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53196-2_16:
  bin: '"pr53196-2.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53196-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids empty initializer braces" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53265_157:
  bin: '"pr53265.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53265.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(64 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(112 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(8 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(32 invokes undefined behavior" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(950 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(3 invokes undefined behavior))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: warning:[^
        ]*(15 invokes undefined behavior" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(2 invokes undefined behavior))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53352_42:
  bin: '"./pr53352.exe"'
  cargs: ' -O1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53352.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53358_22:
  bin: '"pr53358.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53358.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53532_13:
  bin: '"pr53532.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53532.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of undefined type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53550_12:
  bin: '"pr53550.s"'
  cargs: ' -O2 -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53550.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53701_59:
  bin: '"pr53701.s"'
  cargs: ' -O3 -fselective-scheduling2 -fsel-sched-pipelining -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53701.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fselective-scheduling2 -fsel-sched-pipelining"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53749_26:
  bin: '"pr53749.s"'
  cargs: ' -O2 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53749.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53849_14:
  bin: '"pr53849.s"'
  cargs: ' -O2 -ftree-parallelize-loops=2 -fno-tree-loop-im -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53849.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-parallelize-loops=2 -fno-tree-loop-im"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53881-1_22:
  bin: '"pr53881-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53881-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53881-2_19:
  bin: '"pr53881-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53881-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53887_24:
  bin: '"pr53887.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53887.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53942_34:
  bin: '"pr53942.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53942.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53979-1_9:
  bin: '"pr53979-1.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53979-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr53979-2_11:
  bin: '"pr53979-2.s"'
  cargs: ' -O2 -fdump-tree-forwprop-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr53979-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54087_18:
  bin: '"pr54087.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54087.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54113_5:
  bin: '"pr54113.s"'
  cargs: ' -Wmissing-prototypes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54113.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-prototypes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54121_95:
  bin: '"pr54121.s"'
  cargs: ' -std=gnu99 -O -fPIC -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54121.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -O -fPIC -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54355_11:
  bin: '"pr54355.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54355.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((label|unknown type|expected)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54363_12:
  bin: '"pr54363.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54363.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*((initialization|excess elements)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54472_9:
  bin: '"pr54472.s"'
  cargs: ' -O -fschedule-insns -fselective-scheduling -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54472.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns -fselective-scheduling"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54669_22:
  bin: '"pr54669.s"'
  cargs: ' -O2 -fexceptions -fnon-call-exceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54669.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions -fnon-call-exceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54676_27:
  bin: '"pr54676.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-fre -ftree-vrp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54676.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-copy-prop -fno-tree-fre -ftree-vrp"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54782_19:
  bin: '"pr54782.s"'
  cargs: ' -O -ffast-math -ftree-parallelize-loops=2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54782.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffast-math -ftree-parallelize-loops=2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54838_24:
  bin: '"pr54838.s"'
  cargs: ' -O2 -fno-forward-propagate -ftracer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54838.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-forward-propagate -ftracer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54919_27:
  bin: '"./pr54919.exe"'
  cargs: ' -O3 -ffast-math -funroll-loops -fvariable-expansion-in-unroller'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54919.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -ffast-math -funroll-loops -fvariable-expansion-in-unroller"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54921_32:
  bin: '"./pr54921.exe"'
  cargs: ' -Os -fno-omit-frame-pointer -fsched2-use-superblocks -ftree-slp-vectorize -fstack-protector'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54921.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fno-omit-frame-pointer -fsched2-use-superblocks -ftree-slp-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr54981_15:
  bin: '"pr54981.s"'
  cargs: ' -O -ftree-loop-distribute-patterns -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr54981.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-loop-distribute-patterns -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55010_13:
  bin: '"pr55010.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55010.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55019_41:
  bin: '"./pr55019.exe"'
  cargs: ' -O1 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55019.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55023_33:
  bin: '"./pr55023.exe"'
  cargs: ' -O2 -fno-inline'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55023.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-inline"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55027_11:
  bin: '"pr55027.s"'
  cargs: ' -Ofast -fdump-tree-optimized-raw -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55027.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Ofast -fdump-tree-optimized-raw"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55094_45:
  bin: '"pr55094.s"'
  cargs: ' -fcompare-debug -Os -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55094.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fcompare-debug -Os"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55110_13:
  bin: '"pr55110.s"'
  cargs: ' -O1 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55110.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55122_14:
  bin: '"pr55122.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55122.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55150-1_73:
  bin: '"pr55150-1.s"'
  cargs: ' -Os -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55150-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55150-2_55:
  bin: '"pr55150-2.s"'
  cargs: ' -Os -g -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55150-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -g -fPIC"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55152-2_13:
  bin: '"pr55152-2.s"'
  cargs: ' -O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55152-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55152_13:
  bin: '"pr55152.s"'
  cargs: ' -O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55152.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ffinite-math-only -fno-signed-zeros -fstrict-overflow -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55153_12:
  bin: '"pr55153.s"'
  cargs: ' -O -fsched2-use-superblocks -fschedule-insns2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55153.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fsched2-use-superblocks -fschedule-insns2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55191_14:
  bin: '"pr55191.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55191.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55236_31:
  bin: '"./pr55236.exe"'
  cargs: ' -O2 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55236.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55430_46:
  bin: '"./pr55430.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55430.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55570_4:
  bin: '"pr55570.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55570.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared here))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55702_9:
  bin: '"pr55702.s"'
  cargs: ' -fsanitize=thread -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55702.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=thread"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55831_39:
  bin: '"pr55831.s"'
  cargs: ' -O -fstrict-overflow -ftree-vectorize -Wno-unused-label -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55831.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow -ftree-vectorize -Wno-unused-label"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55833_29:
  bin: '"pr55833.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55833.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55838_13:
  bin: '"pr55838.s"'
  cargs: ' -O2 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55838.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr55940_54:
  bin: '"./pr55940.exe"'
  cargs: ' -Os'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr55940.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56023_20:
  bin: '"pr56023.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56023.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56035_35:
  bin: '"pr56035.s"'
  cargs: ' -O1 -ftree-vectorize -fcse-follow-jumps -fstrict-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56035.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-vectorize -fcse-follow-jumps -fstrict-overflow"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56078_25:
  bin: '"./pr56078.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56078.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56094_80:
  bin: '"pr56094.s"'
  cargs: ' -O2 -g -fdump-tree-optimized-lineno -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56094.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fdump-tree-optimized-lineno"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56098-1_15:
  bin: '"pr56098-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56098-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56098-2_18:
  bin: '"pr56098-2.s"'
  cargs: ' -O2 -fhoist-adjacent-loads -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56098-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fhoist-adjacent-loads -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56117_9:
  bin: '"pr56117.s"'
  cargs: ' -O2 -fsched2-use-superblocks -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56117.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched2-use-superblocks"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56125_21:
  bin: '"./pr56125.exe"'
  cargs: ' -O2 -ffast-math'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56125.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56144_35:
  bin: '"pr56144.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56144.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56167_15:
  bin: '"pr56167.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56167.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(attribute ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56228_17:
  bin: '"pr56228.o"'
  cargs: ' -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56228.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56275_12:
  bin: '"pr56275.s"'
  cargs: ' -O2 -mno-sse -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56275.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56341-1_40:
  bin: '"./pr56341-1.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56341-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56341-2_40:
  bin: '"./pr56341-2.exe"'
  cargs: ' -fno-strict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56341-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56350_13:
  bin: '"pr56350.s"'
  cargs: ' -O -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56350.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56355-1_8:
  bin: '"pr56355-1.s"'
  cargs: ' -O2 -Wstrict-overflow=4 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56355-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wstrict-overflow=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(assuming signed overflow))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56396_23:
  bin: '"pr56396.s"'
  cargs: ' -O2 -fpic -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56396.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpic -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56424_33:
  bin: '"pr56424.s"'
  cargs: ' -O2 -fexceptions -fnon-call-exceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56424.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions -fnon-call-exceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56436_22:
  bin: '"pr56436.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56436.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56466_31:
  bin: '"pr56466.s"'
  cargs: ' -O2 -w -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56466.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -w -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56494_13:
  bin: '"pr56494.s"'
  cargs: ' -O2 -ftracer -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56494.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56510_38:
  bin: '"pr56510.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56510.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56548_16:
  bin: '"pr56548.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56548.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56724-1_33:
  bin: '"pr56724-1.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56724-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:type of formal parameter))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(10:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(13:passing argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56724-2_31:
  bin: '"pr56724-2.s"'
  cargs: ' -Wc++-compat -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56724-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(10:ISO C forbids passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(10:enum conversion when passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(17:pointer targets in passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(17:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(38:passing argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56724-3_14:
  bin: '"pr56724-3.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56724-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15:incompatible type for))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(23:request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(15:request for implicit conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56809_32:
  bin: '"pr56809.s"'
  cargs: ' -Os -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56809.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56824_18:
  bin: '"pr56824.s"'
  cargs: ' -Waggregate-return -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56824.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waggregate-return"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56837_66:
  bin: '"pr56837.s"'
  cargs: ' -O3 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56837.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56847_12:
  bin: '"pr56847.s"'
  cargs: ' -O2 -fpie -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56847.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpie"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56890-1_15:
  bin: '"pr56890-1.o"'
  cargs: ' -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56890-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56890-2_19:
  bin: '"pr56890-2.o"'
  cargs: ' -O -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56890-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56977_10:
  bin: '"pr56977.s"'
  cargs: ' -Og -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56977.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56980_24:
  bin: '"pr56980.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56980.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56989_19:
  bin: '"pr56989.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56989.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:void value not ignored as it ought to be))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:void value not ignored as it ought to be))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56990_10:
  bin: '"pr56990.s"'
  cargs: ' -fsanitize=thread -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56990.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=thread"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56992_18:
  bin: '"pr56992.s"'
  cargs: ' -Og -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56992.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-1_44:
  bin: '"./pr56997-1.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-2_45:
  bin: '"./pr56997-2.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-3_44:
  bin: '"./pr56997-3.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr56997-4_22:
  bin: '"pr56997-4.s"'
  cargs: -fno-strict-volatile-bitfields -fdump-rtl-final -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr56997-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-strict-volatile-bitfields -fdump-rtl-final"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57104_12:
  bin: '"pr57104.s"'
  cargs: ' -fsanitize=thread -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57104.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=thread"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57105_18:
  bin: '"pr57105.s"'
  cargs: ' -Os -fselective-scheduling2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57105.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fselective-scheduling2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57134_29:
  bin: '"pr57134.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57134.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
      - '"-O2 -mstrict-align" { target { powerpc*-*-linux* powerpc*-*-elf* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57149_50:
  bin: '"pr57149.s"'
  cargs: ' -Os -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57149.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57154_44:
  bin: '"pr57154.s"'
  cargs: ' -O2 -fschedule-insns -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57154.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fschedule-insns"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57184_13:
  bin: '"pr57184.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57184.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57233_172:
  bin: '"./pr57233.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57233.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57286_7:
  bin: '"pr57286.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57286.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57287-2_36:
  bin: '"pr57287-2.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57287-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57287_25:
  bin: '"pr57287.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57287.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57300_21:
  bin: '"./pr57300.exe"'
  cargs: ' -O3 -msse2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57300.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57518_16:
  bin: '"pr57518.s"'
  cargs: -O2 -fdump-rtl-ira -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57518.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-ira"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57662_47:
  bin: '"pr57662.s"'
  cargs: '  -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57662.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -O -fno-guess-branch-probability -fpeel-loops -freorder-blocks-and-partition -fschedule-insns2 -fsel-sched-pipelining -fselective-scheduling2 -ftree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57773_13:
  bin: '"pr57773.s"'
  cargs: ' -std=c99 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57773.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wpedantic"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr57980_19:
  bin: '"pr57980.s"'
  cargs: ' -O -foptimize-sibling-calls -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr57980.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -foptimize-sibling-calls -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58010_15:
  bin: '"pr58010.s"'
  cargs: ' -O2 -funswitch-loops -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58010.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funswitch-loops -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58145-1_36:
  bin: '"pr58145-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58145-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58145-2_50:
  bin: '"pr58145-2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58145-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58346_19:
  bin: '"pr58346.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58346.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58432_17:
  bin: '"pr58432.s"'
  cargs: ' -O3 -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58432.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58463_14:
  bin: '"pr58463.s"'
  cargs: ' -fdump-tree-ealias-details -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58463.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-ealias-details -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58668_25:
  bin: '"pr58668.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58668.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58742-1_12:
  bin: '"pr58742-1.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58742-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58742-2_12:
  bin: '"pr58742-2.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58742-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58742-3_13:
  bin: '"pr58742-3.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58742-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58805_23:
  bin: '"pr58805.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58805.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58893_5:
  bin: '"pr58893.s"'
  cargs: ' -include pr58893-0.h -include pr58893-1.h -I./gcc.dg -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58893.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-include pr58893-0.h -include pr58893-1.h -I${srcdir}/gcc.dg"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pr58893-1.h: No such file or directory" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr58981_55:
  bin: '"./pr58981.exe"'
  cargs: ' -O2 -minline-all-stringops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr58981.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59011_23:
  bin: '"pr59011.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59011.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59020_15:
  bin: '"pr59020.s"'
  cargs: ' -O2 -fmodulo-sched -fno-inline -march=corei7 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59020.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fno-inline -march=corei7"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59261_17:
  bin: '"pr59261.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59261.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59304_40:
  bin: '"pr59304.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59304.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59350-2_29:
  bin: '"pr59350-2.s"'
  cargs: ' -O -g  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59350-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g "'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59350_86:
  bin: '"pr59350.s"'
  cargs: ' -O -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59350.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59351_8:
  bin: '"pr59351.s"'
  cargs: ' -std=c99 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59351.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids empty initializer braces))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59418_36:
  bin: '"pr59418.s"'
  cargs: ' -Os -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59418.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -g"'
      - '"-march=armv7-a -mfloat-abi=hard -Os -g" { target { arm*-*-* && { ! arm_thumb1 } } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59471_17:
  bin: '"pr59471.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59471.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59523_18:
  bin: '"pr59523.s"'
  cargs: ' -O3 -mavx2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59523.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59605-2_6:
  bin: '"./pr59605-2.exe"'
  cargs: ' -O2 -minline-stringops-dynamically'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59605-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59605_57:
  bin: '"pr59605.s"'
  cargs: ' -O2 -minline-stringops-dynamically -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59605.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59630_8:
  bin: '"pr59630.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59630.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*())[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59643_14:
  bin: '"pr59643.s"'
  cargs: ' -O3 -fdump-tree-pcom-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59643.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-pcom-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59670_15:
  bin: '"pr59670.s"'
  cargs: ' -O1 -fopenmp-simd -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59670.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fopenmp-simd"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59717_277:
  bin: '"pr59717.s"'
  cargs: ' -std=gnu11 -Wno-implicit-function-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59717.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wno-implicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:110:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:165:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:206:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:210:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:236:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible implicit))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59722_36:
  bin: '"pr59722.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59722.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59827_15:
  bin: '"pr59827.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59827.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type of formal parameter 1 is incomplete))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59833_19:
  bin: '"./pr59833.exe"'
  cargs: ' -O0 -lm -fsignaling-nans'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59833.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -lm -fsignaling-nans"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59846_39:
  bin: '"pr59846.s"'
  cargs: ' -Wlogical-op -Wtype-limits -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59846.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wlogical-op -Wtype-limits"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(15:comparison is always false due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(15:comparison is always true due to limited range of data type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(12:comparison of unsigned expression >= 0 is always true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(12:comparison of unsigned expression < 0 is always false))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(12:logical))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(12:logical))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59860_15:
  bin: '"pr59860.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59860.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59871_22:
  bin: '"pr59871.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59871.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(right-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59920-1_21:
  bin: '"pr59920-1.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59920-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59920-2_32:
  bin: '"pr59920-2.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59920-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59920-3_48:
  bin: '"pr59920-3.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59920-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59924_27:
  bin: '"pr59924.s"'
  cargs: ' -O1 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59924.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized in this function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59940_28:
  bin: '"pr59940.s"'
  cargs: ' -Wconversion -Woverflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59940.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion -Woverflow"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:too few arguments to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(3:too many arguments to function))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(21:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(8:large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(8:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(13:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(15:conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59963-1_14:
  bin: '"pr59963-1.s"'
  cargs: ' -std=gnu89 -Wdouble-promotion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59963-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Wdouble-promotion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(8:implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(8:implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(12:implicit conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59963-2_37:
  bin: '"pr59963-2.s"'
  cargs: ' -Woverflow -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59963-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Woverflow -Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(13:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(13:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(8:large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(8:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(9:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(3:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(4:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(5:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(6:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(7:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(8:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(9:negative integer implicitly converted to unsigned type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(9:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(14:conversion of unsigned constant value to negative integer" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr59963-3_14:
  bin: '"pr59963-3.s"'
  cargs: ' -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr59963-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60013_47:
  bin: '"pr60013.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60013.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60036_28:
  bin: '"pr60036.s"'
  cargs: ' -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60036.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60087_14:
  bin: '"pr60087.s"'
  cargs: ' -Wsign-compare -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60087.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(9:promoted ~unsigned is always non-zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison of promoted ~unsigned with constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(10:comparison of promoted ~unsigned with unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(9:comparison between signed and unsigned integer expressions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60114_32:
  bin: '"pr60114.s"'
  cargs: ' -Wconversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60114.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wconversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(9:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(16:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(18:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(23:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(21:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(29:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(28:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(24:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(27:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(28:overflow in implicit constant conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(32:conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(19:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(24:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(27:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(17:conversion of unsigned constant value to negative integer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60139_14:
  bin: '"pr60139.s"'
  cargs: ' -Wpedantic -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60139.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpedantic -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(17:initializer element is not computable at load time))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(28:initializer element is not computable at load time))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(18:initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(23:initializer element is not a constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60195_56:
  bin: '"pr60195.s"'
  cargs: ' -std=c11 -Wpedantic -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60195.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wpedantic -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(unused variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(set but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60257_37:
  bin: '"pr60257.s"'
  cargs: ' -Wc++-compat -Woverride-init -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60257.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat -Woverride-init"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(5:enum conversion in initialization is invalid in C\[+\]\[+\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(32:initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(31:initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(26:initialized field with side-effects overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(25:initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(26:initialized field overwritten))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(29:initialized field with side-effects overwritten))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60267_13:
  bin: '"pr60267.s"'
  cargs: ' -O2 -save-temps -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60267.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -save-temps"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60351_11:
  bin: '"pr60351.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60351.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(5:right shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(5:right shift count >= width of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(5:left shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(5:left shift count >= width of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60485-1_29:
  bin: '"./pr60485-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60485-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60485-2_38:
  bin: '"./pr60485-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60485-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60598_26:
  bin: '"pr60598.s"'
  cargs: ' -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60598.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60647-1_30:
  bin: '"pr60647-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60647-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60647-2_29:
  bin: '"pr60647-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60647-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(function called through a non-compatible type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60704_14:
  bin: '"pr60704.s"'
  cargs: ' -flive-range-shrinkage -march=amdfam10 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60704.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flive-range-shrinkage"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60784_25:
  bin: '"pr60784.s"'
  cargs: ' -Wextra -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60784.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60844_16:
  bin: '"pr60844.s"'
  cargs: ' -O2 -g -mtune=atom -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60844.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60866_18:
  bin: '"pr60866.s"'
  cargs: ' -O -fselective-scheduling -fno-if-conversion -fschedule-insns -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60866.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fselective-scheduling -fno-if-conversion -fschedule-insns" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr60915_7:
  bin: '"pr60915.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr60915.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(attributes should be specified before the declarator in a function definition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61045_12:
  bin: '"./pr61045.exe"'
  cargs: ' -fstrict-overflow'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61045.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61053_85:
  bin: '"pr61053.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61053.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(cannot reduce alignment))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61058_10:
  bin: '"pr61058.s"'
  cargs: ' -fno-asynchronous-unwind-tables -mtune=atom -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61058.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61060_19:
  bin: '"pr61060.s"'
  cargs: ' -O0 -ftree-ter -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61060.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -ftree-ter"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61077_12:
  bin: '"pr61077.s"'
  cargs: ' -std=c11 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61077.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified return type" "return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified parameter type\[^\n\]*int" "parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified parameter type\[^\n\]*char" "parameter))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61096-1_61:
  bin: '"pr61096-1.s"'
  cargs: ' -std=gnu99 -fshort-enums -fshort-wchar -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61096-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fshort-enums -fshort-wchar -Wpedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:char-array initialized from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(23:wide character array initialized from non-wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(23:wide character array initialized from incompatible wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14:array of inappropriate type initialized from string constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:initializer element is not))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:invalid initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(23:extra brace group at end of initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:initialization of flexible array member in a nested context))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(20:array index in non-array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(24:empty scalar initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:array index in initializer not of integer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:nonconstant array index in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(31:nonconstant array index in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:array index in non-array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(16:array index in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(31:empty index range in initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(31:array index range in initializer exceeds array bounds))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15:field name not in record or union initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(15:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(22:excess elements in char array initializer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:non-static initialization of a flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:field name not in record or union initializer))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid use of structure with flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(12:initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(23:excess elements in struct initializer" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61096-2_10:
  bin: '"pr61096-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61096-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(13:invalid use of non-lvalue array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61158_11:
  bin: '"pr61158.s"'
  cargs: ' -O2 -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61158.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61162-2_48:
  bin: '"pr61162-2.s"'
  cargs: ' -Wc++-compat -Wpointer-sign -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61162-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat -Wpointer-sign -Wpedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:incompatible types when returning))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(10:enum conversion in return))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(10:in function returning void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(10:return makes integer from pointer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(10:return makes pointer from integer without a cast))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(10:pointer targets in return differ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(10:ISO C forbids return between function pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61162_12:
  bin: '"pr61162.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61162.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(17:enum conversion in initialization is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(5:enum conversion in assignment is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(13:enum conversion in return is invalid))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61220_39:
  bin: '"pr61220.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61220.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61441_65:
  bin: '"./pr61441.exe"'
  cargs: ' -O1 -lm -fexcess-precision=standard -fsignaling-nans'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61441.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -lm -fexcess-precision=standard -fsignaling-nans"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61529_27:
  bin: '"pr61529.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61529.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61561_16:
  bin: '"pr61561.o"'
  cargs: '  -w -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61561.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -w -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61583_18:
  bin: '"pr61583.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61583.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61692_174:
  bin: '"pr61692.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61692.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(more than 30 operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61756_14:
  bin: '"pr61756.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61756.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61762_18:
  bin: '"pr61762.s"'
  cargs: ' -O -fdump-tree-release_ssa -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61762.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-release_ssa"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61773_16:
  bin: '"pr61773.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61773.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61776_28:
  bin: '"pr61776.s"'
  cargs: ' -O2 -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61776.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61817-1_19:
  bin: '"pr61817-1.s"'
  cargs: ' -std=c11 -ftrack-macro-expansion=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61817-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -ftrack-macro-expansion=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61817-2_19:
  bin: '"pr61817-2.s"'
  cargs: ' -std=c11 -ftrack-macro-expansion=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61817-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -ftrack-macro-expansion=1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61852_10:
  bin: '"pr61852.s"'
  cargs: ' -Wimplicit-function-declaration -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61852.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(23:implicit declaration of function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61861_37:
  bin: '"pr61861.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61861.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(12:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11:passing argument))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:passing argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr61868_10:
  bin: '"pr61868.s"'
  cargs: -flto -frandom-seed=0x12345 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr61868.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto -frandom-seed=0x12345"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62004_47:
  bin: '"./pr62004.exe"'
  cargs: ' -O2 -fno-tree-tail-merge'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62004.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-tail-merge"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62024_8:
  bin: '"pr62024.s"'
  cargs: ' -std=gnu11 -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62024.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11 -Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(is not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(is not an integer constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62030_50:
  bin: '"./pr62030.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62030.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62070_19:
  bin: '"pr62070.s"'
  cargs: ' -O3 -fno-tree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62070.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62090-2_24:
  bin: '"pr62090-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62090-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62090_17:
  bin: '"pr62090.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62090.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62167-run_47:
  bin: '"./pr62167-run.exe"'
  cargs: ' -O2 -ftree-tail-merge'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62167-run.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62167_51:
  bin: '"pr62167.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62167.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr62294_10:
  bin: '"pr62294.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr62294.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(passing argument 1 of .bar. from incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63186_34:
  bin: '"pr63186.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63186.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63284_42:
  bin: '"pr63284.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63284.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63342_26:
  bin: '"pr63342.s"'
  cargs: ' -g -O2 -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63342.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63387-2_25:
  bin: '"pr63387-2.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63387-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63387_25:
  bin: '"pr63387.s"'
  cargs: ' -O -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63387.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63453_8:
  bin: '"pr63453.s"'
  cargs: ' -std=gnu11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63453.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(declared but never defined))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(declared but never defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63480_14:
  bin: '"pr63480.s"'
  cargs: ' -Wmissing-field-initializers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63480.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-field-initializers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63543_21:
  bin: '"pr63543.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63543.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type .struct S.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(dereferencing pointer to incomplete type .union U.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63549_7:
  bin: '"pr63549.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63549.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'e' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has an incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-1_10:
  bin: '"pr63567-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-2_10:
  bin: '"pr63567-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-3_7:
  bin: '"pr63567-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63567-4_7:
  bin: '"pr63567-4.s"'
  cargs: ' -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63567-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63568_69:
  bin: '"pr63568.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63568.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63593_20:
  bin: '"pr63593.s"'
  cargs: ' -O3 -fno-tree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63593.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63594-1_66:
  bin: '"pr63594-1.s"'
  cargs: ' -O2 -Wno-psabi -mno-mmx -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63594-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63594-2_93:
  bin: '"./pr63594-2.exe"'
  cargs: ' -O2 -Wno-psabi -mno-mmx'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63594-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63626_8:
  bin: '"pr63626.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63626.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(inline function .foo. declared but never defined" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-1_15:
  bin: '"pr63637-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-2_15:
  bin: '"pr63637-2.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-3_15:
  bin: '"pr63637-3.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-4_15:
  bin: '"pr63637-4.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-5_15:
  bin: '"pr63637-5.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63637-6_15:
  bin: '"pr63637-6.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63637-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63665_18:
  bin: '"./pr63665.exe"'
  cargs: ' -O -fno-tree-ccp -fno-tree-fre -fno-tree-copy-prop -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63665.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-fre -fno-tree-copy-prop -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63743_11:
  bin: '"pr63743.s"'
  cargs: -O1 -fdump-rtl-expand-details -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63743.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-expand-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63748_37:
  bin: '"pr63748.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63748.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63762_77:
  bin: '"pr63762.o"'
  cargs: ' -O2 -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63762.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63770_16:
  bin: '"pr63770.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63770.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63804_52:
  bin: '"pr63804.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63804.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63835_16:
  bin: '"pr63835.s"'
  cargs: ' -Os -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63835.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63856_15:
  bin: '"pr63856.s"'
  cargs: ' -O2 -Wno-psabi -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63856.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63877_5:
  bin: '"pr63877.s"'
  cargs: ' -Wmissing-declarations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63877.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-declarations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr63914_49:
  bin: '"pr63914.s"'
  cargs: ' -O2 -ffast-math -msse -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr63914.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ffast-math"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64007_50:
  bin: '"./pr64007.exe"'
  cargs: '  -O3 '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64007.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -O3 "'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64015_10:
  bin: '"pr64015.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64015.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 "'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64075_9:
  bin: '"pr64075.s"'
  cargs: ' -flto -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64075.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-flto"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64087_35:
  bin: '"pr64087.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64087.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64223-1_12:
  bin: '"pr64223-1.s"'
  cargs: ' -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64223-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64223-2_13:
  bin: '"pr64223-2.s"'
  cargs: ' -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64223-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64252_31:
  bin: '"./pr64252.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64252.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64277_28:
  bin: '"pr64277.s"'
  cargs: ' -O3 -Wall -Werror -fdump-tree-cunroll-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64277.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wall -Werror -fdump-tree-cunroll-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64295_8:
  bin: '"pr64295.s"'
  cargs: ' -O -frounding-math -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64295.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -frounding-math -funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64309_65:
  bin: '"./pr64309.exe"'
  cargs: ' -fdump-tree-original'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64309.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64316_42:
  bin: '"pr64316.s"'
  cargs: ' -O3 -mavx2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64316.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64406_26:
  bin: '"pr64406.s"'
  cargs: ' -O -ftree-loop-distribute-patterns -fno-tree-loop-ivcanon -fno-tree-loop-vectorize -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64406.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-loop-distribute-patterns -fno-tree-loop-ivcanon -fno-tree-loop-vectorize -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64417_16:
  bin: '"pr64417.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64417.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialization of flexible array member))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64423_13:
  bin: '"pr64423.s"'
  cargs: ' -Wchar-subscripts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64423.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wchar-subscripts"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(11:array subscript has type .char.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(14:array subscript has type .char.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(16:array subscript has type .char.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64434_21:
  bin: '"pr64434.s"'
  cargs: -O1 -fdump-rtl-expand-details -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64434.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-rtl-expand-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64440_15:
  bin: '"pr64440.s"'
  cargs: ' -Wall -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64440.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(division by zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64454_42:
  bin: '"pr64454.s"'
  cargs: ' -O2 -fdump-tree-vrp1 -fno-ipa-icf -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64454.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-vrp1 -fno-ipa-icf"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64465_22:
  bin: '"pr64465.s"'
  cargs: ' -O2 -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64465.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64511_23:
  bin: '"pr64511.s"'
  cargs: ' -O3 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64511.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64536_68:
  bin: '"pr64536.exe"'
  cargs: ' -O2 -fPIC'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64536.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64563_14:
  bin: '"pr64563.s"'
  cargs: ' -Os -Wtype-limits -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64563.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -Wtype-limits"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64637_25:
  bin: '"pr64637.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64637.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(28:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(26:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(8:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(13:statement with no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(8:statement with no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64663_17:
  bin: '"pr64663.s"'
  cargs: ' -O2 -g -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64663.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64709_10:
  bin: '"pr64709.s"'
  cargs: ' -Wmissing-field-initializers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64709.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmissing-field-initializers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64715-1_22:
  bin: '"pr64715-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64715-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64715-2_18:
  bin: '"pr64715-2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64715-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64766_9:
  bin: '"pr64766.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64766.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(is initialized like a variable|invalid initializer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64778_10:
  bin: '"pr64778.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64778.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before|too many arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64807_19:
  bin: '"./pr64807.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64807.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64817-1_20:
  bin: '"pr64817-1.s"'
  cargs: ' -O3 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64817-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64817-2_13:
  bin: '"pr64817-2.s"'
  cargs: ' -O3 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64817-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64817-3_13:
  bin: '"pr64817-3.s"'
  cargs: ' -O3 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64817-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64856_13:
  bin: '"pr64856.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64856.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64935-1_55:
  bin: '"pr64935-1.s"'
  cargs: ' -std=gnu89 -Wno-shift-count-overflow -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64935-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89 -Wno-shift-count-overflow -O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr64935-2_16:
  bin: '"pr64935-2.s"'
  cargs: ' -O -fschedule-insns --param=max-sched-ready-insns=0 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr64935-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fschedule-insns --param=max-sched-ready-insns=0 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65050_23:
  bin: '"pr65050.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65050.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .A {aka int\\\[\\\]}.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .int\\\[\\\].))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .A {aka int\\\[\\\]}.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .int\\\[\\\].))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .A {aka int\\\[\\\]}.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .struct T.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .struct U.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array type has incomplete element type .TT {aka struct T}.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65063_33:
  bin: '"./pr65063.exe"'
  cargs: ' -O3 -fno-tree-loop-ivcanon -fno-tree-vectorize'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65063.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-tree-loop-ivcanon -fno-tree-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65066_12:
  bin: '"pr65066.s"'
  cargs: ' -Wformat -Wformat-signedness -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65066.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat -Wformat-signedness"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(expects argument of type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65228_11:
  bin: '"pr65228.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65228.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65321_31:
  bin: '"pr65321.s"'
  cargs: ' -O3 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65321.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65345-1_35:
  bin: '"pr65345-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65345-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65345-2_60:
  bin: '"./pr65345-2.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65345-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65345-3_35:
  bin: '"pr65345-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65345-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65358_33:
  bin: '"./pr65358.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65358.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65408_112:
  bin: '"./pr65408.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65408.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65521_40:
  bin: '"pr65521.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65521.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65533_25:
  bin: '"pr65533.s"'
  cargs: ' -Ofast -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65533.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Ofast -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65658_112:
  bin: '"pr65658.s"'
  cargs: ' -Wuninitialized -O2 -Wno-implicit -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65658.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -Wno-implicit"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65779_43:
  bin: '"pr65779.o"'
  cargs: ' -O2 -fcompare-debug -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65779.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65780-1_12:
  bin: '"pr65780-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65780-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65780-2_13:
  bin: '"pr65780-2.exe"'
  cargs: ' -O2 -fpie'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65780-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fpie"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65802_28:
  bin: '"pr65802.s"'
  cargs: ' -O0 -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65802.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65901_16:
  bin: '"pr65901.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65901.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .void.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .struct S.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .enum E.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(second argument to .va_arg. is of incomplete type .union U.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr65980_31:
  bin: '"pr65980.s"'
  cargs: ' -O3 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr65980.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66066-1_37:
  bin: '"pr66066-1.s"'
  cargs: ' -Wno-div-by-zero -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66066-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-div-by-zero"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66066-2_37:
  bin: '"pr66066-2.s"'
  cargs: ' -Wno-div-by-zero -Wpedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66066-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-div-by-zero -Wpedantic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66066-3_37:
  bin: '"pr66066-3.s"'
  cargs: ' -Wno-div-by-zero -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66066-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-div-by-zero -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not a constant expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66187-1_97:
  bin: '"./pr66187-1.exe"'
  cargs: ' -O2 -fno-wrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66187-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-wrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66187-2_97:
  bin: '"./pr66187-2.exe"'
  cargs: ' -O2 -fwrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66187-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fwrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66299-1_93:
  bin: '"./pr66299-1.exe"'
  cargs: ' -fdump-tree-original'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66299-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66299-2_34:
  bin: '"./pr66299-2.exe"'
  cargs: ' -fdump-tree-optimized -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66299-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-optimized -O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66299-3_68:
  bin: '"./pr66299-3.exe"'
  cargs: ' -fdump-tree-original'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66299-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66444_79:
  bin: '"./pr66444.exe"'
  cargs: ' -O2 -fipa-ra'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66444.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-ra"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66688_40:
  bin: '"pr66688.s"'
  cargs: ' -O2 -fno-reorder-blocks -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66688.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-reorder-blocks -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66869_6:
  bin: '"pr66869.s"'
  cargs: ' -Wunused-function -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66869.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-function"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*('test' declared 'static' but never defined))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr66899_42:
  bin: '"pr66899.s"'
  cargs: ' -Os -fprofile-arcs -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr66899.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fprofile-arcs"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67028_21:
  bin: '"./pr67028.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67028.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67029_14:
  bin: '"pr67029.s"'
  cargs: ' -O2 -fschedule-insns -fstack-protector -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67029.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fschedule-insns"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67043_32:
  bin: '"pr67043.s"'
  cargs: ' -O3 -fcompare-debug -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67043.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fcompare-debug -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67077_20:
  bin: '"pr67077.s"'
  cargs: ' -Wall -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67077.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67088_18:
  bin: '"pr67088.s"'
  cargs: ' -Wpedantic -std=c90 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67088.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wpedantic -std=c90"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10:has invalid type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:width not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:width not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:negative width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:zero width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:width of))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(7:width not an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(12:type of bit-field))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(24:is narrower))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-1_112:
  bin: '"./pr67089-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-2_112:
  bin: '"./pr67089-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-3_112:
  bin: '"./pr67089-3.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-4_112:
  bin: '"./pr67089-4.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-5_82:
  bin: '"./pr67089-5.exe"'
  cargs: ' -O2 -ftree-loop-if-convert'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-6_62:
  bin: '"pr67089-6.s"'
  cargs: ' -O2 -ftree-loop-if-convert -fdump-tree-widening_mul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67089-7_62:
  bin: '"pr67089-7.s"'
  cargs: ' -O2 -ftree-loop-if-convert -fdump-tree-widening_mul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67089-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert -fdump-tree-widening_mul"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67107_7:
  bin: '"pr67107.s"'
  cargs: ' -frounding-math -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67107.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-frounding-math -funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67271_13:
  bin: '"pr67271.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67271.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67312_7:
  bin: '"pr67312.s"'
  cargs: ' -O0 -ftree-coalesce-vars -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67312.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -ftree-coalesce-vars"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67338_4:
  bin: '"pr67338.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67338.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67410_15:
  bin: '"./pr67410.exe"'
  cargs: ' -std=gnu11'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67410.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67432_6:
  bin: '"pr67432.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67432.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty enum is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty enum is invalid))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty enum is invalid))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67465_53:
  bin: '"./pr67465.exe"'
  cargs: ' -O3 -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67465.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67512_15:
  bin: '"pr67512.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67512.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67563_11:
  bin: '"pr67563.s"'
  cargs: ' -O2 -fexceptions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67563.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fexceptions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67580_25:
  bin: '"pr67580.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67580.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .S.; use .struct. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .U.; use .union. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .E.; use .enum. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .T.; use .struct. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .V.; use .union. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name .F.; use .enum. keyword to refer to the type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67730-1_16:
  bin: '"pr67730-1.s"'
  cargs: ' -Wc++-compat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67730-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wc++-compat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(request for implicit conversion))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67730-2_22:
  bin: '"pr67730-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67730-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization makes integer from pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes integer from pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes integer from pointer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(return makes integer from pointer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67730_11:
  bin: '"pr67730.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67730.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(10:.return. with a value))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-1_54:
  bin: '"pr67784-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-2_54:
  bin: '"pr67784-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-3_50:
  bin: '"pr67784-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-4_55:
  bin: '"pr67784-4.s"'
  cargs: ' -Wno-switch-unreachable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wno-switch-unreachable"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67784-5_55:
  bin: '"pr67784-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67784-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67786_20:
  bin: '"./pr67786.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67786.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67787_43:
  bin: '"./pr67787.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67787.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67830_22:
  bin: '"./pr67830.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67830.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67854_11:
  bin: '"pr67854.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67854.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to .int. when passed through))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr67964_22:
  bin: '"pr67964.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr67964.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68024_5:
  bin: '"pr68024.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68024.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(defined as variadic function without prototype))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68088_1_15:
  bin: '"pr68088_1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68088_1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68090_13:
  bin: '"pr68090.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68090.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68112_12:
  bin: '"pr68112.s"'
  cargs: ' -O2 -Waggressive-loop-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68112.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Waggressive-loop-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68129_1_10:
  bin: '"pr68129_1.s"'
  cargs: ' -O -fno-split-wide-types -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68129_1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-split-wide-types"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68134_19:
  bin: '"pr68134.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68134.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68162-1_6:
  bin: '"pr68162-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68162-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68217_13:
  bin: '"pr68217.s"'
  cargs: ' -O2 -fdisable-tree-evrp -fdump-tree-vrp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68217.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdisable-tree-evrp -fdump-tree-vrp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68286_17:
  bin: '"pr68286.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68286.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68306-2_12:
  bin: '"pr68306-2.s"'
  cargs: ' -O3 -mno-sse -mno-mmx -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68306-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68306-3_21:
  bin: '"pr68306-3.s"'
  cargs: ' -O3 -mno-sse -mno-mmx -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68306-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68306_11:
  bin: '"pr68306.s"'
  cargs: ' -O3 -mno-sse -mno-mmx -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68306.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68317_15:
  bin: '"pr68317.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68317.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68320_67:
  bin: '"pr68320.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68320.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(declaration of non-variable))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68327_15:
  bin: '"pr68327.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68327.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68375_39:
  bin: '"pr68375.s"'
  cargs: ' -O2 -fdump-tree-optimized-graph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68375.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized-graph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68412-2_15:
  bin: '"pr68412-2.s"'
  cargs: ' -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68412-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(self-comparison always evaluates to true))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(self-comparison always evaluates to false))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68412_41:
  bin: '"pr68412.s"'
  cargs: ' -Wall -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68412.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift of negative value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(requires))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(left shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(right shift count))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(right shift count))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68435_53:
  bin: '"pr68435.s"'
  cargs: -fdump-rtl-ce1 -O2 -w --param max-rtl-if-conversion-unpredictable-cost=100 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68435.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-rtl-ce1 -O2 -w --param max-rtl-if-conversion-unpredictable-cost=100"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68474_7:
  bin: '"pr68474.s"'
  cargs: ' -O -funsafe-math-optimizations -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68474.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -funsafe-math-optimizations"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68513_125:
  bin: '"pr68513.s"'
  cargs: ' -funsafe-math-optimizations -fno-math-errno -O -Wno-div-by-zero -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68513.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-funsafe-math-optimizations -fno-math-errno -O -Wno-div-by-zero"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68533_68:
  bin: '"pr68533.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68533.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' as only parameter may not be qualified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' must be the only parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parameter 'x' has just a forward declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' must be the only parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('void' must be the only parameter))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(declared inside parameter list will not be visible outside of this definition or declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(anonymous struct declared inside parameter list will not be visible outside of this definition or declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68595_13:
  bin: '"pr68595.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68595.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68668_53:
  bin: '"pr68668.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68668.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68670-1_5:
  bin: '"./pr68670-1.exe"'
  cargs: ' -O2 -ftracer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68670-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68670-2_5:
  bin: '"./pr68670-2.exe"'
  cargs: ' -O2 -ftracer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68670-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftracer"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68671_24:
  bin: '"./pr68671.exe"'
  cargs: '  -O2 -fno-tree-dce'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68671.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '" -O2 -fno-tree-dce"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68730_51:
  bin: '"pr68730.s"'
  cargs: ' -O3 -fno-if-conversion -march=x86-64 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68730.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-if-conversion"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68766_19:
  bin: '"pr68766.s"'
  cargs: ' -O2 -ftree-vectorize -fdbg-cnt=vect_loop:1 -mavx2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68766.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize -fdbg-cnt=vect_loop:1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68785_9:
  bin: '"pr68785.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68785.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68835-1_12:
  bin: '"pr68835-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68835-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68835-2_23:
  bin: '"./pr68835-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68835-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68841_34:
  bin: '"./pr68841.exe"'
  cargs: ' -Og -fif-conversion -flive-range-shrinkage -fpeel-loops -frerun-cse-after-loop'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68841.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -fif-conversion -flive-range-shrinkage -fpeel-loops -frerun-cse-after-loop"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr68907_14:
  bin: '"pr68907.s"'
  cargs: ' -std=c11 -Wpedantic -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr68907.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wpedantic -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69015_10:
  bin: '"pr69015.s"'
  cargs: ' -O2 -fno-if-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69015.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-if-conversion"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69032_11:
  bin: '"pr69032.s"'
  cargs: ' -O2 -fsched-pressure -fsel-sched-pipelining -fselective-scheduling -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69032.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsched-pressure -fsel-sched-pipelining -fselective-scheduling"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69047_18:
  bin: '"pr69047.s"'
  cargs: ' -O -fdump-tree-cddce1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69047.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-cddce1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69070_9:
  bin: '"pr69070.s"'
  cargs: ' -O2 -fsignaling-nans -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69070.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsignaling-nans"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69071_23:
  bin: '"pr69071.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69071.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69097-1_140:
  bin: '"pr69097-1.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69097-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69097-2_138:
  bin: '"pr69097-2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69097-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69156_10:
  bin: '"pr69156.s"'
  cargs: ' -O1 -fno-tree-ccp -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69156.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-ccp"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(initialization from incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69162_12:
  bin: '"pr69162.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69162.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69167_21:
  bin: '"pr69167.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69167.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69169_13:
  bin: '"pr69169.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69169.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69172_45:
  bin: '"pr69172.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69172.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69181-2_4:
  bin: '"pr69181-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69181-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69195_27:
  bin: '"./pr69195.exe"'
  cargs: ' -O3 -fno-dce -fno-forward-propagate'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69195.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fno-dce -fno-forward-propagate"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69238_28:
  bin: '"./pr69238.exe"'
  cargs: ' -O2 -fno-dce -fno-forward-propagate -fno-rerun-cse-after-loop -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69238.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-dce -fno-forward-propagate -fno-rerun-cse-after-loop -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69247_14:
  bin: '"pr69247.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69247.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69307_34:
  bin: '"./pr69307.exe"'
  cargs: ' -O2 -fselective-scheduling2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69307.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69328_16:
  bin: '"pr69328.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69328.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69391-1_12:
  bin: '"./pr69391-1.exe"'
  cargs: ' -ansi -pedantic-errors -ftrack-macro-expansion=0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69391-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69391-2_12:
  bin: '"./pr69391-2.exe"'
  cargs: ' -ansi -pedantic-errors -ftrack-macro-expansion=1'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69391-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69421_16:
  bin: '"pr69421.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69421.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69442_23:
  bin: '"./pr69442.exe"'
  cargs: ' -Og'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69442.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69483_6:
  bin: '"pr69483.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69483.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'b' isn't known))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69522_10:
  bin: '"pr69522.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69522.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69535_36:
  bin: '"./pr69535.exe"'
  cargs: ' -O -fno-tree-bit-ccp -fno-tree-reassoc'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69535.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-bit-ccp -fno-tree-reassoc"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69543_18:
  bin: '"pr69543.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69543.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69554-1_152:
  bin: '"pr69554-1.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69554-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69592_16:
  bin: '"pr69592.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69592.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69619_20:
  bin: '"pr69619.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69619.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69627_27:
  bin: '"pr69627.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69627.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69634_22:
  bin: '"pr69634.s"'
  cargs: ' -O2 -fno-dce -fschedule-insns -fno-tree-vrp -fcompare-debug -Wno-psabi -mno-sse -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69634.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-dce -fschedule-insns -fno-tree-vrp -fcompare-debug -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69644_11:
  bin: '"pr69644.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69644.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69650_5:
  bin: '"pr69650.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69650.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(linemarker ignored due to incorrect nesting))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69733_11:
  bin: '"pr69733.s"'
  cargs: ' -W -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69733.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-W -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69796_10:
  bin: '"pr69796.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69796.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 's' isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expression statement has incomplete type|expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69801_9:
  bin: '"pr69801.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69801.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69802_23:
  bin: '"pr69802.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69802.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69819_5:
  bin: '"pr69819.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69819.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.foo. redeclared as different kind of symbol))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69824_4:
  bin: '"pr69824.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69824.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69885_13:
  bin: '"pr69885.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69885.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69896_33:
  bin: '"./pr69896.exe"'
  cargs: ' -w -O -fcaller-saves -fno-dse -frename-registers -fno-tree-ter -mno-sse'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69896.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -O -fcaller-saves -fno-dse -frename-registers -fno-tree-ter"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69900_6:
  bin: '"pr69900.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69900.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69915_15:
  bin: '"pr69915.s"'
  cargs: ' -O -ftracer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69915.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftracer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69956_11:
  bin: '"pr69956.s"'
  cargs: ' -O2 -ftree-vectorize -march=skylake-avx512 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69956.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69973_3:
  bin: '"pr69973.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69973.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr69974_13:
  bin: '"pr69974.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr69974.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of 'a' isn't known))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70017_20:
  bin: '"pr70017.s"'
  cargs: ' -fstack-check=generic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70017.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-check=generic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(frame size too large for reliable stack checking" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70022_10:
  bin: '"pr70022.s"'
  cargs: ' -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70022.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70026_15:
  bin: '"pr70026.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70026.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70050_11:
  bin: '"pr70050.s"'
  cargs: ' -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70050.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70110_39:
  bin: '"pr70110.s"'
  cargs: ' -O3 -msse2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70110.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70152_27:
  bin: '"pr70152.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70152.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70161-2_7:
  bin: '"pr70161-2.s"'
  cargs: ' -O2 -fdump-ipa-all-graph -fipa-pta -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70161-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-ipa-all-graph -fipa-pta"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70161_10:
  bin: '"pr70161.s"'
  cargs: ' -O2 -fdump-ipa-all-graph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70161.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-ipa-all-graph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70169_41:
  bin: '"pr70169.s"'
  cargs: ' -O2 -fno-strict-aliasing -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70169.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70174_11:
  bin: '"pr70174.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70174.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(assignment makes integer from pointer without a cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70177_15:
  bin: '"pr70177.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70177.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70219_18:
  bin: '"pr70219.s"'
  cargs: ' -O1 -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70219.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70252_16:
  bin: '"pr70252.s"'
  cargs: ' -O3 -march=skylake-avx512 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70252.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70269_7:
  bin: '"pr70269.s"'
  cargs: ' -O2 -fipa-pta -fdump-ipa-pta-graph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70269.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fipa-pta -fdump-ipa-pta-graph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70281_9:
  bin: '"pr70281.s"'
  cargs: ' -Wall -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70281.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(cast))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70292_12:
  bin: '"pr70292.s"'
  cargs: ' -O1 -fno-inline -fno-dce -fschedule-insns -fselective-scheduling -fno-tree-dce -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70292.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-inline -fno-dce -fschedule-insns -fselective-scheduling -fno-tree-dce"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70317_27:
  bin: '"pr70317.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70317.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70326_20:
  bin: '"pr70326.s"'
  cargs: ' -Og -fno-dce -fno-guess-branch-probability -fschedule-insns -fno-tree-coalesce-vars -fno-tree-dce -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70326.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -fno-dce -fno-guess-branch-probability -fschedule-insns -fno-tree-coalesce-vars -fno-tree-dce -w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70405_16:
  bin: '"pr70405.s"'
  cargs: ' -O2 -fcompare-debug -mavx512f -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70405.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70442_20:
  bin: '"pr70442.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70442.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70700_15:
  bin: '"pr70700.s"'
  cargs: ' -O3 -fdump-tree-ealias-graph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70700.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-tree-ealias-graph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70725_22:
  bin: '"pr70725.s"'
  cargs: ' -O3 -march=skylake-avx512 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70725.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70747_10:
  bin: '"pr70747.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70747.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(comparison between pointer and integer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70771_26:
  bin: '"pr70771.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70771.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70775_34:
  bin: '"pr70775.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70775.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70807_18:
  bin: '"pr70807.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70807.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70843_9:
  bin: '"pr70843.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70843.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70852_11:
  bin: '"pr70852.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70852.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70859-2_21:
  bin: '"pr70859-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70859-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70859_69:
  bin: '"pr70859.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70859.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:must be a constant integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(28:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(25:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(30:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(25:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(28:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(27:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8:non-floating-point arguments in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(36:non-const integer argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(45:non-floating-point argument in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(39:non-integer argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:argument 2 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:argument 2 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(34:argument 2 in call to function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(37:argument 3 in call))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too few))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(7:too many))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-1_20:
  bin: '"pr70920-1.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-2_21:
  bin: '"pr70920-2.s"'
  cargs: ' -O2 -fdump-tree-forwprop-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-3_20:
  bin: '"pr70920-3.s"'
  cargs: ' -fdump-tree-gimple -Wno-int-to-pointer-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple -Wno-int-to-pointer-cast"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr70920-4_22:
  bin: '"pr70920-4.s"'
  cargs: ' -O2 -fdump-tree-forwprop-details -Wno-int-to-pointer-cast -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr70920-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details -Wno-int-to-pointer-cast"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71006_16:
  bin: '"pr71006.s"'
  cargs: ' -O1 -ftree-vectorize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71006.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71071_12:
  bin: '"pr71071.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71071.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71077_14:
  bin: '"pr71077.s"'
  cargs: ' -O3 -mavx2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71077.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71084_40:
  bin: '"pr71084.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71084.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71104-1_11:
  bin: '"pr71104-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71104-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71104-2_12:
  bin: '"pr71104-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71104-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71148_46:
  bin: '"pr71148.s"'
  cargs: ' -O3 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71148.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71279_14:
  bin: '"pr71279.s"'
  cargs: ' -O3 -march=knl -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71279.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71280_15:
  bin: '"pr71280.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71280.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71289_18:
  bin: '"pr71289.s"'
  cargs: ' -O -fdump-tree-optimized-raw -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71289.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-optimized-raw"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71362_10:
  bin: '"pr71362.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71362.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(21:size of unnamed array is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(20:size of unnamed array is negative))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71478_19:
  bin: '"pr71478.s"'
  cargs: ' -O3 -Wno-psabi -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71478.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wno-psabi -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71514_23:
  bin: '"pr71514.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71514.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must not be a pointer to a function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be a pointer to a constant size type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71518_25:
  bin: '"pr71518.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71518.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71558_17:
  bin: '"pr71558.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71558.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71581_24:
  bin: '"pr71581.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71581.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized in this function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71585-2_23:
  bin: '"pr71585-2.s"'
  cargs: -O2 -fstack-protector-all -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71585-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71585-3_24:
  bin: '"pr71585-3.s"'
  cargs: -O2 -fstack-protector-all -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71585-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71585_23:
  bin: '"pr71585.s"'
  cargs: -O2 -fstack-protector-all -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71585.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fstack-protector-all"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71619_11:
  bin: '"pr71619.s"'
  cargs: ' -O --param=max-predicted-iterations=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71619.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O --param=max-predicted-iterations=0"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71632_53:
  bin: '"pr71632.s"'
  cargs: ' -O2 -ftree-loop-if-convert -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71632.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71636-1_9:
  bin: '"pr71636-1.s"'
  cargs: ' -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71636-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71636-2_12:
  bin: '"pr71636-2.s"'
  cargs: ' -O2 -fdump-tree-forwprop-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71636-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-forwprop-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71685_6:
  bin: '"pr71685.s"'
  cargs: ' -std=gnu11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71685.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71969-1_37:
  bin: '"pr71969-1.s"'
  cargs: ' -std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71969-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71969-2_23:
  bin: '"pr71969-2.s"'
  cargs: ' -std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71969-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fno-gnu89-inline -O2 -fdump-tree-einline-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr71969-3_38:
  bin: '"pr71969-3.s"'
  cargs: ' -std=gnu99 -fgnu89-inline -O2 -fdump-tree-einline-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr71969-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fgnu89-inline -O2 -fdump-tree-einline-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr72816_9:
  bin: '"pr72816.s"'
  cargs: ' -std=gnu11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr72816.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr76783_28:
  bin: '"./pr76783.exe"'
  cargs: ' -Og -w -Wno-psabi'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr76783.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -w -Wno-psabi"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77407_18:
  bin: '"pr77407.s"'
  cargs: ' -O -fstrict-overflow -fdump-tree-gimple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77407.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fstrict-overflow -fdump-tree-gimple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77450_10:
  bin: '"pr77450.s"'
  cargs: ' -std=gnu90 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77450.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77454_28:
  bin: '"pr77454.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77454.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77520_10:
  bin: '"pr77520.s"'
  cargs: ' -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77520.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown conversion type character .\\\\x80. in format))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77521_8:
  bin: '"pr77521.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77521.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid punctuation .\\\\x0a. in constraint))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77587_15:
  bin: '"./pr77587.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77587.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77587a_24:
  bin: '"pr77587a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77587a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77621_11:
  bin: '"pr77621.s"'
  cargs: ' -O3 -mtune=atom -msse2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77621.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77664_55:
  bin: '"./pr77664.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77664.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77673_19:
  bin: '"pr77673.s"'
  cargs: ' -O2 -fPIC -fdump-tree-bswap -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77673.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -fdump-tree-bswap"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77834_18:
  bin: '"pr77834.s"'
  cargs: ' -O -ftree-pre -Wno-psabi -mstringop-strategy=libcall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77834.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -ftree-pre -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77860_13:
  bin: '"pr77860.s"'
  cargs: ' -O2 -fno-tree-vrp -fno-tree-forwprop -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77860.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-vrp -fno-tree-forwprop -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77862_20:
  bin: '"pr77862.s"'
  cargs: ' -O2 -fPIC -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77862.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr77975_31:
  bin: '"pr77975.s"'
  cargs: ' -O2 -fdump-tree-ivcanon-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr77975.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-ivcanon-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78138_22:
  bin: '"pr78138.s"'
  cargs: ' -O2 -Wformat-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78138.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wformat-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(.strcpy. writing 6 bytes into a region of size 5))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(.memcpy.: writing between 7 and 32 bytes into a region of size 5))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78148_31:
  bin: '"pr78148.s"'
  cargs: ' -O2 -fcompare-debug -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78148.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fcompare-debug"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78185_28:
  bin: '"./pr78185.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78185.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78241_20:
  bin: '"./pr78241.exe"'
  cargs: ' -Og -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78241.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78333_22:
  bin: '"pr78333.exe"'
  cargs: ' -finstrument-functions'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78333.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-finstrument-functions"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78384_25:
  bin: '"pr78384.s"'
  cargs: ' -O3 -w -fsplit-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78384.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -w -fsplit-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78408-1_88:
  bin: '"pr78408-1.s"'
  cargs: ' -O2 -fdump-tree-fab1-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78408-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78408-2_39:
  bin: '"pr78408-2.s"'
  cargs: ' -O2 -fdump-tree-fab1-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78408-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-fab1-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78445_19:
  bin: '"pr78445.s"'
  cargs: ' -O2 -ftree-loop-if-convert -ftree-vectorize -mavx2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78445.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-loop-if-convert -ftree-vectorize"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78526_21:
  bin: '"pr78526.s"'
  cargs: ' -O -fno-tree-ccp -fno-tree-sra -g -w -mavx512bw -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78526.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-sra -g -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78540_27:
  bin: '"pr78540.s"'
  cargs: ' -O2 -Wno-psabi -march=core2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78540.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78547_18:
  bin: '"pr78547.s"'
  cargs: ' -Os -g -freorder-blocks-algorithm=simple -Wno-psabi -mstringop-strategy=libcall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78547.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -g -freorder-blocks-algorithm=simple -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78575_16:
  bin: '"pr78575.s"'
  cargs: ' -O2 -g -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78575.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78582_18:
  bin: '"pr78582.s"'
  cargs: ' -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78582.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78644-1_21:
  bin: '"pr78644-1.s"'
  cargs: ' -Og -fipa-cp -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78644-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -fipa-cp -w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78644-2_20:
  bin: '"pr78644-2.s"'
  cargs: ' -Og -finline-functions-called-once -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78644-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -finline-functions-called-once -w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78721_23:
  bin: '"./pr78721.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78721.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78725-2_19:
  bin: '"./pr78725-2.exe"'
  cargs: ' -O3 -fsplit-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78725-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fsplit-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78725_19:
  bin: '"./pr78725.exe"'
  cargs: ' -O3 -fsplit-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78725.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fsplit-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78768_14:
  bin: '"pr78768.exe"'
  cargs: ' -O2 -Walloca-larger-than=10 -Wformat -Wformat-overflow -flto'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78768.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloca-larger-than=10 -Wformat -Wformat-overflow -flto"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(argument to .alloca. is too large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(directive writing 32 bytes into a region of size 12" "-Wformat-overflow))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78775_19:
  bin: '"pr78775.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78775.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78957_6:
  bin: '"pr78957.s"'
  cargs: ' -fno-sso-struct=none -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78957.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-sso-struct=none"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78965_14:
  bin: '"./pr78965.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78965.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78973-2_25:
  bin: '"pr78973-2.s"'
  cargs: ' -O2 -Walloc-size-larger-than=4 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78973-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Walloc-size-larger-than=4"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(argument 1 range \\\[\[0-9\]+, \[0-9\]+\\\] exceeds maximum object size 4" "ilp32))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr78973_20:
  bin: '"pr78973.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr78973.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(exceeds maximum object size" "pr79073))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79080_19:
  bin: '"pr79080.s"'
  cargs: ' -O1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79080.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79255_21:
  bin: '"pr79255.s"'
  cargs: ' -O2 -g -fno-toplevel-reorder -Wno-attributes -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79255.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g -fno-toplevel-reorder -Wno-attributes"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79405_45:
  bin: '"pr79405.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79405.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79494_22:
  bin: '"pr79494.s"'
  cargs: ' -O2 -fsplit-stack -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79494.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsplit-stack -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79499_13:
  bin: '"pr79499.s"'
  cargs: ' -O2 -fsplit-stack -fno-omit-frame-pointer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79499.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fsplit-stack -fno-omit-frame-pointer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79570_6:
  bin: '"pr79570.s"'
  cargs: ' -O2 -fselective-scheduling2 -fvar-tracking-assignments -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79570.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fselective-scheduling2 -fvar-tracking-assignments"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(changes selective scheduling" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79574-2_33:
  bin: '"pr79574-2.s"'
  cargs: ' -Os --param gcse-cost-distance-ratio=2147483647 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79574-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os --param gcse-cost-distance-ratio=2147483647"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79574_10:
  bin: '"pr79574.s"'
  cargs: ' -Os --param gcse-cost-distance-ratio=2147483647 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79574.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os --param gcse-cost-distance-ratio=2147483647"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79677_15:
  bin: '"pr79677.s"'
  cargs: ' -Wformat -Werror=format-security -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79677.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat -Werror=format-security -Wformat"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(format not a string literal and no format arguments))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79730_6:
  bin: '"pr79730.s"'
  cargs: ' -std=gnu11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79730.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid storage class))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79788-1_11:
  bin: '"pr79788-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79788-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant is too large for its type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79788-2_11:
  bin: '"pr79788-2.s"'
  cargs: ' -ftrapv -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79788-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant is too large for its type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr79972_16:
  bin: '"pr79972.s"'
  cargs: ' -Walloca -Wvla-larger-than=10000 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr79972.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloca -Wvla-larger-than=10000"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(unbounded use of variable-length array))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80020_26:
  bin: '"pr80020.s"'
  cargs: ' -O2 -Wall -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80020.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80100_9:
  bin: '"pr80100.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80100.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80112_21:
  bin: '"pr80112.s"'
  cargs: ' -Os -fmodulo-sched -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80112.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fmodulo-sched"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80163_22:
  bin: '"pr80163.s"'
  cargs: ' -O0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80163.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initializer element is not computable at load time))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80170_43:
  bin: '"./pr80170.exe"'
  cargs: ' -fgimple -O2 -ftree-slp-vectorize'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80170.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fgimple -O2 -ftree-slp-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80218_28:
  bin: '"pr80218.s"'
  cargs: -O2 -fdump-rtl-ira-details-blocks -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80218.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-ira-details-blocks"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80286_23:
  bin: '"./pr80286.exe"'
  cargs: ' -O2 -Wno-psabi'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80286.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wno-psabi"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80492_20:
  bin: '"pr80492.s"'
  cargs: ' -w -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80492.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80500_15:
  bin: '"pr80500.s"'
  cargs: ' -O2 -funroll-loops -ftree-loop-if-convert -fvariable-expansion-in-unroller -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80500.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -ftree-loop-if-convert -fvariable-expansion-in-unroller"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80747_18:
  bin: '"pr80747.s"'
  cargs: ' -fprofile-use -freorder-blocks-and-partition -O1 -foptimize-sibling-calls -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80747.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-use -freorder-blocks-and-partition -O1 -foptimize-sibling-calls"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr80903_34:
  bin: '"pr80903.s"'
  cargs: ' -O3 -funroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr80903.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81192_22:
  bin: '"pr81192.s"'
  cargs: ' -Os -fdump-tree-pre-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81192.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fdump-tree-pre-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81455_15:
  bin: '"pr81455.s"'
  cargs: ' -O -funswitch-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81455.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -funswitch-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81588_26:
  bin: '"./pr81588.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81588.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81621_5:
  bin: '"pr81621.s"'
  cargs: ' -Og -fno-split-wide-types -freorder-blocks-and-partition -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81621.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Og -fno-split-wide-types -freorder-blocks-and-partition"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81650_9:
  bin: '"pr81650.s"'
  cargs: ' -Walloc-size-larger-than=9223372036854775807 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81650.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Walloc-size-larger-than=9223372036854775807"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr81988_22:
  bin: '"pr81988.o"'
  cargs: ' -O3 -fpie -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr81988.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fpie"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82112_21:
  bin: '"pr82112.s"'
  cargs: ' -std=gnu90 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82112.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_load. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_load. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_store. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_store. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_exchange. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_exchange. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 3 of .__atomic_exchange. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 1 of .__atomic_compare_exchange. must be a non-void pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 2 of .__atomic_compare_exchange. must be a pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(argument 3 of .__atomic_compare_exchange. must be a pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82274-1_16:
  bin: '"./pr82274-1.exe"'
  cargs: ' -ftrapv'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82274-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftrapv"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82274-2_26:
  bin: '"./pr82274-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82274-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82703_28:
  bin: '"./pr82703.exe"'
  cargs: ' -O2 -fno-tree-sra -ftree-vectorize'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82703.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-sra -ftree-vectorize"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82765_5:
  bin: '"pr82765.s"'
  cargs: ' -Os -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82765.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr82975_20:
  bin: '"pr82975.s"'
  cargs: ' -fno-sched-pressure -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr82975.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-sched-pressure -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83198_18:
  bin: '"pr83198.s"'
  cargs: ' -Wall -Wno-format -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83198.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-format"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83424_30:
  bin: '"./pr83424.exe"'
  cargs: ' -O -fno-tree-ccp -fno-tree-coalesce-vars'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83424.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fno-tree-ccp -fno-tree-coalesce-vars"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83512_16:
  bin: '"pr83512.s"'
  cargs: ' -O2 -freorder-blocks-algorithm=simple -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83512.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -freorder-blocks-algorithm=simple"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83521_10:
  bin: '"pr83521.s"'
  cargs: ' -O1 -fno-tree-forwprop -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83521.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fno-tree-forwprop"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83552_13:
  bin: '"pr83552.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83552.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83609_29:
  bin: '"./pr83609.exe"'
  cargs: ' -O2 -fno-tree-forwprop -fno-tree-ccp -fno-tree-fre -fno-tree-pre -fno-code-hoisting'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83609.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-tree-forwprop -fno-tree-ccp -fno-tree-fre -fno-tree-pre -fno-code-hoisting"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr83623_12:
  bin: '"pr83623.s"'
  cargs: ' -O2 -mmovbe -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr83623.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8715_13:
  bin: '"pr8715.s"'
  cargs: ' -Wsign-compare -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8715.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare -std=c99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(promoted ~unsigned is always non-zero))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8788-1_20:
  bin: '"pr8788-1.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8788-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(impossible constraint))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(asm operand 1" "asm operand 1))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8835-1_12:
  bin: '"pr8835-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8835-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr8927-1_13:
  bin: '"pr8927-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr8927-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr9365-1_41:
  bin: '"pr9365-1.s"'
  cargs: ' -O2 -fomit-frame-pointer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr9365-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fomit-frame-pointer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pr9814-1_107:
  bin: '"./pr9814-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pr9814-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-align_47:
  bin: '"./pragma-align.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-align.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-1_24:
  bin: '"pragma-diag-1.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(uninitialized))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-2_9:
  bin: '"pragma-diag-2.s"'
  cargs: ' -std=c89 -pedantic -Wno-long-long -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic -Wno-long-long"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(long long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-3_64:
  bin: '"pragma-diag-3.s"'
  cargs: ' -Wswitch-enum -Wsign-compare -fstrict-overflow -Wstrict-overflow -Werror -Wno-error=switch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-enum -Wsign-compare -fstrict-overflow -Wstrict-overflow -Werror -Wno-error=switch-enum"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(overflow))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(switch))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-4_48:
  bin: '"pragma-diag-4.s"'
  cargs: ' -Wsign-compare -Werror=sign-compare -Werror=switch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsign-compare -Werror=sign-compare -Werror=switch-enum"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(comparison))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-5_7:
  bin: '"pragma-diag-5.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-5.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(missing" "missing))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(24:missing" "wrong column))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(24:expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(32:unknown))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-diag-6_5:
  bin: '"pragma-diag-6.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-diag-6.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(is valid for C../ObjC.. but not for C))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(not an option that controls warnings))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(not an option that controls warnings))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-message_53:
  bin: '"pragma-message.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-message.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:missing terminating" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(17:missing terminating" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(18:missing terminating" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(expected a string" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed '#pragma message" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end of '#pragma message'" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(junk at end of '#pragma message'" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pack-3_28:
  bin: '"./pragma-pack-3.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pack-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pack-4_7:
  bin: '"pragma-pack-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pack-4.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(invalid constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pack-5_10:
  bin: '"pragma-pack-5.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pack-5.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-pop_options-1_7:
  bin: '"pragma-pop_options-1.o"'
  cargs: '  -ansi -pedantic-errors -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-pop_options-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-1_10:
  bin: '"pragma-re-1.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-2_7:
  bin: '"pragma-re-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-2.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:2:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(malformed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(junk))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-3_17:
  bin: '"pragma-re-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pragma-re-4_17:
  bin: '"pragma-re-4.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pragma-re-4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_precedence-1_153:
  bin: '"precedence-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/precedence-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-10_11:
  bin: '"predict-10.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-11_14:
  bin: '"predict-11.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-12_17:
  bin: '"predict-12.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-13_24:
  bin: '"predict-13.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-14_19:
  bin: '"predict-14.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-1_26:
  bin: '"predict-1.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-2_26:
  bin: '"predict-2.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-3_28:
  bin: '"predict-3.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-4_18:
  bin: '"predict-4.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-5_24:
  bin: '"predict-5.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-6_24:
  bin: '"predict-6.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-7_16:
  bin: '"predict-7.s"'
  cargs: ' -O2 -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-8_11:
  bin: '"predict-8.s"'
  cargs: -O2 -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_predict-9_23:
  bin: '"predict-9.s"'
  cargs: ' -O2 -fdisable-tree-evrp -fdump-tree-profile_estimate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/predict-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdisable-tree-evrp -fdump-tree-profile_estimate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_prefetch-loop-arrays-1_36:
  bin: '"prefetch-loop-arrays-1.s"'
  cargs: ' -O2 -fprefetch-loop-arrays -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/prefetch-loop-arrays-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fprefetch-loop-arrays -w"'
      - '"-O2 -fprefetch-loop-arrays -march=i686 -msse -w" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-dir-1_11:
  bin: '"profile-dir-1.s"'
  cargs: ' -O -fprofile-generate=. -fdump-ipa-cgraph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-dir-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate=. -fdump-ipa-cgraph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-dir-2_11:
  bin: '"profile-dir-2.s"'
  cargs: ' -O -fprofile-generate -fdump-ipa-cgraph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-dir-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate -fdump-ipa-cgraph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-dir-3_11:
  bin: '"profile-dir-3.s"'
  cargs: ' -O -fprofile-generate -fprofile-dir=. -fdump-ipa-cgraph -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-dir-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate -fprofile-dir=. -fdump-ipa-cgraph"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-generate-1_38:
  bin: '"profile-generate-1.s"'
  cargs: ' -O -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-generate-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-generate-2_35:
  bin: '"profile-generate-2.s"'
  cargs: ' -O -fprofile-generate -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-generate-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fprofile-generate"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_profile-generate-3_10:
  bin: '"profile-generate-3.exe"'
  cargs: ' -fprofile-generate=.'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/profile-generate-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fprofile-generate=."'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_proto-1_5:
  bin: '"proto-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/proto-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pthread-init-1_15:
  bin: '"pthread-init-1.s"'
  cargs: ' -Wextra -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pthread-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pthread-init-2_14:
  bin: '"pthread-init-2.s"'
  cargs: ' -Wextra -Wall -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pthread-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wextra -Wall -ansi"'
      - '"-Wextra -Wall -ansi -D_POSIX_C_SOURCE=199506L" { target { *-*-hpux* } }'
      - '"-Wextra -Wall -ansi -D_XOPEN_SOURCE=500" { target { powerpc-ibm-aix* } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pure-1_15:
  bin: '"pure-1.s"'
  cargs: ' -O1 -fdump-ipa-pure-const -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pure-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -fdump-ipa-pure-const"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_pure-2_58:
  bin: '"pure-2.s"'
  cargs: ' -O2 -Wsuggest-attribute=pure -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/pure-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wsuggest-attribute=pure"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(pure" "detect pure candidate" { target *-*-* } "10))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(pure" "detect pure candidate" { target *-*-* } "17))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(pure\[^\n\]* normally" "detect pure candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(pure\[^\n\]* normally" "detect pure candidate))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(pure" "detect pure candidate" { target *-*-* } "55))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-component-1_232:
  bin: '"qual-component-1.s"'
  cargs: ' -pedantic -Wdiscarded-array-qualifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-component-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -Wdiscarded-array-qualifiers"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:75:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of member))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:99:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:205:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|initialization discards))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: warning:[^
        ]*(pointers to arrays with different qualifiers|assignment discards))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-1_22:
  bin: '"qual-return-1.s"'
  cargs: ' -std=gnu99 -Wreturn-type -Wignored-qualifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wreturn-type -Wignored-qualifiers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "int decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "int ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "int defn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified" "void defn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "void ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified" "void defn))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "restrict decl))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "restrict ptr))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers" "restrict defn))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-2_13:
  bin: '"qual-return-2.s"'
  cargs: ' -pedantic -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified" "volatile defn))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-3_16:
  bin: '"qual-return-3.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types" "different qualifiers))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(qualified|volatile" "different qualifiers))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(not compatible" "different qualifiers))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-4_10:
  bin: '"qual-return-4.s"'
  cargs: ' -pedantic -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-5_32:
  bin: '"qual-return-5.s"'
  cargs: ' -std=c11 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(restrict))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_qual-return-6_12:
  bin: '"qual-return-6.s"'
  cargs: ' -std=c11 -Wignored-qualifiers -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/qual-return-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -Wignored-qualifiers"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(qualifiers ignored))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_range-test-1_168:
  bin: '"./range-test-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/range-test-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_readonly-loc_11:
  bin: '"readonly-loc.s"'
  cargs: ' -O -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/readonly-loc.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "*(arr)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "*(arr + 4u)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "arr2\[0\]))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(assignment of read-only location" "arr2\[1\]))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_real-const-1_5:
  bin: '"real-const-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/real-const-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-10_34:
  bin: '"redecl-10.s"'
  cargs: ' -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has both))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(array 'x' assumed to have one element))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(array 'z' assumed to have one element))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-11_9:
  bin: '"redecl-11.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'f'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-12_9:
  bin: '"redecl-12.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'a'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-13_9:
  bin: '"redecl-13.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types for 'a'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-14_22:
  bin: '"redecl-14.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid application of 'sizeof' to incomplete type 'IA {aka int\\\[\\\]}'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-15_14:
  bin: '"redecl-15.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(conflicting types for 'g'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-16_18:
  bin: '"redecl-16.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-17_10:
  bin: '"redecl-17.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-17.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-1_102:
  bin: '"redecl-1.s"'
  cargs: ' -std=c89 -pedantic -Wall -Wno-unused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic -Wall -Wno-unused"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:74:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible implicit declaration" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows non-static))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows non-static))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows non-static))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function" "implicit))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit declaration of function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: warning:[^
        ]*(implicit" "implicit))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-2_68:
  bin: '"redecl-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows declaration with no linkage))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows declaration with no linkage))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows extern declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(follows extern declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-3_1180:
  bin: '"redecl-3.s"'
  cargs: ' -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:72:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:222:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:232:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:361:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:442:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:452:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:586:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:591:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:599:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:641:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:806:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:830:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:832:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:840:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:848:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:853:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:861:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:874:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:890:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:932:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:966:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:969:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:974:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:977:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:979:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:987:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:990:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:998:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1000:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1008:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1016:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1021:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1029:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1042:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1058:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1100:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:1152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-4_29:
  bin: '"redecl-4.s"'
  cargs: ' -std=c89 -Wformat -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -Wformat -g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflict))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(8:format))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-5_19:
  bin: '"redecl-5.s"'
  cargs: ' -std=c89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(incompatible))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-6_24:
  bin: '"redecl-6.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-7_23:
  bin: '"redecl-7.s"'
  cargs: ' -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(completed incompatibly))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-8_23:
  bin: '"redecl-8.s"'
  cargs: ' -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-g"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(completed incompatibly))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_redecl-9_30:
  bin: '"redecl-9.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/redecl-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_reg-vol-struct-1_18:
  bin: '"reg-vol-struct-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/reg-vol-struct-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(object with volatile field" "explicit reg name))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register" "explicit address))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register" "implicit address))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_register-var-1_14:
  bin: '"register-var-1.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/register-var-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_register-var-2_14:
  bin: '"register-var-2.s"'
  cargs: ' -ansi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/register-var-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of register variable))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_register-var-3_9:
  bin: '"register-var-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/register-var-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(register name not specified))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_return-type-1_9:
  bin: '"return-type-1.s"'
  cargs: ' -O -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/return-type-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches end of non-void function" "warning for falling off end of non-void function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_return-type-2_47:
  bin: '"return-type-2.s"'
  cargs: ' -O2 -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/return-type-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wreturn-type"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_return-type-3_14:
  bin: '"return-type-3.s"'
  cargs: ' -O -foptimize-sibling-calls -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/return-type-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -foptimize-sibling-calls -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(control reaches end of non-void function" "warning for falling off end of non-void function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_section1_5:
  bin: '"section1.s"'
  cargs: -ansi -pedantic-errors -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/section1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-1_109:
  bin: '"sequence-pt-1.s"'
  cargs: ' -Wsequence-point -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-2_46:
  bin: '"sequence-pt-2.s"'
  cargs: ' -Wsequence-point -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-3_15:
  bin: '"sequence-pt-3.s"'
  cargs: ' -Wsequence-point -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sequence-pt-pr17880_54:
  bin: '"sequence-pt-pr17880.s"'
  cargs: ' -Wsequence-point -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sequence-pt-pr17880.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wsequence-point"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(undefined" "sequence point warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-1_37:
  bin: '"setjmp-1.s"'
  cargs: ' -O -Wclobbered -Wextra -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wclobbered -Wextra -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-2_48:
  bin: '"./setjmp-2.exe"'
  cargs: ' -O -fomit-frame-pointer'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fomit-frame-pointer"'
      - '"-O -fomit-frame-pointer -march=i386" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-3_39:
  bin: '"./setjmp-3.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-4_41:
  bin: '"./setjmp-4.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-5_23:
  bin: '"setjmp-5.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_setjmp-6_26:
  bin: '"setjmp-6.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/setjmp-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_short-compare-1_20:
  bin: '"./short-compare-1.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/short-compare-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
      - '"-O -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_short-compare-2_21:
  bin: '"./short-compare-2.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/short-compare-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
      - '"-O -mtune=i686" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-alloca_12:
  bin: '"shrink-wrap-alloca.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-alloca.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-loop_19:
  bin: '"shrink-wrap-loop.s"'
  cargs: -O2 -fdump-rtl-pro_and_epilogue -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-loop.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-pro_and_epilogue" '
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-pretend_36:
  bin: '"shrink-wrap-pretend.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-pretend.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_shrink-wrap-sibcall_26:
  bin: '"shrink-wrap-sibcall.s"'
  cargs: ' -O2 -g -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/shrink-wrap-sibcall.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -g"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-10_85:
  bin: '"./sibcall-10.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-11_7:
  bin: '"sibcall-11.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-1_49:
  bin: '"./sibcall-1.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-2_50:
  bin: '"./sibcall-2.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-3_78:
  bin: '"./sibcall-3.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-4_79:
  bin: '"./sibcall-4.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-6_46:
  bin: '"./sibcall-6.exe"'
  cargs: ' -O2 -foptimize-sibling-calls -fno-ipa-cp'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls -fno-ipa-cp"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-7_46:
  bin: '"./sibcall-7.exe"'
  cargs: ' -O2 -fno-optimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-optimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-8_30:
  bin: '"./sibcall-8.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sibcall-9_84:
  bin: '"./sibcall-9.exe"'
  cargs: ' -O2 -foptimize-sibling-calls'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sibcall-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -foptimize-sibling-calls"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_signbit-sa_12:
  bin: '"signbit-sa.s"'
  cargs: ' -std=c99 -O2 -Wstrict-aliasing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/signbit-sa.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -O2 -Wstrict-aliasing"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-1_62:
  bin: '"simd-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(can't convert a vector of type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary +))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary -))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary *))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary /))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-1b_36:
  bin: '"simd-1b.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-1b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-2_54:
  bin: '"simd-2.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when assigning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(aggregate value used where a float was expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-3_16:
  bin: '"simd-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-maltivec" { target { powerpc*-*-* && powerpc_altivec_ok } }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-4_15:
  bin: '"simd-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid operands to binary))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-5_8:
  bin: '"simd-5.s"'
  cargs: ' -O2 -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-6_8:
  bin: '"simd-6.s"'
  cargs: ' -O2 -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incompatible types when initializing" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-7_20:
  bin: '"simd-7.s"'
  cargs: ' -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_simd-8_20:
  bin: '"simd-8.s"'
  cargs: ' -w -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/simd-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_single-precision-constant_26:
  bin: '"./single-precision-constant.exe"'
  cargs: ' -fsingle-precision-constant'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/single-precision-constant.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsingle-precision-constant"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sizeof-1_4:
  bin: '"sizeof-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sizeof-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sizeof-2_8:
  bin: '"sizeof-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sizeof-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_slp-1_15:
  bin: '"slp-1.s"'
  cargs: ' -O2 -ftree-vectorize -fno-vect-cost-model -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/slp-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-vectorize -fno-vect-cost-model"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_smod-1_25:
  bin: '"./smod-1.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/smod-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
      - '"-std=c99 -mtune=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-10_118:
  bin: '"./sms-10.exe"'
  cargs: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-11_36:
  bin: '"./sms-11.exe"'
  cargs: ' -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-1_44:
  bin: '"./sms-1.exe"'
  cargs: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-2_35:
  bin: '"sms-2.s"'
  cargs: -O2 -fmodulo-sched -fdump-rtl-sms -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fdump-rtl-sms"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-3_43:
  bin: '"./sms-3.exe"'
  cargs: -O2 -fmodulo-sched -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves"'
      - '"-O2 -fmodulo-sched -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves -fno-sched-pressure" { target powerpc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-4_39:
  bin: '"./sms-4.exe"'
  cargs: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms"'
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms --param sms-min-sc=1" { target powerpc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-5_51:
  bin: '"./sms-5.exe"'
  cargs: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -funroll-loops -fdump-rtl-sms --param sms-min-sc=1 -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -funroll-loops -fdump-rtl-sms --param sms-min-sc=1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-6_46:
  bin: '"./sms-6.exe"'
  cargs: -O2 -fmodulo-sched -fdump-rtl-sms --param sms-min-sc=1 -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fdump-rtl-sms --param sms-min-sc=1"'
      - '"-O2 -fmodulo-sched -fdump-rtl-sms --param sms-min-sc=1 -fmodulo-sched-allow-regmoves -fno-sched-pressure" { target powerpc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-7_48:
  bin: '"./sms-7.exe"'
  cargs: -O3 -fmodulo-sched -fstrict-aliasing -fdump-rtl-sms -fmodulo-sched-allow-regmoves --param sms-min-sc=1 -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fmodulo-sched -fstrict-aliasing -fdump-rtl-sms -fmodulo-sched-allow-regmoves --param sms-min-sc=1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-8_40:
  bin: '"./sms-8.exe"'
  cargs: -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms --param sms-min-sc=1 -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves -fdump-rtl-sms --param sms-min-sc=1"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sms-9_60:
  bin: '"./sms-9.exe"'
  cargs: ' -O2 -fmodulo-sched -fmodulo-sched-allow-regmoves'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sms-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fmodulo-sched -fmodulo-sched-allow-regmoves"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spec-options_16:
  bin: '"./spec-options.exe"'
  cargs: ' -B./gcc.dg --specs=foo.specs -tfoo'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spec-options.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-B${srcdir}/gcc.dg --specs=foo.specs -tfoo"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-fields-2_40:
  bin: '"spellcheck-fields-2.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-fields-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(did you mean .color.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(did you mean .color.?))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-fields-3_66:
  bin: '"spellcheck-fields-3.s"'
  cargs: ' -fdiagnostics-show-caret -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-fields-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret -std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .foa.; did you mean .foo.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .this_does_not_match.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.union u. has no member named .colour.; did you mean .color.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .foa.; did you mean .foo.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.struct foo. has no member named .this_does_not_match.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.union u. has no member named .colour.; did you mean .color.?))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-fields_63:
  bin: '"spellcheck-fields.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-fields.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct foo' has no member named 'm_bar'; did you mean 'bar'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct foo' has no member named 'm_bar'; did you mean 'bar'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct s' has no member named 'ac'; did you mean 'ab'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct foo' has no member named 'foa'; did you mean 'foo'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has no member named" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('union u' has no member named 'colour'; did you mean 'color'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('struct <anonymous>' has no member named 'colour'; did you mean 'color'?))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-identifiers-2_33:
  bin: '"spellcheck-identifiers-2.s"'
  cargs: ' -Wimplicit-function-declaration -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-identifiers-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .ssacnf.; did you mean .sscafn.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .sacnf.; did you mean .scanf.?))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-identifiers-3_45:
  bin: '"spellcheck-identifiers-3.s"'
  cargs: ' -Wimplicit-function-declaration -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-identifiers-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration -fdiagnostics-show-caret"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .fn1badc.; did you mean .fn1abcd.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .fn2fehg.; did you mean .fn2efhg.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .fn3jilk.; did you mean .fn3ijkl.?))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-identifiers_136:
  bin: '"spellcheck-identifiers.s"'
  cargs: ' -Wimplicit-function-declaration -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-identifiers.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wimplicit-function-declaration -fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .parma. undeclared .first use in this function.; did you mean .param.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:76:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .__LINE_. undeclared .first use in this function.; did you mean .__LINE__.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(11: .MAX_ITEM. undeclared here .not in a function.; did you mean .MAX_ITEMS.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .FOO_FURST. undeclared .first use in this function.; did you mean .FOO_FIRST.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(10: .FOO_SECCOND. undeclared .first use in this function.; did you mean .FOO_SECOND.))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .gtk_widget_showall.; did you mean .gtk_widget_show_all.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .gtk_widget_showall_.; did you mean .gtk_widget_show_all.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .GtkWidgetShowAll.; did you mean .gtk_widget_show_all.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .MACRAME.; did you mean .MACRO.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(10: implicit declaration of function .IDENTIFIER_PTR.; did you mean .IDENTIFIER_POINTER.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: warning:[^
        ]*(3: implicit declaration of function .snprint.; did you mean .snprintf..))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-10_6:
  bin: '"spellcheck-options-10.s"'
  cargs: ' -fno-if-convert -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-if-convert"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option .-fno-if-convert.; did you mean .-fno-if-conversion.?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-11_7:
  bin: '"spellcheck-options-11.s"'
  cargs: ' -ftls-model=global-dinamic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ftls-model=global-dinamic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown TLS model 'global-dinamic'"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-12_7:
  bin: '"spellcheck-options-12.s"'
  cargs: ' -fno-stack-protector-explicit -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-stack-protector-explicit"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option .-fno-stack-protector-explicit.; did you mean .-fstack-protector-explicit.." "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-13_5:
  bin: '"spellcheck-options-13.s"'
  cargs: ' -fsanitize -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option .-fsanitize..$" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-14_8:
  bin: '"spellcheck-options-14.s"'
  cargs: ' -fsanitize=addres,nul,this-is-not-a-sanitizer-option -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=addres,nul,this-is-not-a-sanitizer-option"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .addres.; did you mean .address." "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .nul.; did you mean .null." "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .this-is-not-a-sanitizer-option." "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-15_7:
  bin: '"spellcheck-options-15.s"'
  cargs: ' -fsanitize=al -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize=al"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize= option: .al." "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-16_9:
  bin: '"spellcheck-options-16.s"'
  cargs: ' -fsanitize-recover=threed -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsanitize-recover=threed"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fsanitize-recover= option: .threed." "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-17_3:
  bin: '"spellcheck-options-17.s"'
  cargs: ' -fno-sanitize=threed -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-sanitize=threed"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized argument to -fno-sanitize= option: .threed.; did you mean .thread." "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-1_4:
  bin: '"spellcheck-options-1.s"'
  cargs: ' -Wcoercion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wcoercion"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-Wcoercion'; did you mean '-Wconversion'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-2_5:
  bin: '"spellcheck-options-2.s"'
  cargs: ' -Wthis-should-not-get-a-hint -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wthis-should-not-get-a-hint"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-Wthis-should-not-get-a-hint'"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-3_6:
  bin: '"spellcheck-options-3.s"'
  cargs: ' -sanitize=address -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-sanitize=address"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-sanitize=address'; did you mean '-fsanitize=address'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-4_6:
  bin: '"spellcheck-options-4.s"'
  cargs: ' -sanitize-recover=integer-divide-by-0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-sanitize-recover=integer-divide-by-0"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-sanitize-recover=integer-divide-by-0'; did you mean '-fsanitize-recover=integer-divide-by-zero'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-5_6:
  bin: '"spellcheck-options-5.s"'
  cargs: ' -no-sanitize=all -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-no-sanitize=all"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-no-sanitize=all'; did you mean '-fno-sanitize=all'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-6_6:
  bin: '"spellcheck-options-6.s"'
  cargs: ' -fwarn-no-abi-tag -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fwarn-no-abi-tag"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-fwarn-no-abi-tag'; did you mean '--warn-no-abi-tag'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-7_6:
  bin: '"spellcheck-options-7.s"'
  cargs: ' -tls-model=global-dynamic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-tls-model=global-dynamic"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-tls-model=global-dynamic'; did you mean '-ftls-model=global-dynamic'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-8_6:
  bin: '"spellcheck-options-8.s"'
  cargs: ' --Wno-narrowing -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--Wno-narrowing"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '--Wno-narrowing'; did you mean '-Wno-narrowing'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-options-9_6:
  bin: '"spellcheck-options-9.s"'
  cargs: ' -fmo-unroll-loops -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-options-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fmo-unroll-loops"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unrecognized command line option '-fmo-unroll-loops'; did you mean '-fno-unroll-loops'?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-params-2_4:
  bin: '"spellcheck-params-2.s"'
  cargs: ' --param does-not-resemble-anything=42 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-params-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--param does-not-resemble-anything=42"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid --param name .does-not-resemble-anything."  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-params_4:
  bin: '"spellcheck-params.s"'
  cargs: ' --param max-early-inliner-iteration=3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-params.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"--param max-early-inliner-iteration=3"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid --param name .max-early-inliner-iteration.; did you mean .max-early-inliner-iterations.?"  "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spellcheck-typenames_107:
  bin: '"spellcheck-typenames.s"'
  cargs: ' -fdiagnostics-show-caret -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spellcheck-typenames.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdiagnostics-show-caret"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14: unknown type name .singed.; did you mean .signed.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(14: unknown type name .car.; did you mean .char.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(25: before .e.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .some_thing_t.; did you mean .something_t.?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage size of .test_6. isn't known))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name 'int64'; did you mean 'int64_t'?))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown type name" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .foo_t.; use .struct. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .bar_t.; use .union. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(1: unknown type name .baz.; use .enum. keyword to refer to the type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(8: before .char.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_spill-1_15:
  bin: '"spill-1.s"'
  cargs: ' -O2 -fno-omit-frame-pointer -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/spill-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-omit-frame-pointer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-1_49:
  bin: '"./split-1.exe"'
  cargs: ' -fsplit-stack'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-2_55:
  bin: '"./split-2.exe"'
  cargs: ' -pthread -fsplit-stack'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pthread -fsplit-stack"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-3_64:
  bin: '"./split-3.exe"'
  cargs: ' -fsplit-stack'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-4_68:
  bin: '"./split-4.exe"'
  cargs: ' -fsplit-stack'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-5_171:
  bin: '"./split-5.exe"'
  cargs: ' -pthread -fsplit-stack'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pthread -fsplit-stack"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-6_53:
  bin: '"./split-6.exe"'
  cargs: ' -fsplit-stack'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_split-7_55:
  bin: '"./split-7.exe"'
  cargs: ' -fsplit-stack -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/split-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsplit-stack -O2"'
      - '"-fsplit-stack -O2 -mno-accumulate-outgoing-args" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-10_27:
  bin: '"./sso-10.exe"'
  cargs: ' -fsso-struct=native'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsso-struct=native"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-1_19:
  bin: '"sso-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(element is not constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-2_94:
  bin: '"sso-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be one of .big-endian. or .little-endian.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-3_94:
  bin: '"sso-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be one of .big-endian. or .little-endian.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(address of scalar with reverse storage order))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: warning:[^
        ]*(address of array with reverse scalar storage order))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-4_20:
  bin: '"sso-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(must be one of .big-endian. or .little-endian.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-5_24:
  bin: '"sso-5.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-5.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((incompatible types|no match)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-6_73:
  bin: '"./sso-6.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-6.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(missing .big-endian.little-endian.default.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(expected .big-endian.little-endian.default.))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-7_45:
  bin: '"./sso-7.exe"'
  cargs: ' -fsso-struct=big-endian'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsso-struct=big-endian"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-8_45:
  bin: '"./sso-8.exe"'
  cargs: ' -fsso-struct=little-endian'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fsso-struct=little-endian"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sso-9_27:
  bin: '"sso-9.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sso-9.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type|reverse storage order))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ssp-1_23:
  bin: '"./ssp-1.exe"'
  cargs: ' -fstack-protector'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ssp-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-protector"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ssp-2_29:
  bin: '"./ssp-2.exe"'
  cargs: ' -fstack-protector'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ssp-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-protector"'
      - '"-fstack-protector -Wl,-multiply_defined,suppress" { target *-*-darwin* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ssp-3_16:
  bin: '"ssp-3.o"'
  cargs: ' -fstack-protector-strong -O1 -frename-registers -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ssp-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-protector-strong -O1 -frename-registers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ssp-4_18:
  bin: '"ssp-4.o"'
  cargs: ' -fstack-protector-strong -O1 -frename-registers -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ssp-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-protector-strong -O1 -frename-registers"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-layout-1_24:
  bin: '"stack-layout-1.s"'
  cargs: -O2 -fno-strict-aliasing -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-layout-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-strict-aliasing -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-layout-2_23:
  bin: '"stack-layout-2.s"'
  cargs: -O2 -fdump-rtl-expand -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-layout-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-expand"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-layout-dynamic-1_15:
  bin: '"stack-layout-dynamic-1.s"'
  cargs: -O0 -fomit-frame-pointer -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-layout-dynamic-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -fomit-frame-pointer"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-usage-1_112:
  bin: '"stack-usage-1.s"'
  cargs: ' -fstack-usage -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-usage-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-usage"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stack-usage-2_35:
  bin: '"stack-usage-2.s"'
  cargs: ' -Wstack-usage=512 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stack-usage-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wstack-usage=512"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(stack usage is \[0-9\]* bytes))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(stack usage (might be)|(is) \[0-9\]* bytes))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(stack usage might be unbounded))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stackprotectexplicit1_23:
  bin: '"./stackprotectexplicit1.exe"'
  cargs: ' -fstack-protector-explicit'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stackprotectexplicit1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstack-protector-explicit"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stdint-width-1_175:
  bin: '"stdint-width-1.s"'
  cargs: ' -std=c11 -ffreestanding -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stdint-width-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11 -ffreestanding"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-1_11:
  bin: '"stmt-expr-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-2_11:
  bin: '"stmt-expr-2.s"'
  cargs: ' -std=gnu99 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C forbids braced-groups within expressions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-3_11:
  bin: '"stmt-expr-3.s"'
  cargs: ' -std=gnu99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(ISO C forbids braced-groups within expressions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-4_22:
  bin: '"stmt-expr-4.s"'
  cargs: ' -O2 -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-label-1_407:
  bin: '"stmt-expr-label-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-label-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:60:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:92:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:101:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:111:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:171:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:195:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:196:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:202:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:212:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:220:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:241:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:245:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:246:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:271:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:272:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:301:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:310:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:341:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:352:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-label-2_27:
  bin: '"stmt-expr-label-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-label-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into statement expression))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch jumps into statement expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_stmt-expr-label-3_11:
  bin: '"stmt-expr-label-3.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/stmt-expr-label-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into statement expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store-motion-fgcse-sm_33:
  bin: '"./store-motion-fgcse-sm.exe"'
  cargs: -O2 -ftree-pre -fno-tree-loop-im -fgcse-sm -fdump-rtl-store_motion -ffat-lto-objects
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store-motion-fgcse-sm.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-pre -fno-tree-loop-im -fgcse-sm -fdump-rtl-store_motion"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_1_35:
  bin: '"store_merging_1.s"'
  cargs: ' -O2 -fdump-tree-store-merging -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_2_80:
  bin: '"./store_merging_2.exe"'
  cargs: ' -O2 -fdump-tree-store-merging'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_3_32:
  bin: '"store_merging_3.s"'
  cargs: ' -O2 -fdump-tree-store-merging-details -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging-details"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_4_32:
  bin: '"store_merging_4.s"'
  cargs: ' -O2 -fdump-tree-store-merging -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_5_30:
  bin: '"store_merging_5.s"'
  cargs: ' -O2 -fdump-tree-store-merging -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_6_53:
  bin: '"./store_merging_6.exe"'
  cargs: ' -O2 -fdump-tree-store-merging'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_7_26:
  bin: '"store_merging_7.s"'
  cargs: ' -O2 -fdump-tree-store-merging -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_store_merging_8_38:
  bin: '"store_merging_8.s"'
  cargs: ' -O2 -fdump-tree-store-merging -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/store_merging_8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-store-merging"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strcmp-1_635:
  bin: '"./strcmp-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strcmp-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-1_15:
  bin: '"strict-overflow-1.s"'
  cargs: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-2_15:
  bin: '"strict-overflow-2.s"'
  cargs: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-3_15:
  bin: '"strict-overflow-3.s"'
  cargs: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-4_15:
  bin: '"strict-overflow-4.s"'
  cargs: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-5_18:
  bin: '"strict-overflow-5.s"'
  cargs: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strict-overflow-6_15:
  bin: '"strict-overflow-6.s"'
  cargs: ' -fstrict-overflow -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strict-overflow-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-overflow -O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_string-opt-1_11:
  bin: '"string-opt-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/string-opt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-10_82:
  bin: '"./strlenopt-10.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-11_75:
  bin: '"./strlenopt-11.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-12_90:
  bin: '"./strlenopt-12.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-12g_6:
  bin: '"./strlenopt-12g.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-12g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-13_73:
  bin: '"./strlenopt-13.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-14g_116:
  bin: '"./strlenopt-14g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-14g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-14gf_25:
  bin: '"./strlenopt-14gf.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-14gf.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-15_59:
  bin: '"./strlenopt-15.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-16g_33:
  bin: '"./strlenopt-16g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-16g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-17g_56:
  bin: '"./strlenopt-17g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-17g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-18g_81:
  bin: '"./strlenopt-18g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-18g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-19_80:
  bin: '"./strlenopt-19.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-1_44:
  bin: '"./strlenopt-1.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-1f_17:
  bin: '"./strlenopt-1f.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-1f.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-20_94:
  bin: '"./strlenopt-20.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-21_65:
  bin: '"./strlenopt-21.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-22_39:
  bin: '"./strlenopt-22.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-22g_13:
  bin: '"./strlenopt-22g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-22g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-23_15:
  bin: '"./strlenopt-23.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-24_16:
  bin: '"./strlenopt-24.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-25_17:
  bin: '"./strlenopt-25.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-25.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-26_25:
  bin: '"./strlenopt-26.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-26.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-27_22:
  bin: '"./strlenopt-27.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-27.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-28_59:
  bin: '"./strlenopt-28.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-28.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-29_27:
  bin: '"./strlenopt-29.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-29.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-2_48:
  bin: '"./strlenopt-2.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-2f_17:
  bin: '"./strlenopt-2f.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-2f.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-30_63:
  bin: '"strlenopt-30.s"'
  cargs: ' -O2 -fdump-tree-strlen -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-30.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-31_25:
  bin: '"./strlenopt-31.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-31.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-31g_9:
  bin: '"./strlenopt-31g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-31g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-3_64:
  bin: '"./strlenopt-3.exe"'
  cargs: ' -O2 -fdump-tree-strlen -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-4_74:
  bin: '"./strlenopt-4.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-4g_13:
  bin: '"./strlenopt-4g.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-4g.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-4gf_18:
  bin: '"./strlenopt-4gf.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-4gf.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-5_56:
  bin: '"./strlenopt-5.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-6_85:
  bin: '"./strlenopt-6.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-7_51:
  bin: '"./strlenopt-7.exe"'
  cargs: ' -O2 -fdump-tree-strlen -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-8_56:
  bin: '"./strlenopt-8.exe"'
  cargs: ' -O2 -fdump-tree-strlen'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-strlen"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strlenopt-9_107:
  bin: '"./strlenopt-9.exe"'
  cargs: ' -O2 -fno-code-hoisting -fdump-tree-strlen -fdump-tree-optimized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strlenopt-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-code-hoisting -fdump-tree-strlen -fdump-tree-optimized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strncmp-1_635:
  bin: '"./strncmp-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strncmp-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strncmp-2_105:
  bin: '"./strncmp-2.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strncmp-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_strncpy-fix-1_11:
  bin: '"strncpy-fix-1.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/strncpy-fix-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-alias-1_22:
  bin: '"struct-alias-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-alias-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-by-value-1_83:
  bin: '"./struct-by-value-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-by-value-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-by-value-2_15:
  bin: '"struct-by-value-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-by-value-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-empty-1_10:
  bin: '"struct-empty-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-empty-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-empty-2_10:
  bin: '"struct-empty-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-empty-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(union has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no named members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(union has no named members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-empty-3_10:
  bin: '"struct-empty-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-empty-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(union has no members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no named members))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(union has no named members))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-in-proto-1_8:
  bin: '"struct-in-proto-1.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-in-proto-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete type" "not here))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-incompl-1_7:
  bin: '"struct-incompl-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-incompl-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(incomplete))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-parse-1_11:
  bin: '"struct-parse-1.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-parse-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(field 'c' has incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-parse-2_13:
  bin: '"struct-parse-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-parse-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(has incomplete type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-ret-2_15:
  bin: '"struct-ret-2.s"'
  cargs: ' -O3 -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-ret-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -w"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-ret-3_112:
  bin: '"./struct-ret-3.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-ret-3.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-ret-libc_16:
  bin: '"./struct-ret-libc.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-ret-libc.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-1_19:
  bin: '"struct-semi-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-2_20:
  bin: '"struct-semi-2.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(struct has no members" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-3_20:
  bin: '"struct-semi-3.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(struct has no members" "empty))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(extra semicolon in struct or union specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no semicolon at end of struct or union))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_struct-semi-4_7:
  bin: '"struct-semi-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/struct-semi-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_superblock_22:
  bin: '"superblock.s"'
  cargs: -O2 -fno-asynchronous-unwind-tables -fsched2-use-superblocks -fdump-rtl-sched2 -fdump-rtl-bbro -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/superblock.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-asynchronous-unwind-tables -fsched2-use-superblocks -fdump-rtl-sched2 -fdump-rtl-bbro"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-10_22:
  bin: '"switch-10.s"'
  cargs: ' -O2 -fdump-tree-cfg -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cfg"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-1_17:
  bin: '"switch-1.s"'
  cargs: ' -fpic -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fpic -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-2_10:
  bin: '"switch-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(parse error|syntax error|expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-3_12:
  bin: '"switch-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not within a switch statement))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-4_24:
  bin: '"switch-4.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-5_75:
  bin: '"switch-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch quantity not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(switch quantity not an integer))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(pointers are not permitted as case values))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(multiple default labels in one switch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label not within a switch statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('default' label not within a switch statement))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(break statement not within loop or switch))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:56:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement not within a loop))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate \\(or overlapping\\) case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(duplicate \\(or overlapping\\) case value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(continue statement not within a loop))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(empty range specified))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(empty range specified))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-6_14:
  bin: '"switch-6.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(range expressions in switch statements are non-standard))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-7_14:
  bin: '"switch-7.s"'
  cargs: ' -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(range expressions in switch statements are non-standard))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-8_10:
  bin: '"switch-8.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-8.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-9_25:
  bin: '"switch-9.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(empty range))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-A_7:
  bin: '"switch-A.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-A.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected expression before))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-warn-1_47:
  bin: '"./switch-warn-1.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-warn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(case label value is less than minimum value for type|statement will never be executed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(case label value exceeds maximum value for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(lower value in case label range less than minimum value for type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(upper value in case label range exceeds maximum value for type))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-warn-2_26:
  bin: '"./switch-warn-2.exe"'
  cargs: ' -O0'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-warn-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(large integer implicitly truncated to unsigned type))[^
        ]*
        ?)+
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_switch-warn-3_14:
  bin: '"switch-warn-3.s"'
  cargs: ' -Wswitch-enum -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/switch-warn-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wswitch-enum"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-1_40:
  bin: '"sync-1.s"'
  cargs: ' -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-2_106:
  bin: '"./sync-2.exe"'
  cargs: ' -ansi'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-3_103:
  bin: '"./sync-3.exe"'
  cargs: ' -ansi'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-ansi"'
      - '"-march=i486" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
      - '"-mcpu=v9" { target sparc*-*-* }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-fetch-bool_54:
  bin: '"sync-fetch-bool.s"'
  cargs: ' -pedantic-errors -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-fetch-bool.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic-errors -std=c11"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_add_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_sub_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_and_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_xor_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_or_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Atomic _Bool \\*. is incompatible with argument 1 of .__sync_nand_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_add.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_sub.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_and.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_xor.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_or.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_fetch_and_nand.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_add_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_sub_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_and_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_xor_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_or_and_fetch.))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(operand type ._Bool \\*. is incompatible with argument 1 of .__sync_nand_and_fetch.))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_sync-fetch_115:
  bin: '"sync-fetch.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/sync-fetch.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.b. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.a. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:102:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(.m. undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_system-binary-constants-1_18:
  bin: '"system-binary-constants-1.s"'
  cargs: ' -std=iso9899:1999 -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/system-binary-constants-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=iso9899:1999 -pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(binary constants are a GCC extension))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_tail-merge-store_21:
  bin: '"tail-merge-store.s"'
  cargs: ' -O2 -ftree-tail-merge -fdump-tree-pre -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/tail-merge-store.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -ftree-tail-merge -fdump-tree-pre"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_titype-1_34:
  bin: '"./titype-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/titype-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_trampoline-1_57:
  bin: '"./trampoline-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/trampoline-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-1_85:
  bin: '"transparent-union-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:55:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f0' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f1' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f2' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f3' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f4' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:65:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f5' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f6' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f7' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:71:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f8' from incompatible pointer type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: warning:[^
        ]*(passing argument 1 of 'f9' from incompatible pointer type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-2_18:
  bin: '"transparent-union-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(conflicting types))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-3_22:
  bin: '"transparent-union-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "not anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "not anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "not anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(declaration does not declare anything" "no anything))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "cannot))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(union cannot be made transparent" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-4_9:
  bin: '"transparent-union-4.s"'
  cargs: ' -pedantic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-pedantic"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(ISO C prohibits argument conversion to union type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_transparent-union-5_37:
  bin: '"./transparent-union-5.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/transparent-union-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_trunc-1_15:
  bin: '"trunc-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/trunc-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-10_6:
  bin: '"two-types-10.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(redeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-1_5:
  bin: '"two-types-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-2_5:
  bin: '"two-types-2.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(two or more " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-3_6:
  bin: '"two-types-3.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-4_9:
  bin: '"two-types-4.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-5_6:
  bin: '"two-types-5.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-6_7:
  bin: '"two-types-6.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-7_8:
  bin: '"two-types-7.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected identifier " "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(no semicolon" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-8_10:
  bin: '"two-types-8.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_two-types-9_10:
  bin: '"two-types-9.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/two-types-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ';', identifier or " "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typedef-init_16:
  bin: '"typedef-init.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typedef-init.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized" "A))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(initialized" "B))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typedef-redecl2_13:
  bin: '"typedef-redecl2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typedef-redecl2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typedef-redecl_6:
  bin: '"typedef-redecl.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typedef-redecl.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typename-vla-1_17:
  bin: '"./typename-vla-1.exe"'
  cargs: ' -O2 -Wuninitialized'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typename-vla-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typeof-1_27:
  bin: '"typeof-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typeof-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typeof-2_59:
  bin: '"typeof-2.s"'
  cargs: ' -std=c11 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typeof-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c11"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_typespec-1_937:
  bin: '"typespec-1.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/typespec-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "void _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:52:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:57:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:58:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:59:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:61:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:63:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:67:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:69:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:70:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:73:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:77:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:78:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:79:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:81:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:82:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:83:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:84:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:85:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:87:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "float _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:88:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:89:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:90:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:91:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:93:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:94:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:95:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:96:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:97:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:98:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:103:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:104:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:105:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:107:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:108:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:113:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:114:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:115:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:116:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:117:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:118:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:119:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:120:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:121:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:122:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:123:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:124:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:125:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:126:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:127:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "_Bool _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:128:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:129:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:130:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:131:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:132:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:133:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:134:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:135:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:137:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "type _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:138:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:139:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:140:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:142:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:143:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:144:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:145:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:146:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:147:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:149:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:150:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:151:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:152:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:154:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:155:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:156:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:157:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "char unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:158:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:160:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:161:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:162:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:163:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:164:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:168:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:169:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:170:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:172:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:173:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:174:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:175:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:176:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:177:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:178:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:179:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:180:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:182:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:184:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:185:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:186:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:187:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:188:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:189:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:190:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:191:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:192:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:193:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:194:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:197:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:198:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:199:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:200:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:201:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:203:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:204:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:207:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:208:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:209:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:211:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:213:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:214:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:215:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:216:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:217:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:218:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:219:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:221:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:223:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:224:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:225:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:226:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:227:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:228:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:229:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:230:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:231:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:233:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:234:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:237:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:238:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:239:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:240:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:242:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:243:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:244:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:247:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:248:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:249:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:250:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:251:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:252:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:253:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:254:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:255:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:256:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:257:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long double _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:258:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:259:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:260:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:263:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:264:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:265:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:266:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:267:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:268:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:269:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:270:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:273:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:274:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:275:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:276:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:277:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:278:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:279:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:280:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:281:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:282:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:283:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:284:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:285:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:286:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:287:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "double long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:288:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:289:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:290:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:291:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:292:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:293:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:294:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:295:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:296:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:297:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:298:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:299:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:300:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:302:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:303:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:304:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:305:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:306:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:307:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:308:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:309:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:311:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:313:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:314:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:315:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:316:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:317:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:318:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:319:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:320:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:323:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:324:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:325:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:326:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:327:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:328:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:329:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:330:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:331:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:332:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:333:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:334:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:335:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:336:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:337:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned char _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:338:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:339:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:340:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:342:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:343:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:344:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:345:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:346:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:347:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:348:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:349:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:351:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:353:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:354:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:355:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:356:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:357:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:358:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:359:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:360:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:363:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:364:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:365:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:366:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:367:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:368:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:369:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:370:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:371:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:372:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:373:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:374:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:375:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:376:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:377:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:378:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:379:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:380:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:381:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:382:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:383:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:384:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:385:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:386:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:387:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:388:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:389:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:390:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:391:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:392:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:393:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:394:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:395:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:396:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:397:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:398:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:399:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:400:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:401:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:402:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:403:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:404:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:405:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:406:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:407:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "short unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:408:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:409:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:410:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:411:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:412:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:413:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:414:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:415:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:416:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:417:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:418:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:419:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:420:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:421:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:422:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:423:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:424:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:425:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:426:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:427:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int short unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:428:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:429:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:430:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:431:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:432:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:433:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:434:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:437:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:438:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:439:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:440:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:441:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:443:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:444:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:445:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:446:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:447:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:448:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:449:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:450:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:451:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:453:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:454:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:455:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:456:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:457:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:458:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:459:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:460:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:461:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:462:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:463:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:464:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:465:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:466:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:467:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:468:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:469:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:470:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:471:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:473:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:474:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:475:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:476:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:477:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:478:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:479:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:480:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:481:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:482:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:483:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:484:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:485:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:486:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:487:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:488:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:489:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:490:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:491:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:493:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:494:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:495:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:496:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:497:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:498:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:499:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:500:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:501:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:502:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:503:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:504:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:507:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:508:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:509:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:510:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:511:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:513:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:514:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:515:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:516:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:517:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:518:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:519:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:520:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:521:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:523:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:524:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:525:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:526:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:527:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:528:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:529:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:530:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:531:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:532:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:533:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:534:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:537:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:538:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:539:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:540:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:542:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:543:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:544:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:545:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:546:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:547:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:548:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:549:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:550:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:552:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:553:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:554:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:555:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:556:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:557:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:558:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:559:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:560:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:561:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:563:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:564:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:565:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:566:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:567:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:568:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:569:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:570:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:572:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:573:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:574:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:575:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:576:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:577:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:578:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:579:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:580:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:581:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:583:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:584:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:585:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:586:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:587:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:588:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:589:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:590:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:592:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:593:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:594:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:595:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:596:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:597:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:598:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:599:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:600:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:601:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:602:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:603:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:604:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:605:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:606:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:607:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:608:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:609:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:610:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:611:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:612:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:613:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:614:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:615:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:616:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:617:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:618:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:619:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:620:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:621:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:623:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:624:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:625:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:626:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:627:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:628:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:629:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:630:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:631:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:633:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:634:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:635:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:636:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:637:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:638:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:639:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:640:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:642:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:643:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:644:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:645:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:646:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:647:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:648:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:649:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:650:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:651:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:652:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:653:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:654:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:655:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:656:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:657:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned short int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:658:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:659:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:660:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:661:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:662:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:663:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:664:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:665:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:666:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:667:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int short _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:668:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:669:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:670:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:671:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:673:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:674:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:675:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:676:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:677:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:678:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:679:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:680:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:681:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:683:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:684:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:685:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:686:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:687:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:688:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:689:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:690:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:692:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:693:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:694:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:695:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:696:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:697:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:698:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:699:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:700:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:701:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:702:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:703:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:704:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:705:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:706:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:707:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:708:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:709:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:710:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:711:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:712:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:713:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:714:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:715:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:716:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:717:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:718:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:719:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:720:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:721:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:722:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:723:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:724:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:725:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:726:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:727:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:728:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:729:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:730:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:731:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:732:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:733:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:734:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:735:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:736:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:737:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int long unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:738:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:739:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:740:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:741:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:742:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:743:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:744:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:745:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:746:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:747:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int signed long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:748:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:749:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:750:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:751:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:752:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:753:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:754:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:755:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:756:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:757:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "int unsigned long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:758:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:759:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:760:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:761:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:762:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:763:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:764:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:765:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:766:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:767:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:768:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:769:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:770:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:771:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:772:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:773:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:774:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:775:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:776:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:777:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int long unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:778:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:779:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:780:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:781:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:782:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:783:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:784:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:785:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:786:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:787:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int signed long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:788:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:789:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:790:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:791:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:792:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:793:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:794:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:795:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:796:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:797:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long int unsigned long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:798:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:799:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:800:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:801:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:802:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:803:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:804:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:805:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:806:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:807:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int signed _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:808:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:809:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:810:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:811:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:812:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:813:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:814:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:815:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:816:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:817:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long int unsigned _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:818:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:819:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:820:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:821:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:822:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:823:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:824:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:825:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:826:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:827:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long signed int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:828:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:829:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:830:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:831:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:832:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:833:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:834:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:835:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:836:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:837:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long long unsigned int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:838:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:839:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:840:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:841:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:842:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:843:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:844:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:845:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:846:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:847:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:848:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:849:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:850:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:851:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:852:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:853:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:854:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:855:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:856:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:857:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long signed long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:858:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:859:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:860:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:861:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:862:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:863:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:864:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:865:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:866:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:867:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:868:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:869:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:870:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:871:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:872:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:873:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:874:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:875:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:876:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:877:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "long unsigned long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:878:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:879:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:880:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:881:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:882:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:883:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:884:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:885:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:886:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:887:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:888:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:889:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:890:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:891:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:892:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:893:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:894:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:895:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:896:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:897:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:898:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:899:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:900:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:901:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:902:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:903:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:904:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:905:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:906:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:907:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "signed long long int _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:908:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:909:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:910:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:911:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:912:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:913:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:914:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:915:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:916:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:917:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned int long long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:918:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:919:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:920:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:921:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:922:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:923:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:924:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:925:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:926:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:927:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long int long _Bool))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:928:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int void))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:929:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:930:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:931:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int int))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:932:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:933:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int float))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:934:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int double))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:935:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int signed))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:936:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int unsigned))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:937:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(" "unsigned long long int _Bool))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-10_10:
  bin: '"ucnid-10.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(pop, \\\\U000000f3.*push, \\\\U000000f3))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(unknown action '\\\\U000000e7'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-11_7:
  bin: '"./ucnid-11.exe"'
  cargs: ' -std=c99 -fdata-sections -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fdata-sections -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-12_7:
  bin: '"./ucnid-12.exe"'
  cargs: ' -std=c99 -ffunction-sections -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -ffunction-sections -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-13_15:
  bin: '"ucnid-13.s"'
  cargs: ' -std=gnu99 -Wpacked -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wpacked"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undefined named operand '\\\\U000000c3'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('\\\\U000000c0' attribute directive ignored))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*('\\\\U000000c1' is deprecated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*('\\\\U000000c2'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-14_23:
  bin: '"./ucnid-14.exe"'
  cargs: ' -std=c99 -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-1_25:
  bin: '"./ucnid-1.exe"'
  cargs: ' -std=c99 -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-2_28:
  bin: '"./ucnid-2.exe"'
  cargs: ' -std=c99 -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-3_28:
  bin: '"./ucnid-3.exe"'
  cargs: ' -std=c99 -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-4_28:
  bin: '"./ucnid-4.exe"'
  cargs: ' -std=c99 -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-5_15:
  bin: '"./ucnid-5.exe"'
  cargs: ' -std=c99 -fdollars-in-identifiers -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -fdollars-in-identifiers -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-6_28:
  bin: '"./ucnid-6.exe"'
  cargs: ' -std=c99 -save-temps -g'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -save-temps -g"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-7_9:
  bin: '"ucnid-7.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('\\\\U000000e9' undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*('\\\\U00001e00' undeclared))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_ucnid-8_16:
  bin: '"ucnid-8.s"'
  cargs: ' -std=gnu99 -Wvla -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/ucnid-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wvla"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(unknown machine mode '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero width for bit-field '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(storage class specified for parameter '\\\\U000000e9'))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(variable length array '\\\\U000000e9'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(braces around scalar initializer))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unaligned-1_49:
  bin: '"./unaligned-1.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unaligned-1.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-1-O0_30:
  bin: '"uninit-1-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-1-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-10-O0_109:
  bin: '"uninit-10-O0.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-10-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-10_109:
  bin: '"uninit-10.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-11-O0_42:
  bin: '"uninit-11-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-11-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "conditional))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-11_42:
  bin: '"uninit-11.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "conditional))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-12-O0_12:
  bin: '"uninit-12-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-12-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-12_12:
  bin: '"uninit-12.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-13-O0_10:
  bin: '"uninit-13-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-13-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-13_10:
  bin: '"uninit-13.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used" "unconditional))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-14-O0_20:
  bin: '"uninit-14-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-14-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-14_20:
  bin: '"uninit-14.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-15-O0_20:
  bin: '"uninit-15-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-15-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-15_26:
  bin: '"uninit-15.s"'
  cargs: ' -O1 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*('j' is used uninitialized" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-16_23:
  bin: '"uninit-16.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-17-O0_15:
  bin: '"uninit-17-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-17-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-17_15:
  bin: '"uninit-17.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used" "unconditional))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-18_24:
  bin: '"uninit-18.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-19_27:
  bin: '"uninit-19.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-1_30:
  bin: '"uninit-1.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-2-O0_52:
  bin: '"uninit-2-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-2-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-20_18:
  bin: '"uninit-20.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-21_33:
  bin: '"uninit-21.s"'
  cargs: ' -O2 -fno-short-enums -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fno-short-enums -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-22_69:
  bin: '"uninit-22.s"'
  cargs: ' -O3 -Wuninitialized --param vect-max-version-for-alias-checks=20 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wuninitialized --param vect-max-version-for-alias-checks=20"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-23_27:
  bin: '"uninit-23.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(may be used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-24_10:
  bin: '"uninit-24.s"'
  cargs: ' -O -Wmaybe-uninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wmaybe-uninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-2_52:
  bin: '"uninit-2.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-3-O0_33:
  bin: '"uninit-3-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-3-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-3_33:
  bin: '"uninit-3.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-4-O0_52:
  bin: '"uninit-4-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-4-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-4_52:
  bin: '"uninit-4.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-5-O0_39:
  bin: '"uninit-5-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-5-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-5_39:
  bin: '"uninit-5.s"'
  cargs: ' -O -Wuninitialized -fno-tree-dce -fno-tree-vrp -fno-tree-dominator-opts -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized -fno-tree-dce -fno-tree-vrp -fno-tree-dominator-opts"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-6-O0_47:
  bin: '"uninit-6-O0.s"'
  cargs: ' -Wuninitialized -ftrack-macro-expansion=2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-6-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -ftrack-macro-expansion=2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-6_47:
  bin: '"uninit-6.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-8-O0_32:
  bin: '"uninit-8-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-8-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-8_32:
  bin: '"uninit-8.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-9-O0_42:
  bin: '"uninit-9-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-9-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-9_42:
  bin: '"uninit-9.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-A-O0_117:
  bin: '"uninit-A-O0.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-A-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-A_117:
  bin: '"uninit-A.s"'
  cargs: ' -O2 -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-A.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B-2_16:
  bin: '"uninit-B-2.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B-O0-2_16:
  bin: '"uninit-B-O0-2.s"'
  cargs: ' -O0 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B-O0-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B-O0_15:
  bin: '"uninit-B-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('i' is used uninitialized in this function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-B_15:
  bin: '"uninit-B.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-B.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized" "uninit i warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-C-O0_21:
  bin: '"uninit-C-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-C-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-C_21:
  bin: '"uninit-C.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-C.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-H-O0_33:
  bin: '"uninit-H-O0.s"'
  cargs: ' -Wall -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-H-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-H_33:
  bin: '"uninit-H.s"'
  cargs: ' -O -Wall -Werror -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-H.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -Werror"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-I-O0_8:
  bin: '"uninit-I-O0.s"'
  cargs: ' -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-I-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*('setbuf\.mode' is used uninitialized in this function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-I_8:
  bin: '"uninit-I.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-I.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*('setbuf\.mode' is used" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr19430-2_18:
  bin: '"uninit-pr19430-2.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr19430-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(i. may be used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr19430-O0_42:
  bin: '"uninit-pr19430-O0.s"'
  cargs: ' -O0 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr19430-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*('j' may be used uninitialized in this function" "uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*('rc' is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*('i' is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is used uninitialized in this function))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr19430_43:
  bin: '"uninit-pr19430.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr19430.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*('j' may be used uninitialized in this function" "uninitialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*('rc' is used uninitialized in this function))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*('i' is used uninitialized in this function" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*('x' is used uninitialized in this function" "uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr20644-O0_24:
  bin: '"uninit-pr20644-O0.s"'
  cargs: ' -O0 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr20644-O0.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O0 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr20644_24:
  bin: '"uninit-pr20644.s"'
  cargs: ' -O -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr20644.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr40943_10:
  bin: '"uninit-pr40943.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr40943.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(is used uninitialized))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr61409_25:
  bin: '"uninit-pr61409.s"'
  cargs: ' -O2 -Wuninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr61409.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wuninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr65686_18:
  bin: '"uninit-pr65686.s"'
  cargs: ' -O2 -Wall -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr65686.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr78295_13:
  bin: '"uninit-pr78295.s"'
  cargs: ' -O2 -Wall -Wno-psabi -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr78295.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Wall -Wno-psabi"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr78548_24:
  bin: '"uninit-pr78548.s"'
  cargs: ' -Wall -w -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr78548.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -w -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pr81782_14:
  bin: '"uninit-pr81782.s"'
  cargs: ' -Wmaybe-uninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pr81782.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wmaybe-uninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-2_a_28:
  bin: '"uninit-pred-2_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-2_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-2_b_29:
  bin: '"uninit-pred-2_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-2_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real uninitialized var warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-2_c_48:
  bin: '"uninit-pred-2_c.s"'
  cargs: ' -Wuninitialized -O2 -fno-tree-tail-merge -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-2_c.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -fno-tree-tail-merge"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real uninitialized var warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_a_28:
  bin: '"uninit-pred-3_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_b_33:
  bin: '"uninit-pred-3_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_c_28:
  bin: '"uninit-pred-3_c.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_c.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_d_28:
  bin: '"uninit-pred-3_d.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_d.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-3_e_28:
  bin: '"uninit-pred-3_e.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-3_e.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-4_a_43:
  bin: '"uninit-pred-4_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-4_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-4_b_40:
  bin: '"uninit-pred-4_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-4_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-5_a_42:
  bin: '"uninit-pred-5_a.s"'
  cargs: ' -Wuninitialized -Wno-attributes -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-5_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -Wno-attributes -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-5_b_42:
  bin: '"uninit-pred-5_b.s"'
  cargs: ' -Wuninitialized -Wno-attributes -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-5_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -Wno-attributes -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:38:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_a_40:
  bin: '"uninit-pred-6_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_b_46:
  bin: '"uninit-pred-6_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_c_46:
  bin: '"uninit-pred-6_c.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_c.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_d_24:
  bin: '"uninit-pred-6_d.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_d.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-6_e_43:
  bin: '"uninit-pred-6_e.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-6_e.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_a_54:
  bin: '"uninit-pred-7_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_b_23:
  bin: '"uninit-pred-7_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_c_33:
  bin: '"uninit-pred-7_c.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_c.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-7_d_54:
  bin: '"uninit-pred-7_d.s"'
  cargs: ' -Wuninitialized -O2 -mbranch-cost=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-7_d.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -mbranch-cost=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_a_47:
  bin: '"uninit-pred-8_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_b_45:
  bin: '"uninit-pred-8_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_c_39:
  bin: '"uninit-pred-8_c.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_c.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-8_d_45:
  bin: '"uninit-pred-8_d.s"'
  cargs: ' -Wuninitialized -O2 -mbranch-cost=0 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-8_d.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2 -mbranch-cost=0"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-9_a_23:
  bin: '"uninit-pred-9_a.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-9_a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-pred-9_b_44:
  bin: '"uninit-pred-9_b.s"'
  cargs: ' -Wuninitialized -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-pred-9_b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wuninitialized -O2"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "real warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-suppress_17:
  bin: '"uninit-suppress.s"'
  cargs: ' -fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Wno-maybe-uninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-suppress.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Wno-maybe-uninitialized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_uninit-suppress_2_17:
  bin: '"uninit-suppress_2.s"'
  cargs: ' -fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Werror=uninitialized -Wno-error=maybe-uninitialized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/uninit-suppress_2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-tree-ccp -fno-tree-vrp -O2 -Wuninitialized -Werror=uninitialized -Wno-error=maybe-uninitialized"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(uninitialized" "should not be promoted to error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-1_22:
  bin: '"union-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-2_28:
  bin: '"./union-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-3_10:
  bin: '"union-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-3.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-4_22:
  bin: '"union-4.s"'
  cargs: -O -fdump-rtl-cse1 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-rtl-cse1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-5_46:
  bin: '"./union-5.exe"'
  cargs: ' -O -fgcse -fno-split-wide-types'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fgcse -fno-split-wide-types"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-1_14:
  bin: '"union-cast-1.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-2_15:
  bin: '"union-cast-2.s"'
  cargs: ' -std=c89 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c89 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*((forbids subscripting)|(forbids casts to union type)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-3_14:
  bin: '"union-cast-3.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(forbids casts to union type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_union-cast-4_8:
  bin: '"union-cast-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/union-cast-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array of voids))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(type not present))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unordered-1_18:
  bin: '"unordered-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unordered-1.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-floating-point))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unordered-2_51:
  bin: '"unordered-2.exe"'
  cargs: '  -ansi -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unordered-2.c'
  herit: *GRPSERIAL
  info: {}
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unordered-3_80:
  bin: '"unordered-3.exe"'
  cargs: ' -fno-finite-math-only'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unordered-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fno-finite-math-only"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-1_27:
  bin: '"./unroll-1.exe"'
  cargs: ' -O2 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops"'
      - '"-mtune=k6 -O2 -funroll-loops" { target { { i?86-*-* x86_64-*-* } && ia32 } }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-2_34:
  bin: '"unroll-2.s"'
  cargs: ' -O2 -fdump-tree-cunrolli-details=stderr -fno-peel-loops -fno-tree-vrp  -fdisable-tree-cunroll -fenable-tree-cunrolli -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details=stderr -fno-peel-loops -fno-tree-vrp  -fdisable-tree-cunroll -fenable-tree-cunrolli"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-3_31:
  bin: '"unroll-3.s"'
  cargs: ' -O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunrolli=foo -fenable-tree-cunrolli=foo -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunrolli=foo -fenable-tree-cunrolli=foo"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-4_31:
  bin: '"unroll-4.s"'
  cargs: ' -O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo -fdisable-tree-cunrolli=foo2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo -fdisable-tree-cunrolli=foo2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-5_31:
  bin: '"unroll-5.s"'
  cargs: ' -O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo2 -fdisable-tree-cunrolli=foo -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-cunrolli-details -fno-peel-loops -fno-tree-vrp -fdisable-tree-cunroll -fenable-tree-cunrolli=foo2 -fdisable-tree-cunrolli=foo"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-6_34:
  bin: '"unroll-6.s"'
  cargs: -O3 -fdump-rtl-loop2_unroll -funroll-loops -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -fdump-rtl-loop2_unroll -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-7_18:
  bin: '"unroll-7.s"'
  cargs: -O2 -fdump-rtl-loop2_unroll -funroll-loops -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-loop2_unroll -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unroll-8_15:
  bin: '"unroll-8.s"'
  cargs: -O2 -fdump-rtl-loop2_unroll -funroll-loops -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unroll-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-rtl-loop2_unroll -funroll-loops"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unsigned-long-compare_24:
  bin: '"./unsigned-long-compare.exe"'
  cargs: ' '
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unsigned-long-compare.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-1_11:
  bin: '"unused-1.s"'
  cargs: ' -O -Wall -W -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -Wall -W"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter" "unused parameter warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-2_18:
  bin: '"unused-2.s"'
  cargs: ' -O2 -finline-functions -Wunused -Wreturn-type -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -finline-functions -Wunused -Wreturn-type"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used" "unused label warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-3_15:
  bin: '"unused-3.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(unused variable" "unused variable warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-4_6:
  bin: '"unused-4.s"'
  cargs: ' -Wunused -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused -O3"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-5_10:
  bin: '"unused-5.s"'
  cargs: -Wunused -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-6-WallWextra_11:
  bin: '"unused-6-WallWextra.s"'
  cargs: ' -O3 -Wextra -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-6-WallWextra.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wextra -Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter" "unused parameter warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-6-no_11:
  bin: '"unused-6-no.s"'
  cargs: ' -O3 -Wextra -Wno-unused-parameter -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-6-no.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wextra -Wno-unused-parameter -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-6_11:
  bin: '"unused-6.s"'
  cargs: ' -O3 -Wunused-parameter -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -Wunused-parameter"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(unused parameter" "unused parameter warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-7_5:
  bin: '"unused-7.s"'
  cargs: ' -Wunused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-8a_4:
  bin: '"unused-8a.s"'
  cargs: ' -Wall -Wextra -Wno-unused -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-8a.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wextra -Wno-unused"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-8b_4:
  bin: '"unused-8b.s"'
  cargs: ' -Wall -Wno-unused -Wextra -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-8b.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall -Wno-unused -Wextra"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-variable-1_7:
  bin: '"unused-variable-1.s"'
  cargs: ' -Wunused-variable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-variable-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-variable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-variable-2_7:
  bin: '"unused-variable-2.s"'
  cargs: ' -Wunused-variable -Wno-unused-const-variable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-variable-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-variable -Wno-unused-const-variable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unused-variable-3_9:
  bin: '"unused-variable-3.s"'
  cargs: ' -Wunused-variable -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unused-variable-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wunused-variable"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(defined but not used))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_unwind-1_7:
  bin: '"unwind-1.o"'
  cargs: ' -fleading-underscore -funwind-tables -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/unwind-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fleading-underscore -funwind-tables"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-array-short-wchar_42:
  bin: '"utf-array-short-wchar.s"'
  cargs: ' -std=gnu99 -fshort-wchar -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-array-short-wchar.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -fshort-wchar"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long" "" { target "m32c-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long" "" { target "m32c-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long" "" { target "m32c-*-*))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-array_42:
  bin: '"utf-array.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-array.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:14:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from wide string))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from incompatible" "))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long" "" { target "m32c-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long" "" { target "m32c-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long" "" { target "m32c-*-*))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-badconcat2_15:
  bin: '"utf-badconcat2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-badconcat2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-badconcat_22:
  bin: '"utf-badconcat.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-badconcat.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-standard concatenation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-cvt_59:
  bin: '"utf-cvt.s"'
  cargs: ' -std=gnu99 -Wall -Wconversion -Wsign-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-cvt.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Wconversion -Wsign-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:46:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:47:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:49:)[^
        ]*([0-9]+: warning:[^
        ]*(alter its value))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:50:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:53:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:54:)[^
        ]*([0-9]+: warning:[^
        ]*(change the sign" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-dflt2_12:
  bin: '"utf-dflt2.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-dflt2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ',' or ';'" "expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-dflt_25:
  bin: '"utf-dflt.s"'
  cargs: ' -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-dflt.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu89"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ',' or ';'" "expected))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(undeclared" "undeclared))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(expected ',' or ';'" "expected))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-inc-init_45:
  bin: '"./utf-inc-init.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-inc-init.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf-type_18:
  bin: '"./utf-type.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf-type.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-1_67:
  bin: '"./utf16-1.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-2_32:
  bin: '"./utf16-2.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-3_49:
  bin: '"./utf16-3.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf16-4_21:
  bin: '"utf16-4.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf16-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty character))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(implicitly truncated))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(implicitly truncated" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-1_44:
  bin: '"./utf32-1.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-2_31:
  bin: '"./utf32-2.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-3_48:
  bin: '"./utf32-3.exe"'
  cargs: ' -std=gnu99 -Wall -Werror'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99 -Wall -Werror"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf32-4_20:
  bin: '"utf32-4.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf32-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(empty character))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(constant too long" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_utf8-2_27:
  bin: '"utf8-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/utf8-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(from non-wide))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(chars is too long))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-1_13:
  bin: '"va-arg-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-1.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to|so you should|abort" "char))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to|abort" "short))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(is promoted to|abort" "float))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-2_12:
  bin: '"va-arg-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-2.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(no longer implements" "#error 1))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(Revise your code" "#error 2))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-3_13:
  bin: '"va-arg-3.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-4_3:
  bin: '"va-arg-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-4.c'
  herit: *GRPSERIAL
  info:
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(requires a named argument))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-5_4:
  bin: '"va-arg-5.s"'
  cargs: ' -fallow-parameterless-variadic-functions -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fallow-parameterless-variadic-functions"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-1_52:
  bin: '"va-arg-pack-1.s"'
  cargs: ' -O2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fgnu89-inline"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:40:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(invalid use of))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-2_17:
  bin: '"va-arg-pack-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-len-1_122:
  bin: '"./va-arg-pack-len-1.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-len-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_va-arg-pack-len-2_42:
  bin: '"va-arg-pack-len-2.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/va-arg-pack-len-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(needs 3 arguments, only 2 were given))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(called with more than 3))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_var-expand1_28:
  bin: '"var-expand1.s"'
  cargs: -O2 -funroll-loops --fast-math -fvariable-expansion-in-unroller -fdump-rtl-loop2_unroll -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/var-expand1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops --fast-math -fvariable-expansion-in-unroller -fdump-rtl-loop2_unroll"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_var-expand2_29:
  bin: '"./var-expand2.exe"'
  cargs: ' -O2 -funroll-loops -ffast-math -fvariable-expansion-in-unroller'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/var-expand2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -funroll-loops -ffast-math -fvariable-expansion-in-unroller"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_varpool-1_24:
  bin: '"varpool-1.s"'
  cargs: -O2 -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/varpool-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vec-andxor1_17:
  bin: '"./vec-andxor1.exe"'
  cargs: ' -O'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vec-andxor1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vector-1_8:
  bin: '"vector-1.s"'
  cargs: ' -std=gnu90 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vector-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu90"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vector-shift-2_12:
  bin: '"vector-shift-2.s"'
  cargs: ' -O -fdump-tree-ccp1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vector-shift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O -fdump-tree-ccp1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vector-shift_12:
  bin: '"vector-shift.s"'
  cargs: ' -fdump-tree-original -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vector-shift.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-original"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_verbose-asm-2_15:
  bin: '"verbose-asm-2.s"'
  cargs: -fverbose-asm -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/verbose-asm-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fverbose-asm"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_verbose-asm_27:
  bin: '"verbose-asm.s"'
  cargs: ' -fverbose-asm -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/verbose-asm.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fverbose-asm"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-11_26:
  bin: '"visibility-11.s"'
  cargs: -Os -fpic -mstringop-strategy=libcall -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Os -fpic -mstringop-strategy=libcall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-14_10:
  bin: '"visibility-14.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-14.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-15_12:
  bin: '"visibility-15.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-15.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-16_10:
  bin: '"visibility-16.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-16.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-17_10:
  bin: '"visibility-17.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-17.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-18_8:
  bin: '"visibility-18.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-18.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-19_9:
  bin: '"visibility-19.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-19.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-1_9:
  bin: '"visibility-1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-20_18:
  bin: '"visibility-20.s"'
  cargs: ' -O2 -fvisibility=hidden -fpic -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fvisibility=hidden -fpic" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-22_17:
  bin: '"./visibility-22.exe"'
  cargs: ' -O2 -fPIC'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC" { target fpic }'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-23_15:
  bin: '"visibility-23.s"'
  cargs: ' -O2 -fPIC -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fPIC" { target fpic }'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-2_10:
  bin: '"visibility-2.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-2.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-3_8:
  bin: '"visibility-3.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-3.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-4_10:
  bin: '"visibility-4.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-4.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-5_12:
  bin: '"visibility-5.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-5.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-6_11:
  bin: '"visibility-6.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-6.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-7_12:
  bin: '"visibility-7.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-7.c'
  herit: *GRPSERIAL
  info:
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(different visibility" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-8_16:
  bin: '"visibility-8.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-9_9:
  bin: '"visibility-9.s"'
  cargs: ' -fvisibility=hidden -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fvisibility=hidden"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-a_10:
  bin: '"visibility-a.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-a.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-c_10:
  bin: '"visibility-c.o"'
  cargs: '  -ansi -pedantic-errors -c'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-c.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_visibility-d_205:
  bin: '"visibility-d.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/visibility-d.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-10_7:
  bin: '"vla-10.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-11_12:
  bin: '"vla-11.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-11.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type" "variably modified))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*('struct s' declared inside parameter list" "struct decl))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-12_50:
  bin: '"./vla-12.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-12.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-13_99:
  bin: '"./vla-13.exe"'
  cargs: ' -std=c99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-13.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-14_33:
  bin: '"./vla-14.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-14.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-15_27:
  bin: '"./vla-15.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-15.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-16_70:
  bin: '"./vla-16.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-16.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-17_9:
  bin: '"vla-17.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-17.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(variably modified 'b' at file scope))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-18_9:
  bin: '"vla-18.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-18.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified 'b' at file scope))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-19_32:
  bin: '"vla-19.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-19.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(non-nested function with variably modified type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-20_12:
  bin: '"vla-20.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-20.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(zero-size array" "correct zero size))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-21_7:
  bin: '"vla-21.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-21.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-22_23:
  bin: '"vla-22.s"'
  cargs: ' -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-22.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-23_17:
  bin: '"vla-23.s"'
  cargs: ' -O --param max-cse-insns=1 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-23.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O --param max-cse-insns=1"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-24_32:
  bin: '"./vla-24.exe"'
  cargs: ' -std=gnu99'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-24.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-2_30:
  bin: '"vla-2.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-3_12:
  bin: '"vla-3.s"'
  cargs: ' -std=gnu99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=gnu99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-4_49:
  bin: '"./vla-4.exe"'
  cargs: ' -std=c99 -pedantic-errors'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-5_24:
  bin: '"vla-5.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(on array function parameter))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(on array function parameter))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-6_29:
  bin: '"vla-6.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:3:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(not allowed in other than function prototype scope))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(a member of a structure or union cannot have a variably modified type))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variably modified type must have no linkage))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(not in a declaration))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-7_3:
  bin: '"vla-7.s"'
  cargs: ' -std=c99 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-8_34:
  bin: '"vla-8.s"'
  cargs: ' -std=c99 -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-8.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(jump into scope of identifier with variably modified type))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-9_10:
  bin: '"vla-9.s"'
  cargs: ' -std=c99 -pedantic-errors -W -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -pedantic-errors -W -Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-1_15:
  bin: '"vla-init-1.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable-sized object may not be initialized" "VLA init))[^
        ]*
        ?)+
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(excess elements in array initializer" "excess))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-2_10:
  bin: '"vla-init-2.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable-sized object may not be initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array size missing in 'a'" "extra error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-3_9:
  bin: '"vla-init-3.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(variable-sized object may not be initialized))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(array size missing in 'a'" "extra error))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-4_7:
  bin: '"vla-init-4.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vla-init-5_7:
  bin: '"vla-init-5.s"'
  cargs: '  -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vla-init-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '""'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(compound literal has variable size))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_void-cast-1_11:
  bin: '"void-cast-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/void-cast-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_void-cast-2_8:
  bin: '"void-cast-2.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/void-cast-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:7:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(left-hand operand of comma expression has no effect))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile-bitfields-1_23:
  bin: '"./volatile-bitfields-1.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile-bitfields-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile-bitfields-2_15:
  bin: '"./volatile-bitfields-2.exe"'
  cargs: ' -fstrict-volatile-bitfields'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile-bitfields-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fstrict-volatile-bitfields"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile1_9:
  bin: '"volatile1.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile1.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile2_21:
  bin: '"volatile2.s"'
  cargs: ' -O2 -fdump-tree-optimized -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-optimized"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_volatile3_12:
  bin: '"volatile3.s"'
  cargs: ' -fdump-tree-ssa -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/volatile3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fdump-tree-ssa"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vrp-min-max-1_27:
  bin: '"vrp-min-max-1.s"'
  cargs: ' -O2 -fdump-tree-vrp1 -fdump-tree-mergephi2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vrp-min-max-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-vrp1 -fdump-tree-mergephi2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vrp-min-max-2_18:
  bin: '"vrp-min-max-2.s"'
  cargs: ' -O2 -fdump-tree-vrp2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vrp-min-max-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-vrp2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-1_132:
  bin: '"./vshift-1.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-2_7:
  bin: '"./vshift-2.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-3_136:
  bin: '"./vshift-3.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-4_6:
  bin: '"./vshift-4.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-4.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-5_81:
  bin: '"./vshift-5.exe"'
  cargs: ' -O3'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-6_42:
  bin: '"vshift-6.s"'
  cargs: ' -Wshift-count-negative -Wshift-count-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wshift-count-negative -Wshift-count-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:34:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_vshift-7_47:
  bin: '"vshift-7.s"'
  cargs: ' -O1 -Wshift-count-negative -Wshift-count-overflow -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/vshift-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O1 -Wshift-count-negative -Wshift-count-overflow"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count is negative))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:44:)[^
        ]*([0-9]+: warning:[^
        ]*(shift count >= width))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-1_16:
  bin: '"warn-1.s"'
  cargs: ' -O3 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/warn-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-addr-cmp_79:
  bin: '"warn-addr-cmp.s"'
  cargs: ' -Waddress -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/warn-addr-cmp.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Waddress"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(the address of 'func'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(the address of 'func'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(the address of 'var'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(the address of 'var'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:39:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:41:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:43:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:62:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:64:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:66:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'false'))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:68:)[^
        ]*([0-9]+: warning:[^
        ]*(the comparison will always evaluate as 'true'))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_warn-nsstring_7:
  bin: '"warn-nsstring.s"'
  cargs: ' -Wformat -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/warn-nsstring.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wformat"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(is only allowed in Objective-C dialects))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(is only allowed in Objective-C dialects))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wcaselabel-1_15:
  bin: '"wcaselabel-1.s"'
  cargs: ' -w -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wcaselabel-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-w"'
    regex-err:
      - |-
        (^|
        )([^
        ]+(:10:)[^
        ]*([0-9]+: (fatal )?error:[^
        ]*(case label does not reduce to an integer constant))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wchar_t-1_17:
  bin: '"wchar_t-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wchar_t-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wchar_t-2_6:
  bin: '"wchar_t-2.s"'
  cargs: ' -fshort-wchar -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wchar_t-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-fshort-wchar"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_webizer_38:
  bin: '"./webizer.exe"'
  cargs: ' -O3 -funroll-loops'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/webizer.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -funroll-loops"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-10_17:
  bin: '"winline-10.s"'
  cargs: ' -O2 -Winline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-10.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Winline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:6:)[^
        ]*([0-9]+: warning:[^
        ]*(inlining .* mismatched arg" "))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:17:)[^
        ]*([0-9]+: warning:[^
        ]*(follows non-prototype definition))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-1_13:
  bin: '"winline-1.s"'
  cargs: ' -Winline -O2 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-2_8:
  bin: '"winline-2.s"'
  cargs: ' -Winline -O2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:4:)[^
        ]*([0-9]+: warning:[^
        ]*(body not available" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-3_21:
  bin: '"winline-3.s"'
  cargs: ' -Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 --param max-inline-insns-single=1 --param inline-min-speedup=100 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(max-inline-insns-single" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-5_21:
  bin: '"winline-5.s"'
  cargs: ' -Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-5.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 --param inline-unit-growth=0 --param large-unit-insns=0 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(inline-unit-growth))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-6_21:
  bin: '"winline-6.s"'
  cargs: ' -Winline -O2 --param large-function-growth=0 --param large-function-insns=1 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-6.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 --param large-function-growth=0 --param large-function-insns=1 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:5:)[^
        ]*([0-9]+: warning:[^
        ]*(large-function-growth))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-7_15:
  bin: '"winline-7.s"'
  cargs: ' -Winline -O2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-7.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Winline -O2 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*((function not inlinable|alloca)))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_winline-9_26:
  bin: '"winline-9.s"'
  cargs: ' -O2 -Winline --param large-stack-frame=10 --param large-stack-frame-growth=2 -fgnu89-inline -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/winline-9.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -Winline --param large-stack-frame=10 --param large-stack-frame-growth=2 -fgnu89-inline"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(large-stack-frame" "))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wint_t-1_17:
  bin: '"wint_t-1.s"'
  cargs: ' -Wall -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wint_t-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wall"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wmul-1_18:
  bin: '"wmul-1.s"'
  cargs: ' -O2 -fdump-tree-widening_mul -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wmul-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2 -fdump-tree-widening_mul"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-aggr-init-1_48:
  bin: '"wtr-aggr-init-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-aggr-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects automatic" "automatic aggregate initialization))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects automatic" "__extension__ reenables warnings))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-conversion-1_66:
  bin: '"wtr-conversion-1.s"'
  cargs: ' -Wtraditional-conversion -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-conversion-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional-conversion"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(as integer rather than complex" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than complex" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:30:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "small double" { target { "avr-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(as 'float' rather than 'double'" "small long double" { target { "avr-*-*))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:33:)[^
        ]*([0-9]+: warning:[^
        ]*(as floating rather than complex" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:35:)[^
        ]*([0-9]+: warning:[^
        ]*(as complex rather than integer" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:36:)[^
        ]*([0-9]+: warning:[^
        ]*(as complex rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:37:)[^
        ]*([0-9]+: warning:[^
        ]*(as complex rather than floating" "prototype conversion warning))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-escape-1_22:
  bin: '"wtr-escape-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-escape-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of" "escaped character warning ))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(the meaning of" "escaped character warning ))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-func-def-1_204:
  bin: '"wtr-func-def-1.s"'
  cargs: ' -Wtraditional -std=gnu89 -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-func-def-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional -std=gnu89"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:9:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:42:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:80:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:86:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:106:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:112:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:136:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:141:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:148:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:153:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:159:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:167:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:183:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects ISO C style))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-int-type-1_52:
  bin: '"wtr-int-type-1.s"'
  cargs: ' -std=c99 -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-int-type-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-std=c99 -Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(integer constant is so large that it is unsigned" "so large))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:29:)[^
        ]*([0-9]+: warning:[^
        ]*(this decimal constant would be unsigned in ISO C90" "ISO C90))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-label-1_52:
  bin: '"wtr-label-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-label-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:22:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:23:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:24:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:25:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:26:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C lacks" "label conflicts with identifier))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-static-1_14:
  bin: '"wtr-static-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-static-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:8:)[^
        ]*([0-9]+: warning:[^
        ]*(non-static.*follows static" "non-static follows static))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-strcat-1_18:
  bin: '"wtr-strcat-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-strcat-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(concatenation" "string concatenation))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-suffix-1_35:
  bin: '"wtr-suffix-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-suffix-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:15:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:16:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:19:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:20:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:21:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects" "numeric constant suffix))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-switch-1_25:
  bin: '"wtr-switch-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-switch-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:11:)[^
        ]*([0-9]+: warning:[^
        ]*(switch expression" "switch expression))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-unary-plus-1_20:
  bin: '"wtr-unary-plus-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-unary-plus-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:12:)[^
        ]*([0-9]+: warning:[^
        ]*(unary plus operator" "unary plus operator))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:13:)[^
        ]*([0-9]+: warning:[^
        ]*(unary plus operator" "unary plus operator))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-union-init-1_25:
  bin: '"wtr-union-init-1.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-union-init-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:18:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-union-init-2_45:
  bin: '"wtr-union-init-2.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-union-init-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:27:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:28:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:31:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:32:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtr-union-init-3_64:
  bin: '"wtr-union-init-3.s"'
  cargs: ' -Wtraditional -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtr-union-init-3.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-Wtraditional"'
    regex-warn:
      - |-
        (^|
        )([^
        ]+(:45:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:48:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
      - |-
        (^|
        )([^
        ]+(:51:)[^
        ]*([0-9]+: warning:[^
        ]*(traditional C rejects initialization of unions" "initialization of unions))[^
        ]*
        ?)+
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_wtypequal_7:
  bin: '"wtypequal.s"'
  cargs: '  -ansi -pedantic-errors -S'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/wtypequal.c'
  herit: *GRPSERIAL
  info: {}
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero_bits_compound-1_42:
  bin: '"zero_bits_compound-1.s"'
  cargs: -O3 -dP -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/zero_bits_compound-1.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -dP"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero_bits_compound-2_41:
  bin: '"zero_bits_compound-2.s"'
  cargs: -O3 -dP -fdump-rtl-combine -ffat-lto-objects -S
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/zero_bits_compound-2.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O3 -dP -fdump-rtl-combine"'
  type: build
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
test_zero_sign_ext_test_137:
  bin: '"./zero_sign_ext_test.exe"'
  cargs: ' -O2'
  files: '@ROOTPATH@/compilers/gcc/./gcc.dg/zero_sign_ext_test.c'
  herit: *GRPSERIAL
  info:
    extraopts:
      - '"-O2"'
  type: complete
  valscript: '@ROOTPATH@/compilers/gcc/tools/gcc-valscript.pl'
