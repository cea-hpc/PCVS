#!/bin/nawk -f
#
#  To select all raw results with a given key.
#  With key: "w", "r"....

BEGIN {
	gnucommandfile = testname ".gnucmd";
	print "set data style linespoints" > gnucommandfile;
	print "set autoscale x" >> gnucommandfile;
	print "set nokey" >> gnucommandfile;
	print "set terminal postscript" >> gnucommandfile;
     # Should be careful about string length, max 50 for gnuplot
	printf("set output \"%s.ps\"\n", testname) >> gnucommandfile;
	printf("set xlabel \"Loop counter\"\n") >> gnucommandfile;
	printf("set ylabel \"Timings (sec)\"\n") >> gnucommandfile;
	gotdate = 0;
	graph = 0;
}

  (($1 == "start")&&(gotdate == 0)){
  date = $2;
  gotdate = 1;
}
 
  (($1 == "##")&&($2 == "Test")&&($3 == "input")&&($4 == "arguments")){
  testOn = 0;
  fsizeOn = 0;
}

  (($1 == "##")&&($2 == "Test")&&($3 == "output")&&($4 == "information")&&(testOn == 1)){
  fsizeOn = 1;
  graph ++;
        tmpfile = testname ".tmp" graph;
  print "#testname",testname > tmpfile;
  print "#" >> tmpfile;
  print "#",graph >> tmpfile;
}

  ("nprocs" == $1){
  nprocs = $2;
}

  (("testname" == $1)&&(testname == $2)){
  testOn = 1;
}

  (("filesize" == $1)&&(fsizeOn == 1)){
  filesize[graph] = $2*0.000001;
}

  (("blocksize" == $1)&&(fsizeOn == 1)){
  blocksize[graph] = $2*0.000001;
}

  ((testOn == 1)&&(fsizeOn == 1)&&($1 == key)){
  tnprocs = nprocs;
  if (tnprocs == 1)  print $2 >> tmpfile;
  if (tnprocs == 2)  print $2,$3 >> tmpfile;
  if (tnprocs == 3)  print $2,$3,$4 >> tmpfile;
  if (tnprocs == 4)  print $2,$3,$4,$5 >> tmpfile;
}	

#  ((testOn == 1)&&($1 == "post_time")){
#}


END{
	gnucommandfile = testname ".gnucmd";
	print "set data style linespoints" > gnucommandfile;
	print "set autoscale x" >> gnucommandfile;
	print "set nokey" >> gnucommandfile;
	print "set terminal postscript" >> gnucommandfile;
     # Should be careful about string length, max 50 for gnuplot
	printf("set output \"%s.ps\"\n", testname) >> gnucommandfile;
	printf("set xlabel \"Loop counter\"\n") >> gnucommandfile;
	printf("set ylabel \"Timings (sec)\"\n") >> gnucommandfile;
	for (i=1;i<=graph;i++){
        tmpfile = testname ".tmp" i;
	if (tnprocs == 1) {
	  printf("set title \"%s test,   key: %s,   filesize %3.1f MB, blocksize %3.2f MB    %d\"\n", testname,key,filesize[i],blocksize[i],date) >> gnucommandfile;
	  printf("plot '< tail +4 \"%s\"'\n",tmpfile) >> gnucommandfile;
	}
	if (tnprocs == 2) {
	  printf("set title \"%s test,  proc 1,  key: %s,   filesize %3.1f MB, blocksize %3.2f MB    %d\"\n", testname,key,filesize[i],blocksize[i],date) >> gnucommandfile;
	  printf("plot '< tail +4 \"%s\"' using 0:1 \n",tmpfile) >> gnucommandfile;
	  printf("set title \"%s test,  proc 2,  key: %s,   filesize %3.1f MB, blocksize %3.2f MB    %d\"\n", testname,key,filesize[i],blocksize[i],date) >> gnucommandfile;
	  printf("plot '< tail +4 \"%s\"' using 0:2 \n",tmpfile) >> gnucommandfile;
	}
	if (tnprocs == 3) {
	  printf("set title \"%s test,  proc 1,  key: %s,   filesize %3.1f MB, blocksize %3.2f MB    %d\"\n", testname,key,filesize[i],blocksize[i],date) >> gnucommandfile;
	  printf("plot '< tail +4 \"%s\"' using 0:1 \n",tmpfile) >> gnucommandfile;
	  printf("set title \"%s test,  proc 2,  key: %s,   filesize %3.1f MB, blocksize %3.2f MB    %d\"\n", testname,key,filesize[i],blocksize[i],date) >> gnucommandfile;
	  printf("plot '< tail +4 \"%s\"' using 0:2 \n",tmpfile) >> gnucommandfile;
	  printf("set title \"%s test,  proc 3,  key: %s,   filesize %3.1f MB, blocksize %3.2f MB    %d\"\n", testname,key,filesize[i],blocksize[i],date) >> gnucommandfile;
	  printf("plot '< tail +4 \"%s\"' using 0:3 \n",tmpfile) >> gnucommandfile;
	}
	}
	close(gnucommandfile);
	system("gnuplot " gnucommandfile);
#	system ("rm -f " gnucommandfile);
#	system ("rm -f " datafile);
}




